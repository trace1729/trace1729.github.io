{"config":{"lang":["ja"],"separator":"[\\s\\-\uff0c\u3002]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#_1","title":"\u5199\u4f5c\u6307\u5357","text":""},{"location":"#md","title":"# md \u57fa\u672c\u8bed\u6cd5","text":"\u5143\u7d20 Markdown \u8bed\u6cd5 \u6807\u9898\uff08Heading\uff09 <code># H1   ## H2   ### H3</code> \u7c97\u4f53\uff08Bold\uff09 <code>**bold text**</code> \u659c\u4f53\uff08Italic\uff09 <code>*italicized text*</code> \u5f15\u7528\u5757\uff08Blockquote\uff09 <code>&gt; blockquote</code> \u6709\u5e8f\u5217\u8868\uff08Ordered List\uff09 <code>1. First item</code> <code>2. Second item</code> <code>3. Third item</code> \u65e0\u5e8f\u5217\u8868\uff08Unordered List\uff09 <code>- First item   - Second item   - Third item</code> \u4ee3\u7801\uff08Code\uff09 <code>`code`</code> \u5206\u9694\u7ebf\uff08Horizontal Rule\uff09 <code>---</code> \u94fe\u63a5\uff08Link\uff09 <code>[title](https://www.example.com)</code> \u56fe\u7247\uff08Image\uff09 <code>![alt text](image.jpg)</code>"},{"location":"#_2","title":"# \u6269\u5c55\u8bed\u6cd5","text":"<p>\u8fd9\u4e9b\u5143\u7d20\u901a\u8fc7\u6dfb\u52a0\u989d\u5916\u7684\u529f\u80fd\u6269\u5c55\u4e86\u57fa\u672c\u8bed\u6cd5\u3002\u4f46\u662f\uff0c\u5e76\u975e\u6240\u6709 Markdown \u5e94\u7528\u7a0b\u5e8f\u90fd\u652f\u6301\u8fd9\u4e9b\u5143\u7d20\u3002</p> \u5143\u7d20 Markdown \u8bed\u6cd5 \u8868\u683c\uff08Table\uff09 <code>| Syntax\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0| Description |   | ----------- | ----------- |   | Header\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0| Title\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0|   | Paragraph\u00a0\u00a0\u00a0| Text\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0|</code> \u4ee3\u7801\u5757\uff08Fenced Code Block\uff09 <code>```   {   \u00a0\u00a0\"firstName\": \"John\",   \u00a0\u00a0\"lastName\": \"Smith\",   \u00a0\u00a0\"age\": 25   }   ```</code> \u811a\u6ce8\uff08Footnote\uff09 Here's a sentence with a footnote. <code>[^1]</code> <code>[^1]</code>: This is the footnote. \u6807\u9898\u7f16\u53f7\uff08Heading ID\uff09 <code>### My Great Heading {#custom-id}</code> \u5b9a\u4e49\u5217\u8868\uff08Definition List\uff09 <code>term   : definition</code> \u5220\u9664\u7ebf\uff08Strikethrough\uff09 <code>~~The world is flat.~~</code> \u4efb\u52a1\u5217\u8868\uff08Task List\uff09 <code>- [x] Write the press release   - [ ] Update the website   - [ ] Contact the media</code>"},{"location":"#md_1","title":"# md \u8fdb\u9636\u8bed\u6cd5","text":"<ol> <li> <p>\u53ef\u4ee5\u4f7f\u7528<code>!!! [note | warning | tips]</code>\u6765\u751f\u6210\u77e9\u5f62\u6846(\u6ce8\u610f\u6b63\u6587\u90e8\u5206\u9700\u8981\u7f29\u8fdb\u4e00\u4e2atab\uff0c \u4e0d\u80fd\u7528\u7a7a\u683c)</p> <pre><code>!!! note\n    This is note\n\n!!! warning\n    This is warning\n\n!!! warning \"\u53ef\u6307\u5b9a\u663e\u793a\u7684\u5b57\u7b26\u4e32\"\n    This is warning\n\n!!! tips\n    This is Tips\n\n??? tips\n    \u53ef\u6298\u53e0\n</code></pre> <p>\u6bd4\u5982\u4e0a\u8ff0\u4ee3\u7801\u4f1a\u6709\u4ee5\u4e0b\u6548\u679c</p> <p>Note</p> <p>This is note</p> <p>Warning</p> <p>This is warning</p> <p>\u53ef\u6307\u5b9a\u663e\u793a\u7684\u5b57\u7b26\u4e32</p> <p>This is warning</p> <p>Tips</p> <p>This is Tips</p> Tips <p>\u53ef\u6298\u53e0</p> </li> <li> <p>\u53ef\u4ee5\u4f7f\u7528 <code>&lt;span class=\"box box-\u989c\u8272\"&gt;\u6587\u672c&lt;/span&gt;</code> \u6765\u7ed9\u6587\u5b57\u52a0\u80cc\u666f, \u6bd4\u5982green\uff0cred\uff0cyellow...</p> <ul> <li>\u8fc7\u4e86</li> <li>\u6ca1\u6709\u8fc7</li> </ul> </li> <li> <p>\u53ef\u4ee5\u4f7f\u7528 \\(\\LaTeX\\) \u8bed\u6cd5\u6765\u6539\u53d8\u5b57\u4f53\u5927\u5c0f</p> <ul> <li><code>$\\small \u4f60\u662f\u8c01$</code> \\(\\small \u4f60\u662f\u8c01\\)</li> <li><code>$\\large \u4f60\u662f\u8c01$</code> \\(\\large \u4f60\u662f\u8c01\\)</li> <li><code>$\\Large \u4f60\u662f\u8c01$</code> \\(\\Large \u4f60\u662f\u8c01\\)</li> <li><code>$\\LARGE \u4f60\u662f\u8c01$</code> \\(\\LARGE \u4f60\u662f\u8c01\\)</li> <li><code>$\\huge \u4f60\u662f\u8c01$</code> \\(\\huge \u4f60\u662f\u8c01\\)</li> </ul> </li> </ol> <p>Created by Class of 2024.</p> <p>Website maintained by Kaichen Gong, Erhao Shu.</p>"},{"location":"archive/cs61c-intro-risc/","title":"CS61C 1","text":""},{"location":"archive/cs61c-intro-risc/#isa","title":"ISA \u7684\u6982\u5ff5","text":""},{"location":"archive/cs61c-intro-risc/#risc-cisc","title":"RISC \u548c CISC","text":"<p>\u4e0a\u4e16\u7eaa\u6709\u4e24\u79cd\u6d41\u884c\u7684\u8ba1\u7b97\u673a\u7ec4\u7ec7\u7ed3\u6784</p> <ul> <li>CISC Complex Instruction Set Computer</li> </ul> <p>The main idea behind this is to make hardware simpler by using an instruction set composed of a few basic steps for loading, evaluating, and storing operations just like a load command will load data, a store command will store the data</p> <ul> <li>RISC reduced Instruction Set Computer</li> </ul> <p>The main idea is that a single instruction will do all loading, evaluating, and storing operations just like a multiplication command will do stuff like loading data, evaluating, and storing it, hence it\u2019s complex.</p> <p>\u57fa\u4e8e\u8fd9\u4e24\u7c7b\u7ec4\u7ec7\u7ed3\u6784\uff0c\u786c\u4ef6\u5de5\u7a0b\u5e08\u5f00\u53d1\u4e86\u591a\u79cd\u4e0d\u540c\u7684\u6307\u4ee4\u96c6(ISA)</p>"},{"location":"archive/cs61c-intro-risc/#isa-example","title":"ISA example","text":"<ul> <li> <p>\u57fa\u4e8e CISC \u5f00\u53d1</p> </li> <li> <p>Intel x86</p> </li> <li> <p>\u57fa\u4e8e RISC \u5f00\u53d1</p> </li> <li> <p>ARM</p> </li> <li> <p>RISC I - V </p> <p>1981\u5e74 \u7531 berkelay </p> </li> <li> <p>MIPS</p> </li> </ul>"},{"location":"archive/cs61c-intro-risc/#risc","title":"RISC","text":"<ul> <li>risc\u8bbe\u8ba1\u601d\u60f3\u662f\u5f53\u524d\u82af\u7247\u8bbe\u8ba1\u7684\u4e3b\u5bfc</li> <li>\u76ee\u524d intel x86 \u7684\u5e95\u5c42\u4e5f\u4f7f\u7528\u4e86 risc \u7684\u601d\u60f3\uff0c\u5373\u5c06\u4e00\u6761\u590d\u6742\u7684\u6307\u4ee4\u62c6\u5206\u6210\u591a\u6761\u7b80\u5355\u6307\u4ee4\u6267\u884c</li> </ul>"},{"location":"archive/cs61c-intro-risc/#risc-v","title":"RISC V","text":""},{"location":"archive/cs61c-intro-risc/#registers","title":"registers","text":"<ul> <li>RISC V \u753132\u4e2a\u5bc4\u5b58\u5668 \\(x_0\\) - \\(x_{31}\\)\u7ec4\u6210</li> <li> <p>\u53ef\u4ee5\u4f7f\u7528 \u6570\u5b57 \u6216\u8005 \u5bc4\u5b58\u5668\u540d \u6765\u5f15\u7528\u5bc4\u5b58\u5668</p> <ul> <li>\u4fdd\u5b58\u53d8\u91cf\u540d   \\(s_0\\) - \\(s_1\\) &lt;=&gt; \\(x_8\\) - \\(x_9\\),</li> </ul> <p>\\(s_2\\) - \\(s_{11}\\) &lt;=&gt; \\(x_{18}\\) - \\(x_{27}\\)  - \u4fdd\u5b58\u4e34\u65f6\u53d8\u91cf  \\(s_0\\) - \\(s_2\\) &lt;=&gt; \\(x_5\\) - \\(x_7\\),</p> <p>\\(s_3\\) - \\(s_{6}\\) &lt;=&gt; \\(x_{28}\\) - \\(x_{31}\\) * \\(x_0\\) \u662f 0\u5bc4\u5b58\u5668, \u5176\u503c\u6c38\u8fdc\u662f \\(0\\) * \u5b58\u50a8\u5728\u5bc4\u5b58\u5668\u4e2d\u7684\u6570\u503c \u6ca1\u6709 \u7c7b\u578b\u4e4b\u5206\uff0c\u6570\u503c\u7684\u7c7b\u578b\u53d6\u51b3\u4e8e\u5bf9\u6570\u503c\u8fdb\u884c\u7684\u64cd\u4f5c</p> </li> </ul>"},{"location":"archive/cs61c-intro-risc/#_1","title":"\u6307\u4ee4","text":"<p>Instruction Syntax is rigid: op dst, src1, src2</p> <ul> <li>1 operator, 3 operands</li> <li>op = operation name (\u201coperator\u201d)</li> <li>dst = register getting result (\u201cdestination\u201d)</li> <li>src1 = first register for operation (\u201csource 1\u201d)</li> <li>src2 = second register for operation (\u201csource 2\u201d)</li> </ul>"},{"location":"archive/cs61c-intro-risc/#_2","title":"\u7b97\u6570\u6307\u4ee4","text":"<p>c: <code>a = (b + c) - (d + e)</code></p> <p>risc:  <pre><code>add s0 t1 t2 # b+c\nadd s1 t3 t4 # d+e\nsub s2 s0 s1 # (b+c) - (d+e)\n</code></pre></p>"},{"location":"archive/cs61c-intro-risc/#_3","title":"\u7acb\u5373\u6570","text":"<p>c: <code>a = c + 5</code></p> <p>risc: <code>addi s0 s1 5</code></p>"},{"location":"archive/cs61c-intro-risc/#_4","title":"\u6570\u636e\u4f20\u8f93\u6307\u4ee4","text":"<p>Instruction syntax for data transfer:</p> <ul> <li>memop reg, off(bAddr)</li> <li>memop = operation name (\u201coperator\u201d)</li> <li>reg = register for operation source or destination</li> <li>bAddr = register with pointer to memory (\u201cbase   address\u201d)</li> <li>off = address offset (immediate) in bytes (\u201coffset\u201d)</li> </ul> <p>c: <code>a[10] = a[3] + b</code></p> <p>risc: <pre><code>  lw t0, 12(s3)     \n  add t0 s1 t0\n  sw t0, 40(s3) # \u5c06t0 \u5b58\u5165 s3\n</code></pre> \u5927\u7aef\u5c0f\u7aef</p> <ul> <li>\u5927\u7aef <p>Most-significant byte at least address of word</p> </li> <li>\u5c0f\u7aef <p>Least-significant byte at least address of word</p> </li> </ul> <p>risc v \u4f7f\u7528\u7684\u662f \u5c0f\u7aef\u6cd5</p> <p>\u5b57\u8282\u64cd\u4f5c </p> <p>For example, let s0 = 0x00000180:</p> <p><pre><code>lb s1,1(s0)\nlb s2,0(s0)\nsb s2,2(s0)\n48\n# s1=0x00000001\n# s2=0xFFFFFF80\n# *(s0)=0x00800180\n</code></pre> \u6ce8\u610f\u7ec6\u8282</p> <ul> <li>\u5c0f\u6807\u4ece0\u5f00\u59cb</li> <li>\u7531\u4e8e\u6570\u636e\u4ee5\u5c0f\u7aef\u65b9\u5f0f\u5b58\u50a8\uff0c\u5f15\u7528\u6570\u636e\u662f\u4ece\u5730\u4f4d\u5411\u9ad8\u4f4d\u8ba1\u7b97\u5b50\u8282\u6570</li> <li>\u4e00\u4e2a\u5b50\u82828\u4f4d =&gt; \u4e24\u4f4d16\u8fdb\u5236</li> <li>\u6ce8\u610f\u7b26\u53f7\u6269\u5c55  </li> </ul>"},{"location":"archive/cs61c-intro-risc/#_5","title":"\u6761\u4ef6\u5224\u65ad","text":"<ul> <li>Branch if equal</li> <li>beq reg1, reg2, label</li> <li>if v(reg1) == v(reg2)</li> <li>go to label </li> <li>Branch if not equal</li> <li>bne reg1, reg2, label</li> <li>if v(reg1) != v(reg2)</li> <li>go to label </li> <li>Branch if less than</li> <li>blt </li> <li>Branch if greater than or equal </li> <li>bgt</li> <li>jump</li> <li>j label</li> <li>unconditional jump to label</li> </ul> <p>   In cpp     <pre><code>if (i ==j) a = b\nelse a = -b\n</code></pre> </p> <p>     In risc 5     <pre><code># i -&gt; s0, j -&gt; s1\n# a -&gt; s2, b -&gt; s3\nbeq s0, s1, then\n\nelse:  # if true\nsub s2 x0 s3\n  j end\n\nthen: # if false\nadd s2 x3 x0\n  j end\n\nend:\n</code></pre> </p>"},{"location":"archive/cs61c-intro-risc/#_6","title":"\u79fb\u4f4d\u64cd\u4f5c","text":"<ul> <li>\u903b\u8f91\u53f3\u79fb \u5728\u5de6\u8fb9\u88650</li> <li>\u903b\u8f91\u5de6\u79fb \u5728\u53f3\u8fb9\u88650</li> <li>\u7b97\u6570\u53f3\u79fb \u5728\u5de6\u8fb9\u88651</li> </ul>"},{"location":"archive/cs61c-intro-risc/#some-tips","title":"some tips","text":"<p>   `op` \u6307\u4ee4 \u4e0e `op+i` \u6307\u4ee4\u7684\u533a\u522b\u5728\u4e0e \u540e\u8005\u7b2c\u4e09\u4e2a\u53c2\u6570\u4e3a\u7acb\u5373\u6570\u800c\u975e\u5bc4\u5b58\u5668</p> <p>   \u6ce8\u610f\u6ca1\u6709`subi`\u6307\u4ee4</p>"},{"location":"archive/math-equation-test/","title":"math_equation_test","text":"\\[ \\frac{1}{n \\left( n+k \\right)}= \\frac{1}{k}\\left( \\frac{1}{n}-\\frac{1}{n+k}\\right)  \\] \\[ \\begin{array}{c}    \\text{\u82e5}\\left \\{a_{n}\\right \\}\u3001\\left \\{b_{n}\\right \\}\\text{\u4e3a\u7b49\u5dee\u6570\u5217}, \\\\    \\text{\u5219}\\left \\{a_{n}+ b_{n}\\right \\}\\text{\u4e3a\u7b49\u5dee\u6570\u5217}  \\end{array} \\] \\[ \\begin{pmatrix}     a_{11} &amp; a_{12} &amp; a_{13} \\\\     a_{21} &amp; a_{22} &amp; a_{23} \\\\     a_{31} &amp; a_{32} &amp; a_{33}   \\end{pmatrix}  \\]"},{"location":"archive/proxy-configration-for-linux/","title":"\u5728\u963f\u91cc\u4e91\u670d\u52a1\u5668\u4e0a\u914d\u7f6e\u4ee3\u7406\u6d41\u7a0b\u8bb0\u5f55","text":""},{"location":"archive/proxy-configration-for-linux/#_2","title":"\u8d2d\u4e70\u673a\u573a\u8ba2\u9605","text":"<ul> <li>\u5927\u673a\u573a</li> <li>......</li> </ul>"},{"location":"archive/proxy-configration-for-linux/#clash","title":"\u4e0b\u8f7dclash","text":"<ul> <li>\u641c\u7d22clash for windows, \u9009\u62e9 Clash.for.Windows.Setup.0.19.25.exe \u4e0b\u8f7d\uff0c\u5b89\u88c5</li> </ul>"},{"location":"archive/proxy-configration-for-linux/#clash-windows","title":"\u914d\u7f6eclash \uff08windows\uff09","text":"<ul> <li>\u4ece\u673a\u573a\u5b98\u7f51\u5c06\u5730\u5740\u4e00\u952e\u5bfc\u5165clash\uff0c\u6253\u5f00\u4ee5\u4e0b\u4e94\u4e2a\u9009\u9879</li> </ul> <p>\u200b * \u8fdb\u5165 profile, \u9009\u62e9 \u5728\u6587\u4ef6\u5939\u6253\u5f00\u914d\u7f6e\u6587\u4ef6</p> <p>\u200b * \u5c06\u6587\u4ef6\u5939\u4e2d\u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u590d\u5236\u5230linux \u4e3b\u673a\u4e0a\u7684\u7279\u5b9a\u76ee\u5f55\u4e0b\uff08\u5047\u5b9a\u6211\u4eec\u653e\u7f6e\u5728\u4e86/home/trace/clash \u6587\u4ef6\u5939\u4e2d\uff09</p>"},{"location":"archive/proxy-configration-for-linux/#linux-clash","title":"linux \u7aef clash \u914d\u7f6e","text":""},{"location":"archive/proxy-configration-for-linux/#clash_1","title":"\u4e0b\u8f7dclash","text":"<ul> <li>\u8fdb\u5165clash\u7684github relesse\u9875\u9762, \u4e0b\u8f7dclash-freebsd-amd64-v3-v1.11.4.gz\uff0c\u5e76\u4e0a\u4f20\u5230linux\u4e3b\u673a\u7684clash\u6587\u4ef6\u5939\u4e2d</li> </ul>"},{"location":"archive/proxy-configration-for-linux/#_3","title":"\u89e3\u538b\u6587\u4ef6","text":"<ul> <li>gzip -d {filename}  =&gt; .gz \u540e\u7f00</li> <li>tar -xf {filename}  =&gt; .tar.gz \u540e\u7f00</li> </ul>"},{"location":"archive/proxy-configration-for-linux/#_4","title":"\u6dfb\u52a0\u53ef\u6267\u884c\u6743\u9650","text":"<ul> <li>chmod +x clash-freebsd-amd64-v3-v1.11.4</li> </ul>"},{"location":"archive/proxy-configration-for-linux/#_5","title":"\u8fd0\u884c","text":"<pre><code>./clash-freebsd-amd64-v3-v1.11.4 -f {\u4f60\u7684\u8ba2\u9605\u6587\u4ef6\u540d}.yml 2&gt;&amp;1\n\nsudo vim ~/.zshrc\n    \u5728\u6587\u4ef6\u6700\u540e\u52a0\u5165\u4ee5\u4e0b\u4e24\u884c\n    export http_proxy=http://127.0.0.1:7890\n    export https_proxy=http://127.0.0.1:7890\n\u6d4b\u8bd5\n    curl www.google.com\n</code></pre>"},{"location":"archive/proxy-configration-for-linux/#_6","title":"\u7ec8\u6b62\u8fd0\u884c","text":"<ul> <li>\u6740\u8fdb\u7a0b</li> </ul> <p><pre><code>ps -ef | grep clash\nkill -9 {pid} </code></pre> * \u53d6\u6d88\u4ee3\u7406</p> <pre><code>unset http_proxy\nunset https_proxy\nunset no_proxy\n</code></pre>"},{"location":"archive/%E6%97%A0%E7%A9%B7%E7%BA%A7%E6%95%B0/","title":"\u65e0\u7a77\u7ea7\u6570","text":"<p>To find all \\((p, q)\\)for which the improper integral</p> \\[ \\int_{2}^{\\infty} \\frac{1}{x^q \\cdot (\\ln x)^p} dx  \\] <p>converges, we will analyze each case separately:</p> <p>Case 1: \\(p &gt; 1\\)</p> <p>When \\(p &gt; 1\\), the integral becomes</p> \\[ \\int_{2}^{\\infty} \\frac{1}{x^q \\cdot (\\ln x)^p} dx \\] <p>Since \\((\\ln x)^p\\) increases faster than any polynomial in \\(x\\) as \\(x\\) approaches infinity, the denominator \\((x^q \\cdot (\\ln x)^p)\\) decreases faster than any power of \\(x\\) as \\(x\\) approaches infinity.</p> <p>By the p-series test, if \\(p &gt; 1\\), then the integral of \\(\\frac{1}{x^p}\\) from \\(2\\) to \\(\\infty\\) converges. Since the denominator \\((x^q \\cdot (\\ln x)^p)\\) decreases even faster than \\(\\frac{1}{x^p}\\), the integral \\(\\int_{2}^{\\infty} \\frac{1}{x^q \\cdot (\\ln x)^p} dx\\) also converges for \\(p &gt; 1\\).</p> <p>Case 2: \\(0 &lt; p \\leq 1\\)</p> <p>When \\(0 &lt; p \\leq 1\\), the integral becomes</p> \\[ \\int_{2}^{\\infty} \\frac{1}{x^q \\cdot (\\ln x)^p} dx \\] <p>Now we need to compare the integrand \\(\\frac{1}{x^q \\cdot (\\ln x)^p}\\) with \\(\\frac{1}{x}\\) as \\(x\\) approaches infinity. Take the limit of the ratio:</p> \\[ \\lim_{{x \\to \\infty}} \\frac{\\frac{1}{x^q \\cdot (\\ln x)^p}}{\\frac{1}{x}} = \\lim_{{x \\to \\infty}} \\frac{x}{x^q \\cdot (\\ln x)^p} = \\lim_{{x \\to \\infty}} \\frac{1}{x^{q-1} \\cdot (\\ln x)^p} \\] <p>Now, there are two cases to consider:</p> <p>2.1 If \\(q - 1 &gt; 0\\) (i.e., \\(q &gt; 1\\)):</p> <p>In this case, the integrand approaches zero faster than \\(\\frac{1}{x}\\) as \\(x\\) approaches infinity, and the integral will converge.</p> <p>2.2 If \\(q - 1 \\leq 0\\) (i.e., \\(q \\leq 1\\)):</p> <p>In this case, the integrand behaves similarly to \\(\\frac{1}{x}\\) as \\(x\\) approaches infinity, and the integral may converge or diverge depending on the value of \\(q\\).</p> <p>Therefore, for \\(0 &lt; p \\leq 1\\), the integral converges if \\(q &gt; 1\\).</p> <p>Case 3: \\(p \\leq 0\\)</p> <p>When \\(p \\leq 0\\), the integral becomes</p> \\[ \\int_{2}^{\\infty} \\frac{1}{x^q \\cdot (\\ln x)^p} dx \\] <p>In this case, the integrand may not approach zero as \\(x\\) approaches infinity, which could lead to divergence for certain values of \\(q\\).</p> <p>Conclusion:</p> <ul> <li>For \\(p &gt; 1\\), the integral converges for any \\(q \\in (-\\infty, +\\infty)\\).</li> <li>For \\(0 &lt; p \\leq 1\\), the integral converges if \\(q &gt; 1\\).</li> <li>For \\(p \\leq 0\\), the integral may converge or diverge depending on the value of \\(q\\).</li> </ul>"},{"location":"archive/%E8%80%83%E7%A0%94/","title":"\u8003\u7814","text":"<p>\u590d\u8bd5\u5b66\u751f\u540d\u5355 </p> <p>\u4e13\u4e1a\u76ee\u5f55\u67e5\u8be2 </p> \u4e13\u4e1a\u4ee3\u7801 \u4e13\u4e1a\u540d\u79f0 \u9884\u8ba1\u62db\u6536\u4eba\u6570 \u8fdb\u5165\u590d\u8bd5\u4eba\u6570 \u6700\u4f4e\u5206 \u6700\u9ad8\u5206 081200 \u8ba1\u7b97\u673a\u79d1\u5b66\u4e0e\u6280\u672f 28 36 298 379 085404 \u8ba1\u7b97\u673a\u6280\u672f 100 114 341 404 085405 \u8f6f\u4ef6\u5de5\u7a0b 40 50 321 383 085412 \u7f51\u7edc\u4e0e\u4fe1\u606f\u5b89\u5168 14 22 331 398"},{"location":"notes/dl/","title":"Dl","text":"<p>${toc}</p>"},{"location":"notes/dl/#_1","title":"\u672f\u8bed","text":"zh en \u5f20\u91cf Tensor &lt;++&gt; \u6807\u91cf\u51fd\u6570 Scalar fucntion &lt;++&gt; \u5168\u8fde\u63a5\u5c42 full connected layer \u8f93\u51fa\u5c42\u4e2d\u7684\u795e\u7ecf\u5143\u548c\u8f93\u2f0a\u5165\u5c42\u4e2d\u5404\u4e2a\u8f93\u2f0a\u5165\u5b8c\u5168\u8fde \u63a5 \u7279\u5f81 feature \u9884\u6d4b\u6807\u7b7e\u7684\u56e0\u5b50 (\u6743\u91cd) \u6807\u7b7e label \u771f\u5b9e\u503c"},{"location":"notes/dl/#dl-lec-1","title":"DL Lec 1","text":"<p>some concepts </p> <ul> <li><code>deep learning</code> is a subset of <code>machine learning</code></li> <li><code>machine learning</code> is a subset of <code>artificial intelligence</code></li> </ul> <p>The difference between DL and traditional ML</p> <ul> <li>\u6df1\u5ea6\u5b66\u4e60\u4e0d\u9700\u8981\u4eba\u5de5\u63d0\u53d6\u7279\u5f81\uff0c\u4f20\u7edf\u673a\u5668\u5b66\u4e60\u9700\u8981 </li> </ul> <p>Important factors(\u5173\u952e\u8981\u7d20) </p> <ul> <li>\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\u6a21\u578b</li> <li>\u5927\u89c4\u6a21\u6570\u636e\u96c6</li> <li>\u5927\u89c4\u6a21\u8ba1\u7b97\u8d44\u6e90 </li> </ul> <p>Q: \u89e3\u91ca\u6df1\u5ea6\u5b66\u4e60\u8fd1\u51e0\u5e74\u706b\u7206\u7684\u539f\u56e0  A: \u968f\u7740\u4e92\u8054\u7f51\u7684\u53d1\u5c55\uff0c\u7f51\u7edc\u4e0a\u7684\u8bed\u6599\u548c\u89c6\u9891\u6570\u636e\u8db3\u591f\u5e9e\u5927      GPU \u7684\u7b97\u529b\u9010\u5e74\u589e\u957f </p> <p>Classifying dataset </p> <ol> <li>tranning Set</li> <li>validating Set</li> <li>test Set </li> </ol> <p>genenralization (\u6cdb\u5316) </p> <ul> <li>\u8fc7\u62df\u5408 \u6cdb\u5316\u8bef\u5dee\u5927  </li> <li>\u6b20\u62df\u5408 \u8bad\u7ec3\u96c6\u4e0a\u548c\u6d4b\u8bd5\u96c6\u4e0a\u6548\u679c\u90fd\u5dee  </li> </ul> <p></p>"},{"location":"notes/dl/#lab1","title":"lab1 \u73af\u5883\u914d\u7f6e","text":"<ul> <li>\u9996\u5148\u9700\u8981\u88c5 <code>anaconda</code> </li> </ul> <p><code>yay -S anaconda</code></p> <ul> <li>\u6362\u6e90</li> </ul> <pre><code>conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free\nconda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main\nconda config --set show_channel_urls yes\n</code></pre> <ul> <li>\u52a0\u8f7d\u914d\u7f6e\u6587\u4ef6 </li> </ul> <p><code>source /opt/anaconda/bin/activate root</code></p> <ul> <li>\u5b89\u88c5 <code>pytorch</code> \u7684\u5e93</li> </ul> <p></p> <p>\u6ce8\u610f\u52a0\u4e0a <code>sudo</code> \u56e0\u4e3a\u8981\u5bf9 <code>/opt</code> \u76ee\u5f55\u8fdb\u884c\u5199\u5165\u64cd\u4f5c</p> <ul> <li>\u6d4b\u8bd5 minst \u6570\u636e\u96c6</li> </ul>"},{"location":"notes/dl/#_2","title":"\u52a8\u624b\u5b66\u4e60\u6df1\u5ea6\u5b66\u4e60\u7b2c\u4e8c\u7ae0","text":""},{"location":"notes/dl/#lec-3","title":"Lec 3 \u795e\u7ecf\u7f51\u7edc\u7b80\u4ecb","text":"<p>\u795e\u7ecf\u7f51\u7edc\u57fa\u672c\u7ed3\u6784 </p> <ul> <li>\u8f93\u5165\u5c42\u3002\u8868\u793a\u539f\u59cb\u8f93\u5165\u6570\u636e\uff0c\u4e00\u822c\u53ea\u6709\u4e00\u5c42, \u8f93\u5165\u7b2c\u4e00\u5c42\u8bb0\u4e3a\u795e\u7ecf\u7f51\u7edc\u7684\u7b2c0\u5c42</li> <li>\u9690\u85cf\u5c42\u3002\u5bf9\u8f93\u5165\u6570\u636e\u8fdb\u884c \u975e\u7ebf\u6027\u53d8\u6362 ,\u4ee5\u8fdb\u884c\u7279\u5f81\u63d0\u53d6\u548c\u52a0\u5de5\uff0c\u4e00\u822c\u6709\u591a\u4e2a\u9690\u85cf\u5c42\u3002 \u7b2c\u4e00\u4e2a\u9690\u85cf\u5c42\u8bb0\u4e3a\u795e\u7ecf\u7f51\u7edc\u7684\u7b2c\u4e00\u5c42</li> <li>\u8f93\u51fa\u5c42\u3002\u8868\u793a\u5206\u7c7b\u7684\u7ed3\u679c\u3002\u8981\u5206\u6210\u51e0\u7c7b\uff0c\u8f93\u51fa\u5c42\u5c31\u6709\u51e0\u4e2a\u795e\u7ecf\u5143, \u8f93\u51fa\u5c42\u53ea\u6709\u4e00\u5c42\u3002</li> </ul> <p>\u795e\u7ecf\u7f51\u7edc\u7684\u91cd\u8981\u6982\u5ff5 </p> <ul> <li>\u8f93\u5165</li> <li>\u8f93\u51fa</li> <li>\u6fc0\u6d3b\u51fd\u6570</li> <li>\u53c2\u6570</li> </ul> <p>Q: \u5168\u8fde\u63a5\u795e\u7ecf\u7f51\u7edc\u4e2d\u67d0\u4e00\u5c42\u7684\u8f93\u5165\u8f93\u51fa\u7ef4\u5ea6\u5982\u4f55\u786e\u5b9a  A: \u8f93\u5165\u7ef4\u5ea6\u7531\u4e0a\u4e00\u5c42\u795e\u7ecf\u5143\u4e2a\u6570\u786e\u5b9a\uff0c\u8f93\u51fa\u7ef4\u5ea6\u7531\u672c\u5c42\u795e\u7ecf\u5143\u786e\u5b9a </p> <p>\u8f93\u5165\u8f93\u51fa </p> <p>\\(H_i^{(i)}\\) \u4e0b\u6807 i \u8868\u793a\u7b2c\u4e2a\u795e\u7ecf\u539f\uff0c\u4e0a\u6807 1 \u8868\u793a\u5728\u7b2c I \u5c42, \u6574\u4e2a\u8868\u8fbe\u5f0f\u542b\u610f\u4e3a \u7b2c I \u5c42 \u7b2c i \u4e2a\u795e\u7ecf\u5143\u7684\u503c</p> <p>\\(w_{i j}^{(k)}\\)  i \u8868\u793a\u524d\u4e00\u5c42\u795e\u7ecf\u5143\u7684\u4f4d\u7f6e\uff0c j \u8868\u793a\u540e\u4e00\u5c42\u795e\u7ecf\u5143\u7684\u4f4d\u7f6e\uff0ck \u8868\u793a\u5728\u7b2c k \u5c42 \u6574\u4e2a\u8868\u8fbe\u5f0f\u7684\u542b\u610f\u4e3a \u4ece k - 1 \u5c42 \u7684 \u7b2c i \u4e2a\u795e\u7ecf\u5143 \u5230 k \u7684\u7b2c j \u4e2a\u795e\u7ecf\u5143\u7684\u6743\u503c</p> <p>\\(b_i^{(i)}\\) \u4e0b\u6807 i \u8868\u793a\u7b2c\u4e2a\u795e\u7ecf\u539f\uff0c\u4e0a\u6807 i \u8868\u793a\u5728\u7b2c i \u5c42, \u6574\u4e2a\u8868\u8fbe\u5f0f\u542b\u610f\u4e3a \u7b2c i \u5c42 \u7b2c i \u4e2a\u795e\u7ecf\u5143\u7684\u504f\u7f6e\u7684\u503c </p> <p>\u8ba1\u7b97\u516c\u5f0f</p> <p>\u77e9\u9635\u5f62\u5f0f\uff1a</p> \\[ h^{(i)} = h^{(i - 1)} \\cdot W^{(i)} + b^{(i)} \\] <p>\u5c55\u5f00\uff1a</p> \\[ (h_1^{(i)} ,h_2^{(i)}, \\cdots h_n^{(i)}) = (h_1^{(i-1)} ,h_2^{(i-1)}, \\cdots h_m^{(i-1)})   \\begin{bmatrix} w_{11}^{(i)} &amp; \\dots &amp; w_{1n}^{(i)}\\\\   &amp; \\ddots &amp; \\vdots\\\\ w_{m1}^{(i)} &amp; &amp; w_{mn}^{(i)} \\end{bmatrix} + (b_1^{(i)} ,b_2^{(i)}, \\cdots b_n^{(i)}) \\] <p>\u6fc0\u6d3b\u51fd\u6570</p> <p>\u5e38\u89c1\u7684\u6fc0\u6d3b\u51fd\u6570\u6709</p> <ul> <li><code>softmax</code> \\(\\frac{1}{1 + e^{-x}}\\) </li> <li><code>tan(h(x))</code> \\(tan(x)\\) </li> <li><code>ReLU</code> max(0, x)</li> </ul> \\[ h^{(i)} = f(h^{(i - 1)} \\cdot W^{(i)} + b^{(i)}) \\] <p>Q: \u6fc0\u6d3b\u51fd\u6570\u7684\u4f5c\u7528\u662f\u4ec0\u4e48 A: \u5bf9\u795e\u7ecf\u7f51\u7edc\u52a0\u5165\u975e\u7ebf\u6027\u64cd\u4f5c\uff0c\u589e\u5f3a\u795e\u7ecf\u7f51\u7edc\u7684\u62df\u5408\u80fd\u529b\uff0c \u5982\u679c\u4e0d\u52a0\u5165\u6fc0\u6d3b\u51fd\u6570\uff0c\u90a3\u4e48\u9690\u85cf\u5c42\u5c06\u9000\u5316\u4e3a\u4e00\u5c42</p> <p>\u6700\u540e\u5bf9\u8f93\u5165\u91c7\u7528 <code>softmax</code> \u51fd\u6570\u8fdb\u884c\u5904\u7406\u3002(\u4fdd\u8bc1\u6570\u636e\u8303\u56f4\u5728 (0, 1) \u5185, \u4e14\u6240\u6709\u8f93\u51fa\u7684\u503c\u76f8\u52a0\u4e3a\u4e00)</p> <p>\u5e38\u89c1\u8bad\u7ec3\u6a21\u578b </p> <p></p> <p>\u795e\u7ecf\u7f51\u7edc-\u53c2\u6570 </p> <p>\u5168\u76f8\u8fde\u795e\u7ecf\u7f51\u7edc\u7684\u53c2\u6570\u5206\u4e3a\u4e24\u90e8\u5206\uff0c\u6743\u91cd\u548c\u53c2\u6570</p> <p>\u6743\u91cd\u6570 = \u4e0a\u4e00\u5c42\u795e\u7ecf\u5143 * \u672c\u5c42\u795e\u7ecf\u5143 \u504f\u7f6e\u6570 = \u672c\u5c42\u795e\u7ecf\u5143\u6570\u91cf </p> <p>\u8bad\u7ec3\u7f51\u7edc\u76ee\u7684\u5c31\u662f\u4e86\u627e\u5230\u5408\u9002\u7684\u6743\u91cd\u548c\u504f\u7f6e</p> <p>\u8bad\u7ec3\u6d41\u7a0b </p> <p>\u521d\u59cb\u5316\u53c2\u6570: \u9ad8\u65af\u968f\u673a</p> <p>\u795e\u7ecf\u7f51\u7edc\u8bad\u7ec3\u603b\u63fd </p> <p></p> <p>\u968f\u673a\u68af\u5ea6\ud83d\udcc9</p> <p>batch: \u6279, \u8ba1\u7b97\u4e00\u4e2a batch \u5373 \u4e00\u6b21\u8fed\u4ee3     batch-size</p> <p>epoch: \u8f6e</p> <p></p> <p>\u9a8c\u8bc1\u96c6\u6d4b\u8bd5</p>"},{"location":"notes/dl/#lab2","title":"lab2","text":"<p>\u4f5c\u4e1a: </p> <p></p> <p>\u9996\u5148\u6211\u4eec\u6765\u5b9e\u73b0\u4e00\u4e0b\u8bfe\u4e0a\u6240\u8bb2\u7684 MNIST \u6570\u636e\u96c6</p> <ul> <li>\u7b2c\u4e00\u6b65 \u5b9a\u4e49\u7f51\u7edc\u7ed3\u6784</li> </ul> <p>\u6211\u4eec\u9996\u5148\u4ec5\u4ec5\u8bbe\u7f6e\u4e00\u4e2a\u9690\u85cf\u5c42</p> <p></p> <p><pre><code>class FCNet1(nn.modules):\n    def __init__(self, **kwargs) -&gt; None:\n        super(FCNet1, self).__init__(**kwargs)\n\n        self.hidden = nn.Linear(784, 256)\n        self.active = nn.ReLU()\n        self.output = nn.Linear(256, 10)\n\n    def forward(self, img):\n        hidden = self.hidden(img)\n        active = self.active(hidden)\n        out = self.output(active)\n\n        return out\n</code></pre> - \u52a0\u8f7d\u6570\u636e\u96c6</p> <pre><code>train_data = torchvision.datasets.MNIST(root='./data',\n                                        train=True,\n                                        download=False,\n                                        transform=trans)\n\ntest_data = torchvision.datasets.MNIST(root='./data',\n                                       train=False,\n                                       download=False,\n                                       transform=trans)\n\ntrain_data_loader = data.DataLoader(\n    dataset=train_data,\n    batch_size=200,\n    shuffle=True, # \u6bcf\u4e00\u6b21\u7528\u540c\u4e00\u4e2abatch \u90fd\u6253\u4e71\u987a\u5e8f\n    num_workers=4 # \u5de5\u4f5c\u6838\u5fc3\n)\n\ntest_data_loader = data.DataLoader(\n    dataset=test_data,\n    batch_size=200,\n    shuffle=False, # \u6bcf\u4e00\u6b21\u7528\u540c\u4e00\u4e2abatch \u90fd\u6253\u4e71\u987a\u5e8f\n    num_workers=4 # \u5de5\u4f5c\u6838\u5fc3\n)\n</code></pre> <ul> <li>\u5b9a\u4e49 loss function</li> </ul> <p><code>loss = nn.CrossEntropyLoss()</code></p> <ul> <li>\u5b9a\u4e49 \u4f18\u5316\u5668</li> </ul> <p><code>optimizer1 = optim.SGD(net1.parameters(), lr=0.01)</code></p> <ul> <li>\u5f00\u59cb\u8bad\u7ec3</li> </ul> <pre><code>def train(net,\n          train_iter,\n          test_iter,\n          loss,\n          num_epochs=10,\n          optimizer=None,\n          device=None):\n\n    n = 0 # \u603b\u6570\n    for epoch in range(1, num_epochs + 1):\n        train_loss_sum, train_acc_sum = 0, 0\n        for train_images, labels in train_iter:\n            # \u5c06\u6570\u636e\u5b58\u653e\u5728 CPU\n            assert isinstance(train_images, torch.Tensor)\n            assert isinstance(labels, torch.Tensor)\n            # torch.Size([200, 1, 28, 28])\n            train_images.to(device)\n            labels.to(device)\n            # torch.Size([200, 1])\n\n            # forward\n            output = net(train_images)\n\n            los = loss(output, labels).sum()\n\n            optimizer.zero_grad()\n\n            # backward\n            los.backward()\n            optimizer.step()\n            train_loss_sum += los\n\n            # argmax(dim=1) \u8fd4\u56de \u4e00\u5217\u5143\u7d20\u6700\u5927\u7684\u90a3\u4e2a\u4e0b\u6807 (200 * 10)\n            accruate = (output.argmax(dim=1) == labels).sum().item()\n            train_acc_sum += accruate\n            n += labels.shape[0]\n\n        test_accuracy = test(net, test_iter)\n\n        print(\n            f'epoch {epoch}, train_loss {train_loss_sum / n}, train_accuracy {train_acc_sum / n}, test_accuracy {test_accuracy}'\n        )\n        n = 0\n</code></pre> <ul> <li>\u5982\u4f55\u8c03\u6574\u5b66\u4e60\u7387</li> </ul> <p>\u9996\u5148\u4ece 0.01 \u5f00\u59cb\uff0c\u6309\u7167 10 \u7684\u6b21\u5e42\u5f00\u59cb\u8c03\u6574\u3002</p> <p>\u8c03\u6574\u5fc3\u8def\u5386\u7a0b <code>0.01 -&gt; 0.1 -&gt; 0.2 -&gt; 0.15 -&gt; 0.165</code></p>"},{"location":"notes/dl/#autograd","title":"\u6709\u5173 <code>autograd</code>","text":""},{"location":"notes/dl/#_3","title":"\u5377\u79ef\u795e\u7ecf\u7f51\u7edc","text":"<p>\u4f7f\u7528\u5168\u8fde\u63a5\u795e\u7ecf\u7f51\u7edc\uff0c \u4f1a\u6709\u54ea\u4e9b\u95ee\u9898? 1. \u8ba1\u7b97\u91cf\u592a\u5927\uff0c\u590d\u6742\u5ea6\u592a\u9ad8 2. \u4e22\u5931\u56fe\u50cf\u4fe1\u606f</p> <p>\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u7684\u7279\u70b9 </p> <ol> <li>\u5c40\u90e8\u8fde\u63a5</li> <li>\u53c2\u6570\u5171\u4eab</li> </ol> <p>\u5377\u79ef\u6838\u7684\u4f5c\u7528 </p> <p></p> <p>interview </p> <p>\u5377\u79ef\u5c42\u7684\u5c40\u90e8\u8fde\u63a5\u7279\u70b9\u6307\u7684\u662f\u4ec0\u4e48 </p> <p>\u76f8\u5f53\u4e0e \u5c40\u90e8\u8fde\u63a5\u7684 \u5168\u8fde\u63a5\u5c42, </p> <p>\u5377\u79ef\u5c42\u7684\u5c40\u90e8\u8fde\u63a5 \u6709\u4ec0\u4e48\u597d\u5904</p> <p>\u51cf\u5c11\u53c2\u6570\u6570\u76ee, \u63d0\u5347\u8ba1\u7b97\u901f\u5ea6</p> <p>\u5377\u79ef\u5c42\u7684 \u53c2\u6570\u5171\u4eab \u7279\u70b9\u6307\u7684\u662f\u4ec0\u4e48 </p> <p>\u5bf9\u4e8e \u4e0d\u540c\u7684 \u56fe\u50cf\u4f4d\u7f6e,\u4f7f\u7528\u540c\u4e00\u4e2a\u5377\u79ef\u6838 </p> <p>\u5377\u79ef\u5c42\u7684 \u53c2\u6570\u5171\u4eab \u6709\u4ec0\u4e48\u597d\u5904 </p> <p>\u4e0d\u4f1a\u4e22\u5931\u56fe\u50cf\u7684\u5c40\u90e8\u4fe1\u606f</p> <p>\u7b49\u8fb9\u8868\u793a: \u5c40\u90e8\u7279\u5f81\u6240\u5904\u7684\u4f4d\u7f6e \u4e0d\u4f1a\u5f71\u54cd\u5377\u79ef\u7684 \u7ed3\u679c?</p> <p>padding </p> <p>\u56e0\u4e3a\u7ecf\u8fc7\u5377\u79ef\u64cd\u4f5c\u540e, \u5f97\u5230\u7684\u7279\u5f81\u77e9\u9635\u7684\u7ef4\u6570\u4f1a\u53d8\u5c0f \\(m = n - k + 1\\), \u4e3a\u4e86\u4fdd\u8bc1 \u77e9\u9635\u7ef4\u6570\u4e0d\u53d8, \u6211\u4eec\u53ef\u4ee5\u5148\u5bf9\u77e9\u9635\u8fdb\u884c\u586b\u5145\u540e,\u518d\u505a\u5377\u79ef\u8fd0\u7b97. \\(p = \\frac{k - 1}{2}\\) </p> <ul> <li> <p>Vaild \u5377\u79ef \u4e0d\u586b\u5145 </p> </li> <li> <p>Sane \u5377\u79ef \u586b\u5145, \u4e0d\u4f1a\u4e22\u5931\u56fe\u50cf\u7684\u8fb9\u754c\u4fe1\u606f</p> </li> </ul> <p>\u5377\u79ef\u8fd0\u7b97\u6b65\u957f </p> <p>\u8fdb\u884c\u8fd0\u7b97\u65f6, \u77e9\u9635\u7684\u504f\u79fb\u91cf</p> <p>\u591a\u901a\u9053\u5377\u79ef\u8fd0\u7b97 </p> <p>\u5206\u6210\u4e09\u4e2a\u77e9\u9635, \u5206\u522b\u8ba1\u7b97\u5377\u79ef, \u6700\u540e\u5c06\u5bf9\u5e94\u4f4d\u7f6e\u7684\u6570\u6c42\u548c.</p> <p></p> <p>\u6c60\u5316\u5c42 </p> <p> </p> <ul> <li>\u5747\u503c\u6c60\u5316</li> <li>\u6700\u5927\u6c60\u5316</li> </ul> <p>\u4f5c\u7528:  1. \u51cf\u5c11\u7279\u5f81\u7ef4\u5ea6, (\u964d\u7ef4, \u51cf\u5c11\u590d\u6742\u5ea6) 2. \u4fdd\u7559\u4e3b\u8981\u7279\u5f81</p>"},{"location":"notes/dl/#_4","title":"\u95ee\u9898","text":"<ol> <li><code>root='./data'</code>, \u4e0d\u8981\u5fd8\u4e86 <code>.</code></li> <li>\u6709\u8da3\u7684 <code>id</code> \u51fd\u6570     <code>id</code> \u51fd\u6570\u8fd4\u56de\u7684\u5b9e\u9645\u4e0a\u662f \u53d8\u91cf\u6240\u50a8\u5b58\u7684 \u5bf9\u8c61\u7684 \u5730\u5740\uff0c \u800c\u4e0d\u662f\u81ea\u8eab\u7684\u5730\u5740?</li> </ol> <ol> <li>why update happens outside the net class ? </li> <li>where we store the value of the weight parameter ?</li> </ol> <pre><code>for epoch in range(1, num_epoch + 1):\n        train_loss_sum, train_acc_sum = 0, 0\n        for train_images, labels in train_data_loader:\n            # \u5c06\u6570\u636e\u5b58\u653e\u5728 CPU\n            assert isinstance(train_images, torch.Tensor)\n            train_images.to(device)\n            labels.to(device)\n\n            breakpoint()\n            # torch.Size([200, 1, 28, 28])\n\n            # forward\n            output = net(train_images)\n\n            los = loss(output, labels).sum()\n\n            optimizer.zero_grad()\n\n            # backward\n            los.backward()\n            optimizer.step()\n            train_loss_sum += los\n</code></pre> <ul> <li>\u6ce8\u610f \u4f18\u5316\u5668 \u7ed1\u5b9a\u4e86 \u4e00\u4e2a\u7f51\u7edc\u7684 \u6240\u6709\u53c2\u6570\u3002\u6240\u4ee5 \u4e00\u4e2a\u4f18\u5316\u5668\u53ea\u80fd\u5bf9\u5e94\u4e00\u4e2a \u7f51\u7edc\u7ed3\u6784\u3002\u5982\u679c\u8981\u5728\u4e00\u4e2a\u7a0b\u5e8f\u4e2d \u6d4b\u8bd5\u591a\u4e2a \u7f51\u7edc\u7ed3\u6784\u7684\u51c6\u786e\u6027\uff0c\u5c31\u9700\u8981\u5b9a\u4e49\u591a\u4e2a\u7f51\u7edc\u7ed3\u6784\u3002</li> </ul> <p>\u4ee5\u4e0b\u9762\u8fd9\u4e2a\u7f51\u7edc\u7ed3\u6784\u4e3a\u4f8b</p> <pre><code>train(net=net1,\n          train_iter=train_data_loader,\n          test_iter=test_data_loader,\n          loss=loss,\n          num_epochs=10,\n          optimizer=optimizer1,\n          device=device)\n\n    print(\"\u7f51\u7edc\u7ed3\u6784 784 - 32 - 16 - 10\")\n    train(net=net2,\n          train_iter=train_data_loader,\n          test_iter=test_data_loader,\n          loss=loss,\n          num_epochs=15,\n          optimizer=optimizer1,\n          device=device)\n</code></pre> <p>\u5982\u679c \u4e24\u6b21\u8bad\u7ec3\u7684 \u4f18\u5316\u5668\u662f\u4e00\u6837\u7684\uff0c\u90a3\u4e48\u7b2c\u4e8c\u6b21\u8bad\u7ec3\u7684\u8fc7\u7a0b\u4e2d\uff0c\u4f60\u4f1a\u53d1\u73b0 \u6d4b\u8bd5\u51c6\u786e\u7387\u662f\u4e2a\u5b9a\u503c\u3002(\u56e0\u4e3a\u4f18\u5316\u5668\u53ea\u4f1a\u6539\u53d8\u7b2c\u4e00\u4e2a\u7f51\u7edc\u7ed3\u6784\u7684\u53c2\u6570)</p> <ol> <li> <p><code>lab3</code> \u9047\u5230\u7684\u95ee\u9898</p> </li> <li> <p>matXX and matXX is not XX. \u7f51\u7edc\u7ed3\u6784\u6ca1\u8c03\u6574\u597d\uff0c \u77e9\u9635\u76f8\u4e58\u65f6\uff0c\u7ef4\u5ea6\u51fa\u73b0\u4e86\u95ee\u9898</p> </li> <li>\u6253\u5f00\u56fe\u7247, \u8f6c\u5316\u4e3a tensor, \u518d \u589e\u52a0\u7ef4\u5ea6  </li> </ol> <pre><code># \u6253\u5f00\u56fe\u7247\ntest_img = Image.open(path)\ntest_img = test_img.convert('L')\ndata = list(test_img.getdata())\n\n# \u8f6c\u5316\u4e3a float32 \u7c7b\u578b\ndata = np.array(data, np.float32)\ndata.resize(32, 32)\n\n# \u5f52\u4e00\u5316\ndata /= 255\n\n# \u6dfb\u52a0 \u7ef4\u5ea6 28 * 28 -&gt; 1 * 1 * 28 * 28\ntrains_img = torch.from_numpy(data).unsqueeze(0).unsqueeze(0)\n</code></pre>"},{"location":"notes/notes/","title":"Notes","text":"<p>${toc}</p> <ul> <li>A3696:  &lt;07-03-23, trace&gt; -</li> <li>A896:  &lt;07-03-23, trace&gt; -</li> </ul> <p>1e5 is 100000 bushi 10000 n, n != n, m != &amp; ==  i &amp; n</p> <p>\u65e0\u5411\u8fb9\uff0c\u6709\u5411\u8fb9</p>"},{"location":"notes/notes/#_1","title":"\u5e38\u7528\u5de5\u5177","text":"<ul> <li>\u524d\u7f00\u548c</li> </ul> Property Explaination \u529f\u80fd \u53ef\u4ee5\u5728 \\(\\Theta (1)\\) \u65f6\u95f4\u5185\u6c42\u4e00\u6bb5\u533a\u95f4\u7684\u548c \u7528\u6cd5 sum[i] = sum[i - 1] + a[i] <ul> <li>\u6ed1\u52a8\u7a97\u53e3</li> <li>\u8f93\u5165\u8f93\u51fa</li> </ul> <pre><code>  public static void main(String[] args) throws Exception {\n\nBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\nBufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));\n\nString[] values = br.readLine().split(\"\\\\s+\");\nn = Integer.parseInt(values[0]);\nm = Integer.parseInt(values[1]);\n\nList&lt;Integer&gt; distinctSortedAlls = all.stream().distinct().sorted()\n.collect(Collectors.toList());\n\nint aftIdx = Collections.binarySearch(distinctSortedAlls, preIdx) + 1;\n\nArrays.fill(h, -1);\n// read input\n\nbw.write(ret + \"\\n\");\nbw.flush();\nbw.close();\nbr.close();\n}\n}\n</code></pre> <p>\u8f93\u5165\u8f93\u51fa\u52a0\u901f </p> <pre><code>public static StreamTokenizer in = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in), 32768));\npublic static PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));\n\npublic static double nextDouble() throws IOException {\nin.nextToken();\nreturn in.nval;\n}\n\npublic static float nextFloat() throws IOException {\nin.nextToken();\nreturn (float) in.nval;\n}\n\npublic static int nextInt() throws IOException {\nin.nextToken();\nreturn (int) in.nval;\n}\n\npublic static String next() throws IOException {\nreturn in.sval;\n}\n\npublic static long nextLong() throws Exception {\nin.nextToken();\nreturn (long) in.nval;\n}\n</code></pre> <p>&lt;++&gt;</p>"},{"location":"notes/notes/#hash","title":"\u5b57\u7b26\u4e32hash","text":"<pre><code> p[0] = 1;\nfor (int i = 1; i &lt;= n; i++) {\np[i] = (p[i - 1] * P) % Q;\nh[i] = (h[i - 1] * P + c[i]) % Q;\n}\n\nwhile (m-- != 0) {\nint x = scan.nextInt();\nint y = scan.nextInt();\nint x1 = scan.nextInt();\nint y1 = scan.nextInt();\n\nlong res = h[y] - h[x - 1] * p[y - x + 1];\nlong res1 = h[y1] - h[x1 - 1] * p[y1 - x1 + 1];\n\nif (res == res1) {\nSystem.out.println(\"Yes\");\n} else {\nSystem.out.println(\"No\");\n}\n}\n</code></pre> <p>&lt;++&gt;</p>"},{"location":"notes/notes/#_2","title":"\u6709\u5173 \u6a21\u8fd0\u7b97\u7684 \u4e00\u4e9b\u6a21\u677f","text":""},{"location":"notes/notes/#_3","title":"\u6700\u5927\u516c\u7ea6\u6570","text":"<p>gcd short for greater common divisor</p> <p>\u9996\u5148\u4ecb\u7ecd\u4e00\u4e0b \u6a21\u8fd0\u7b97 \u7684\u5b9a\u4e49\u3002\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u6574\u6570 \\(n\\) , \u4e00\u5b9a\u5b58\u5728\u4e24\u4e2a\u6574\u6570  \\(k, r\\) \u4f7f\u5f97\u4ee5\u4e0b\u7b49\u5f0f\u6210\u7acb</p> \\[ n = k * p + r \\] <p>\u90a3\u4e48\u6211\u4eec\u5b9a\u4e49\\(k\\)\u4e3a\\(n\\)\u9664\u4ee5\\(p\\) \u7684\u5546\\,  \\(r\\)\u4e3a\\(n\\)\u9664\u4ee5\\(p\\) \u7684\u4f59\u6570, \u8fd9\u53c8\u53ef\u4ee5\u8868\u793a\u4e3a</p> \\[ n \\% p = r \\qquad (n \\text{ mod } p  = r) \\] <ul> <li>\u6a21\u8fd0\u7b97\u7684\u56db\u5219\u8fd0\u7b97</li> </ul> <p></p> <ul> <li>\u8f97\u8f6c\u76f8\u9664\u6cd5\u6c42 gcd </li> </ul> <p>\u8fd8\u662f\u62ff\u4e0a\u6587\u7684\u7b49\u5f0f\u4e3e\u4f8b</p> \\[ n = k * p + r \\] <p>\u5047\u8bbe \\(n\\) \u4e0e \\(p\\) \u6709\u6700\u5927\u516c\u56e0\u6570 \\(m\\), \u7b49\u5f0f\u4e24\u7aef\u540c\u65f6 \u9664\u4ee5 \\(m\\) </p> \\[ \\frac{n}{m} = k * \\frac{p}{m} + \\frac{r}{m}  \\\\ \\implies n' = k * p'  + \\frac{r}{m}  \\\\ \\] <p>\u7531\u4e8e \\(n', p', k\\) \u90fd\u662f\u6574\u6570, \u6240\u4ee5 \\(\\frac{r}{m}\\) \u4e5f\u662f\u6574\u6570\uff0c\u4e5f\u5c31\u662f\u8bf4 \\(m\\) \u4e5f\u662f \\(r\\) \u7684\u56e0\u5b50\u3002</p> \\[ gcd(n, p) = gcd(p, r) \\]"},{"location":"notes/notes/#_4","title":"\u5206\u89e3\u8d28\u56e0\u6570","text":"<pre><code>ArrayList&lt;Integer&gt; divide(long n) {\nArrayList&lt;Integer&gt; factors = new ArrayList&lt;&gt;();\nfor (int i = 2; i &lt;= n / i; i++) {\nif (n % i == 0) {\nfactors.add(i);\nwhile (n % i == 0) n /= i;\n}\n}\nif (n &gt; 1) {factors.add(x); factors.add(1); }\n}\n</code></pre> <p>\u9996\u5148\u8bc1\u660e\u5143\u7d20\u5747\u4e3a \\(N\\) \u7684\u7d20\u56e0\u6570\uff1a\u56e0\u4e3a\u5f53\u4e14\u4ec5\u5f53 <code>N % i == 0</code> \u6ee1\u8db3\u65f6\uff0c<code>result</code> \u53d1\u751f\u53d8\u5316\uff1a\u50a8\u5b58 <code>i</code>, \u8bf4\u660e\u6b64\u65f6 <code>i</code> \u53ef\u4ee5\u6574\u9664 \\(\\frac{N}{A}\\)\u3002\u8bf4\u660e\u5b58\u5728\u4e00\u4e2a\u6570 \\(p\\) \u4f7f\u5f97 \\(p \\cdot i = \\frac{N}{A}\\) \u3002(\u5176\u4e2d, <code>A</code> \u4e3a <code>N</code> \u81ea\u8eab\u53d1\u751f\u53d8\u5316\u540e\u9047\u5230 <code>i</code> \u65f6\u6240\u9664\u7684\u6570\u3002\u6b64 <code>N</code> \u975e \u5f7c \\(N\\) )\u3002</p> <p>\u5176\u6b21\u8bc1\u660e <code>result</code> \u4e2d\u7684\u6570\u5747\u4e3a\u7d20\u6570\u3002\u6211\u4eec\u5047\u5b9a\u5b58\u5728\u4e00\u4e2a\u5728 <code>result</code> \u7684\u5408\u6570 \\(K\\) , \u5e76\u6839\u636e\u6574\u6570\u57fa\u672c\u5b9a\u7406 \\(K = K_1^{e_1} \\cdot  K_2^{e_2} \\cdots K_n^{e_n} \\cdot\\), \u56e0\u4e3a \\(K_1 &lt; K - 1\\) \u6240\u4ee5\u4ed6\u4e00\u5b9a\u4f1a\u5728 \\(K\\) \u524d\u88ab\u904d\u5386\u5230\u3002\u6709\u56e0\u4e3a <code>while(N % k1 != 0) N /= k1</code>\uff0c\u5373\u8ba9 \\(N\\) \u6ca1\u6709\u4e86 \u7d20\u56e0\u5b50 <code>K1</code>\uff0c \u987e\u904d\u5386\u5230 <code>K</code> \u65f6\uff0c <code>N</code> \u548c \\(K\\) \u5df2\u7ecf\u6ca1\u6709\u6574\u9664\u5173\u7cfb\u4e86\u3002 </p>"},{"location":"notes/notes/#_5","title":"\u5173\u4e8e\u7ea6\u6570","text":""},{"location":"notes/notes/#_6","title":"\u6570\u636e\u7ed3\u6784","text":""},{"location":"notes/notes/#_7","title":"\u5355\u94fe\u8868","text":"<pre><code>  static int[] e = new int[N], ne = new int[N];\n// e[i] \u53ef\u4ee5\u88ab\u89e3\u8bfb\u4e3a \u8282\u70b9 i \u5bf9\u5e94\u7684 \u503c \u4e3a e[i]\n// ne[i] \u53ef\u4ee5\u88ab\u89e3\u8bfb\u4e3a \u8282\u70b9 i \u5bf9\u5e94\u7684 next \u6307\u9488 \u6307\u5411 ne[i]\nstatic int idx;\n// idx \u6c38\u8fdc\u6307\u5411 \u4e0b\u4e00\u4e2a \u5b58\u50a8\u4f4d\u7f6e\nstatic void init() {\nhead = -1;\nidx = 0;\n}\n\nstatic void insert_head(int value) {\n\ne[idx] = value;\nne[idx] = head;\nhead = idx++;\n\n}\n\nstatic void remove_head() {\nhead = ne[head];\n}\n\n// \u5728\u4e0b\u6807\u4e3a k \u7684\u8282\u70b9\u540e\u9762 \u63d2\u5165\u4e00\u4e2a \u503c\u4e3a value \u7684\u8282\u70b9\nstatic void insert(int k, int value) {\ne[idx] = value;\nne[idx] = ne[k];\nne[k] = idx;\nidx++;\n}\n\n// \u5220\u9664 \u4e0b\u6807\u4e3a k \u7684\u8282\u70b9\u540e\u9762\u7684\u4e00\u4e2a\u8282\u70b9\nstatic void remove(int k) {\nif (k == -1) {\nremove_head();\n} else if (ne[k] != -1) {\nne[k] = ne[ne[k]];\n}\n}\n</code></pre>"},{"location":"notes/notes/#_8","title":"\u6a21\u62df\u961f\u5217","text":"<p>\u9700\u8981\u6ce8\u610f\u4e24\u70b9</p> <ol> <li>hh \u662f\u961f\u5934\uff0c tt \u662f\u961f\u5c3e</li> <li>\u4ece\u6570\u7ec4\u4e0b\u6807\u7684\u5c42\u9762\u770b\uff0chh \u662f\u8981\u6bd4 tt \u5c0f\uff08\u6216\u8005\u7b49\u4e8e\u7684\uff09\u3002 \u6240\u4ee5 \u5224\u65ad\u961f\u5217\u662f\u5426\u4e3a\u7a7a\u7684\u8bed\u53e5\u662f <code>if(hh &lt;= tt )</code> </li> </ol> <pre><code>public class Main {\n\nstatic int N = (int) (1e6 + 10);\n\nstatic int[] q = new int[N]; // q is queue\nstatic int hh = 0, tt = -1; // hh is head, tt is rear\n\npublic static void main(String[] args) {\nScanner scan = new Scanner(System.in);\n\nint n = scan.nextInt();\nwhile (n-- != 0){\nString op = scan.next();\nswitch(op) {\ncase \"push\":\nq[++ tt] = scan.nextInt();\nbreak;\ncase \"pop\":\nhh ++;\nbreak;\ncase \"empty\":\nif (hh &lt;= tt) {\nSystem.out.println(\"NO\");\n} else {\nSystem.out.println(\"YES\");\n}\nbreak;\ncase \"query\":\nSystem.out.println(q[hh]);\n}\n}\nscan.close();\n\n}\n}\n</code></pre>"},{"location":"notes/notes/#trie","title":"Trie","text":"<p>\u529f\u80fd\uff1a \u53ef\u4ee5\u5feb\u901f\u5728\u4e00\u7ec4\u5b57\u7b26\u4e32\u4e2d\u627e\u5230\u7b26\u5408 \u67d0\u4e9b \u7279\u6b8a\u6761\u4ef6 \u7684\u4e00\u4e2a\u6216\u8005 \u591a\u4e2a\u5b57\u7b26\u4e32 </p> <p>Trie \u6240\u7528\u5230\u7684\u6570\u636e\u7ed3\u6784 </p> <pre><code>int son[N][26]; // son[i] \u53ef\u4ee5\u8bfb\u4f5c \u8282\u70b9 i \u7684 \u5b69\u5b50\u6570\u7ec4\n// son[i][j] = u, \u53ef\u4ee5\u8bfb\u4f5c\u8282\u70b9 i \u7684\u5b69\u5b50 j \u6307\u5411 u \u8fd9\u4e2a\u8282\u70b9 \n// \u4e3a\u4ec0\u4e48\u662f 26 \u56e0\u4e3a \u8fd9\u91cc\u53ea\u5b58\u50a8\u5c0f\u5199\u5b57\u7b26\uff0c\u5c0f\u5199\u5b57\u7b26\u4e00\u5171 26 \u4e2a\n\nint cnt[N]; // cnt[i] \u8bfb\u4f5c \u4ee5 i \u8282\u70b9 \u7ed3\u5c3e\u7684\u5b57\u7b26\u51fa\u73b0\u7684\u6b21\u6570\u3002\nint idx; // idx \u540c\u6837\u662f\u7528\u6765\u5206\u914d\u8282\u70b9 \n</code></pre> <pre><code>static void insert(String ss) {\nint r = 0;\n\nfor (int i = 0; i &lt; ss.length(); i++) {\nint u = ss.charAt(i) - 'a';\nif (son[r][u] == 0) {\nson[r][u] = idx;\nidx++;\n}\nr = son[r][u];\n}\ncnt[r] ++;\n} static void query(String ss) {\n\nint r = 0;\n\nfor (int i = 0; i &lt; ss.length(); i++) {\nint u = ss.charAt(i) - 'a';\n\nif (son[r][u] == 0) {\nSystem.out.println(\"0\");\nreturn;\n} else {\nr = son[r][u];\n}\n}\n\nSystem.out.println(cnt[r]);\n</code></pre> <p>ps: \u4f7f\u7528\u6570\u7ec4\u5b9e\u73b0 Trie \u5c31\u662f CS61B \u91cc \u8bb2\u89e3trie \u63d0\u5230\u7684 naive approach,  \u7b97\u6cd5\u6bd4\u8d5b\u53ef\u4ee5\u8fd9\u4e48\u5199\uff0c\u4f46\u662f\u5982\u679c\u5b9e\u9645\u5f00\u53d1\u91cc\u4e2d \u8fd9\u4e48\u5199 \u5185\u5b58\u662f\u8981\u7206\u70b8\u7684\u3002</p>"},{"location":"notes/notes/#a143","title":"\u6700\u5927\u5f02\u6216\u548c A143","text":"<p>\u601d\u8def\uff1a</p> <ol> <li>\u5c06\u6574\u6570\u8f6c\u6362\u4e3a2\u8fdb\u5236\u6570\u4e32\uff0c\u63d2\u5165 Trie \u4e2d\u3002(\u6b62\u6b65\u4e8e\u6b64)</li> <li>\u4ece 1 .. n \u904d\u5386\uff0c \u5728 Trie \u4e2d\u67e5\u8be2 \u4e0e a[i] \u5f02\u6216\u7ed3\u679c\u6700\u5927\u7684\u6570\u5f02\u6216\u7ed3\u679c\u4e0e res \u6bd4\u8f83\u5927\u5c0f\uff0c \u4fdd\u5b58\u8f83\u5927\u8005\u3002\uff08\u53ef\u89c1 Trie \u8fd9\u4e2a\u6570\u636e\u7ed3\u6784\u7684\u80fd\u529b\u662f\u5728\u4e00\u7ec4\u5b57\u7b26\u4e32\u4e2d\uff0c\u627e\u5230\u67d0\u4e2a\u5177\u6709\u7279\u6b8a\u6027\u8d28\u7684\u5b57\u7b26\u4e32\uff09</li> <li>\u8f93\u51fa\u7ed3\u679c</li> </ol> <p>\u8fd9\u9053\u9898\u7684\u5173\u952e\u5728\u4e8e query</p>"},{"location":"notes/notes/#a3585","title":"A3585 \u6700\u5927\u5f02\u6216\u548c","text":"<p>\u601d\u8def\uff1a 1. \u9996\u5148\u4f7f\u7528\u524d\u7f00\u548c\u5904\u7406\u8bfb\u5165\u7684\u6570\u7ec4\uff0c\u4f7f\u5f97\u6211\u4eec\u80fd\u7528 \\(\\Theta (1)\\) \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u8ba1\u7b97 \u67d0\u6bb5\u533a\u95f4\u7684 \u5f02\u6216\u548c  2. \u904d\u5386 \u5f02\u6216\u548c\u6570\u7ec4    - \u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u6570\uff0c\u9996\u5148\u5728 Trie \u4e2d\u67e5\u627e\u80fd\u4e0e\u4e4b\u4ea7\u751f\u6700\u5927\u5f02\u6216\u7684\u6570   - \u8ba1\u7b97\u5f02\u6216\u7ed3\u679c\uff0c\u4e0eres\u6bd4\u8f83\uff0c\u4fdd\u5b58\u6700\u5927\u503c   - \u5c06\u8be5 \u6570 \u63d2\u5165 trie \u4e2d    - \u82e5 \\(i \\ge  m\\) \u90a3\u4e48\u4ecetrie \u4e2d\u5220\u9664 sum[i - m]</p> <p>\u5982\u4f55\u5b9e\u73b0\u5220\u9664\uff1a 1. \u5728\u63d2\u5165\u65f6\uff0c\u4e3a\u6bcf\u4e00\u4e2a\u8282\u70b9\u589e\u52a0\u4e00\u4e2a cnt \u6570\u636e\u57df\uff0c\u8bb0\u5f55\u8be5\u8282\u70b9\u4e0b\u5b58\u5728\u7684\u5b57\u7b26\u4e32\u6570\u76ee\u3002  - \u63d2\u5165\u65f6 cnt++  - \u5220\u9664\u65f6 cnt- -</p> <ol> <li>query \u65f6\uff0c \u589e\u52a0\u4e00\u4e2a \u5224\u65ad\u6761\u4ef6 cnt[son[r][i]] &gt; 0</li> </ol>"},{"location":"notes/notes/#_9","title":"\u56fe","text":""},{"location":"notes/notes/#dfs","title":"DFS","text":"<p>DFS \u95ee\u9898     \u91cd\u70b9\u5728\u4e8e \u5982\u4f55\u5c06\u5b9e\u9645\u95ee\u9898\u62bd\u8c61\u6210\u4e00\u4e2a graph     \u62bd\u8c61\u6210\u56fe\u540e\u8981\u660e\u786e dfs \u8fd9\u4e2a\u51fd\u6570\u7684\u542b\u4e49\u662f\u4ec0\u4e48\uff0c\u518d\u6839\u636e\u8fd9\u4e2a\u542b\u4e49\u60f3\u76ee\u529e\u91cc\u52a0\u4e1c\u897f\u3002</p>"},{"location":"notes/notes/#a842","title":"A842 \u6392\u5217\u6570\u5b57","text":"<p>\u5176\u5b9e\u5c31\u662f 1, 2, 3 \u4e09\u4e2a\u8282\u70b9\uff0c\u4e24\u4e24\u76f8\u8fde\u5f62\u6210\u4e00\u4e2a\u65e0\u5411\u56fe\u3002\u6c42\u8fd9\u4e2a\u56fe\u7684\u6240\u7528\u4e0d\u540c\u7684\u4fbf\u5229\u65b9\u5f0f</p> <p></p>"},{"location":"notes/notes/#bfs","title":"BFS","text":"<p>\u5206\u6790\u641c\u7d22\u95ee\u9898\u4e3b\u8981\u9075\u5faa\u4ee5\u4e0b\u6b65\u9aa4\uff1a 1. \u5b9a\u4e49 fringe \u4f7f\u7528\u7684 \u6570\u636e\u7ed3\u6784 2. \u5c06\u5b9e\u9645\u95ee\u9898\u62bd\u8c61\u6210 \u4ee3\u7801\u4e2d\u7684 \u4e00\u4e2a\u72b6\u6001 3. \u5982\u4f55\u83b7\u53d6 \u6bcf\u4e00\u4e2a \u72b6\u6001\u7684 \u540e\u7eed\u72b6\u6001 4. \u5982\u4f55\u5224\u65ad \u72b6\u6001\u662f\u5426\u5904\u4e8e \u76ee\u6807\u72b6\u6001 5. \u6ce8\u610f\u4e0d\u8981\u56de\u6eaf \u8bb0\u5f55\u641c\u7d22\u72b6\u6001</p>"},{"location":"notes/notes/#a844-bfs","title":"A844 BFS","text":"<p>\u4e0d\u80fd\u4f7f\u7528\u6570\u7ec4\u6765\u5b58\u53d6\u5bf9\u5e94\u8282\u70b9\u7684\u7236\u8282\u70b9\uff0c\u56e0\u4e3a\u53ef\u80fd\u5982\u679c\u540e\u7eed\u8282\u70b9\u53c8\u6269\u5c55\u4e86\u539f\u59cb\u8282\u70b9\uff0c \u90a3\u4e48\u6839\u636e\u6211\u4eec\u7684\u7b97\u6cd5\u903b\u8f91\uff0c \u539f\u59cb\u8282\u70b9\u7684\u7236\u8282\u70b9\u4e5f\u4f1a\u88ab\u66f4\u6539\u3002</p> <ul> <li> <p>\u5b9a\u4e49 fringe \u4f7f\u7528\u7684 \u6570\u636e\u7ed3\u6784</p> <p>queue</p> </li> <li> <p>\u5c06\u5b9e\u9645\u95ee\u9898\u62bd\u8c61\u6210 \u4ee3\u7801\u4e2d\u7684 \u4e00\u4e2a\u72b6\u6001 </p> <p>class Pair</p> </li> <li> <p>\u5982\u4f55\u83b7\u53d6 \u6bcf\u4e00\u4e2a \u72b6\u6001\u7684 \u540e\u7eed\u72b6\u6001</p> </li> </ul> <pre><code>int[] dx = {0, 1, 0, 1}, dy = {-1, 0, -1, 0};\nfor (int i = 0; i &lt; 4; i++) {\nint nx = front.x + dx[i], ny = front.y + dy[i];\n// check if (nx, ny) legal \n}\n</code></pre> <p>&lt;++&gt;</p> <ul> <li>\u5982\u4f55\u5224\u65ad \u72b6\u6001\u662f\u5426\u5904\u4e8e \u76ee\u6807\u72b6\u6001</li> </ul>"},{"location":"notes/notes/#a845","title":"A845 \u516b\u6570\u7801","text":"<p>bfs \u6c42 \u6700\u77ed\u8def\u5f84\u95ee\u9898\u9700\u8981\u6ce8\u610f\u4e24\u70b9 1. \u5982\u4f55\u5b58\u50a8 \u961f\u5217 2. \u5982\u4f55\u8bb0\u5f55\u6bcf\u4e00\u4e2a\u72b6\u6001\u7684\u8ddd\u79bb (\u4e5f\u5c31\u662f \u8fd9\u4e2a\u8282\u70b9\u662f\u7b2c\u51e0\u5c42\u5c55\u5f00\u7684)</p> <ul> <li>\u72b6\u6001\u8868\u793a</li> <li>\u4f7f\u7528\u5b57\u7b26\u4e32\u6765\u8868\u793a\u6bcf\u4e00\u4e2a\u8282\u70b9\u7684\u72b6\u6001 \"123456X78\"</li> </ul>"},{"location":"notes/notes/#_10","title":"\u6811","text":""},{"location":"notes/notes/#a846","title":"A846 \u6811\u7684\u91cd\u5fc3","text":"<p>\u4f55\u4e3a\u91cd\u5fc3\uff1a \u91cd\u5fc3\u662f\u6307\u6811\u4e2d\u7684\u4e00\u4e2a\u7ed3\u70b9\uff0c\u5982\u679c\u5c06\u8fd9\u4e2a\u70b9\u5220\u9664\u540e\uff0c\u5269\u4f59\u5404\u4e2a\u8fde\u901a\u5757\u4e2d\u70b9\u6570\u7684\u6700\u5927\u503c\u6700\u5c0f\uff0c\u90a3\u4e48\u8fd9\u4e2a\u8282\u70b9\u88ab\u79f0\u4e3a\u6811\u7684\u91cd\u5fc3</p> <p>\u901a\u4fd7\u7684\u6765\u8bb2\uff0c\u5c31\u662f\u5220\u9664\u6811\u4e2d\u7684\u67d0\u4e00\u4e2a\u8282\u70b9\u540e\uff0c\u4f1a\u4ea7\u751f\u8bb8\u591a\u8fde\u901a\u5206\u91cf;  \u5982\u679c\u8fd9\u4e2a\u8282\u70b9\u662f\u91cd\u5fc3\u7684\u8bdd\uff0c\u8fde\u901a\u5206\u91cf\u7684\u6700\u5927\u503c\u6700\u5c0f\u3002</p> <p>\u53ef\u4ee5\u7528 dfs \u7684\u65b9\u5f0f\u6765\u7edf\u8ba1</p> <p>dfs \u7684 \u6a21\u677f\u5982\u4e0b</p> <pre><code>int dfs(int u) {\nst[u] = true;\nfor (int j = h[u]; j != -1; j = ne[j]) {\nint i = e[j];\nif (!st[i]) {\ndfs(i);\n// \u53ef\u4ee5\u5728\u8fd9\u91cc\u5bf9 dfs \u5f97\u5230\u7684\u7ed3\u679c\u5904\u7406\n}\n}\n}\n</code></pre> <p>\u5728\u672c\u9898\u4e2d\uff0c dfs(u) \u662f\u7528\u6765\u5bfb\u627e \u4ee5\u8282\u70b9 u \u4e3a\u6839\u7684\u6240\u6709\u5b50\u6811\u7684 \u8282\u70b9 \u7684\u6570\u91cf\u3002</p> <p>dfs \u5c31\u548c dp \u7c7b\u4f3c\uff0c\u8981\u641e\u6e05\u695a\u4e0d\u540c\u7684 dfs \u5728\u4e0d\u540c\u9898\u76ee\u4e0b\u7684\u542b\u610f\u662f\u4ec0\u4e48\u3002</p>"},{"location":"notes/notes/#_11","title":"\u6811\u7684\u5c42\u6b21\u904d\u5386","text":""},{"location":"notes/notes/#_12","title":"\u62d3\u6251\u6392\u5e8f","text":"<p>\u6709\u5173\u56fe\u7684\u6027\u8d28</p> <ul> <li>\u6709\u5411\u65e0\u73af\u56fe\u4e00\u5b9a\u80fd\u591f\u627e\u5230\u4e00\u6761\u62d3\u6251\u5e8f\u5217</li> <li>\u6709\u73af\u56fe\u4e0d\u5b58\u5728\u62d3\u6251\u5e8f\u5217</li> </ul> <p>\u6240\u4ee5 \u62d3\u6251\u6392\u5e8f\u53ef\u4ee5\u68c0\u6d4b \u73af\u8def</p> <p>\u62d3\u6251\u6392\u5e8f\u7b97\u6cd5\u6b65\u9aa4:</p> \\[ \\begin{align*}   &amp;\\text{Init queue\uff0c\u5c06\u4e34\u754c\u8868\u4e2d\u6240\u6709\u5165\u5ea6\u4e3a0\u7684\u70b9\u52a0\u5165\u961f\u5217} \\\\   &amp; \\text{while queue not empty: } \\\\   &amp; \\qquad  \\text{front = queue.poll()}   \\\\    &amp; \\qquad  for \\text{ edge (front, j) } in \\text{ graph[front] } \\\\    &amp; \\qquad \\qquad del \\, (\\text { front, j })  \\\\    &amp; \\qquad \\qquad if \\text { degree[j] } == 0 \\\\    &amp; \\qquad \\qquad \\qquad \\text{ queue.enque(j) } \\\\  \\end{align*} \\] <p>\u89e3\u9898\u9700\u8981\u4f7f\u7528\u5230\u90bb\u63a5\u8868\uff0c\u7531\u4e8e\u5b98\u65b9\u63d0\u4f9b\u7684stl\u5e93\u6548\u7387\u4e0d\u662f\u5f88\u9ad8\u3002 \u6211\u4eec\u8003\u8651\u7528\u6570\u7ec4\u6765\u6a21\u62df\u90bb\u63a5\u8868\u3002</p> <pre><code>int h[N]; // \u8be5\u6570\u7ec4\u50a8\u5b58\u5934\u8282\u70b9\u3002h[i] \u53ef\u4ee5\u7406\u89e3\u4e3a \u8282\u70b9 i \u5728\u90bb\u63a5\u8868\u4e2d \u6240\u5bf9\u5e94\u7684 \u90a3\u4e00\u6761\u94fe\u8868\u7684 \u5934\u8282\u70b9\nint e[N], ne[N], idx; // \u8001\u670b\u53cb\u4e86\uff0c\u53c2\u89c1\u5355\u94fe\u8868\nint d[N]; // \u8be5\u6570\u7ec4\u50a8\u5b58\u8282\u70b9\u7684\u5165\u5ea6\u3002d[i] \u53ef\u4ee5\u7406\u89e3\u4e3a \u7b2c i \u4e2a\u8282\u70b9\u7684 \u5165\u5ea6\u4e3a d[i]\nint q[N];\n\n// \u6a21\u62df\u90bb\u63a5\u94fe\u8868 \nstatic void add(int a, int b, int c) {\ne[idx] = b; // idx.e = b\nne[idx] = h[a]; // \u4ee4 idx.next = a.head;\nh[a] = idx++; // update a.head = idx;\n}\n</code></pre> <p>\u6838\u5fc3\u4ee3\u7801</p> <pre><code> static void tsort(int n) {\nfor (int i = 1; i &lt;= n; i++) {\nif (d[i] == 0) {\nq[++tt] = i;\n}\n}\n\nwhile (hh &lt;= tt) {\nint front = q[hh++];\n\nfor (int i = h[front]; i != -1; i = ne[i]) {\nint j = e[i]; // \u5e76\u4e0d\u771f\u7684\u9700\u8981\u4ece\u94fe\u8868\u4e2d\u628a\u6570\u5220\u9664\nd[j]--;\nif (d[j] == 0) {\nq[++tt] = j;\n}\n}\n}\n\nif (tt == n - 1) {\nfor (int i = 0; i &lt; n; i++) {\nSystem.out.println(q[i] + \" \");\n}\n} else {\nSystem.out.println(\"-1\");\n}\n\n}\n</code></pre>"},{"location":"notes/notes/#dijkstra","title":"Dijkstra","text":"<p>\u9002\u7528\u6761\u4ef6 </p> <p>\u8fea\u6770\u65af\u7279\u62c9\u7b97\u6cd5\u9002\u7528\u4e8e\u6c42\u6b63\u6743\u6709\u5411\u56fe\u4e2d\uff0c\u6e90\u70b9\u5230\u5176\u4f59\u5404\u4e2a\u8282\u70b9\u7684\u6700\u77ed\u8def\u5f84\u3002\u6ce8\u610f\uff1a\u56fe\u4e2d\u53ef\u4ee5\u6709\u73af\uff0c\u4f46\u4e0d\u80fd\u6709\u8d1f\u6743\u8fb9</p> <p></p> <p>\u7b97\u6cd5\u601d\u8def\uff1a</p> \\[ \\begin{align*}   &amp;\\text{dist[1]} = 0, \\text{dist[i]} = +\\infty  \\\\   &amp; for  \\text{ i }  in  \\text{ 1 .. n }   \\\\    &amp; \\qquad \\text{find node \\textbf{t}  that has minimum distance and not visited in dist array}  \\\\    &amp; \\qquad \\text{ set visited[t] } = \\text{true}  \\\\    &amp; \\qquad \\text { update weight for node that t can traverse to }\\\\  \\end{align*} \\]"},{"location":"notes/notes/#a849","title":"\u6734\u7d20\u7248 A849","text":""},{"location":"notes/notes/#a850","title":"\u5806\u4f18\u5316 A850","text":"<pre><code>  // \u9057\u5fd8\nstatic void add(int a, int b, int c) {\ne[idx] = b; // idx.e = b\nne[idx] = h[a]; // \u4ee4 idx.next = a.head;\nw[idx] = c;\n\nh[a] = idx++; // update a.head = idx;\n}\n</code></pre> <pre><code>  static int dijkstra() {\n\nQueue&lt;int[]&gt; q = new PriorityQueue&lt;int[]&gt;(n, (a, b) -&gt; {\nreturn a[1] - b[1];\n});\n\nArrays.fill(dist, INF);\nq.offer(new int[] { 1, 0 });\n// init for head;\n\nwhile (q.size() &gt; 0) {\nint[] t = q.poll();\nint ver = t[0];\nint dis = t[1];\nst[ver] = true;\n\nfor (int j = h[ver]; j != -1; j = ne[j]) { // h[i] \u7684\u542b\u4e49\u6ca1\u6709\u7406\u89e3\u900f\u5f7b \u904d\u5386\u90bb\u63a5\u8868\nint node = e[j];\nif (dist[node] &gt; dis + w[j]) { // \u4f1a \u6ea2\u51fa\n\n// System.out.printf(\"dist[%d] = %d &gt; t.dist = %d + w[%d] = %d\\n\", node,\n//     dist[node], dis, j, w[j]);\n\ndist[node] = dis + w[j];\nq.offer(new int[] { node, dist[node] });\n}\n}\n}\n\nreturn dist[n] == INF ? -1 : dist[n];\n\n}\n</code></pre>"},{"location":"notes/notes/#spfa","title":"spfa","text":"<p>\u7b97\u6cd5\u601d\u8def\uff1a</p> \\[ \\begin{align*}   &amp;\\text{dist[1]} = 0, \\text{dist[i]} = +\\infty, \\text{queue.enqueue(1)}, \\text{st}[1] = 1    \\\\   &amp; for  \\text{ i }  in  \\text{ 1 .. n }   \\\\    &amp; \\qquad \\text{\u53d6\u5bf9\u5934\u5143\u7d20}  \\\\    &amp; \\qquad \\text { update weight for node that t can traverse to }\\\\    &amp; \\qquad \\qquad \\text{if update, enqueue and mark}   \\\\  \\end{align*} \\]"},{"location":"notes/notes/#1488","title":"1488 \u6700\u77ed\u8ddd\u79bb","text":"<p>dijkstra \u7b97\u6cd5\u662f\u6c42\u4e00\u4e2a\u70b9 \u5230 \u5176\u4ed6\u6240\u6709\u70b9\u7684\u6700\u77ed\u8ddd\u79bb\u3002</p> <p>\u672c\u9898\u662f \u6c42\u6240\u6709\u70b9\u5230 \u5230 k \u4e2a\u5546\u5e97\u7684\u6700\u77ed\u8ddd\u79bb\u3002</p> <p>\u5c06\u8fd9\u4e2a k \u4e2a\u5546\u5e97 \u5408\u5e76\u6210\u4e00\u4e2a\u70b9\uff0c\u5c31\u53ef\u4ee5\u8f6c\u5316\u4e3a dijkstra \u95ee\u9898\u3002</p> <p></p>"},{"location":"notes/notes/#854-floyd","title":"854 floyd \u6c42\u6700\u77ed\u8def","text":"<ol> <li>\u521d\u59cb\u5316\uff0c\u5bf9\u89d2\u7ebf := 0, \u5176\u4ed6 := INF</li> <li>\u8bfb\u53d6 \u8fb9\u957f\uff0c\u6ce8\u610f\u6709\u91cd\u8fb9</li> <li>\u6c42\u6700\u5c0f\u503c<ul> <li>\u6ce8\u610f k \u5728\u5916\u5c42\u5faa\u73af</li> <li>\u66f4\u65b0\u601d\u8def\u4e3a\uff1a\u76f4\u63a5\u4ece \u8282\u70b9 i \u5230 \u8282\u70b9 j \u4f1a\u6bd4 \u501f\u52a9 \u8282\u70b9 k \u5230\u8282\u70b9 j \u66f4\u5212\u7b97\u5417 (i -&gt; j compared with i-&gt;k-&gt;j)\uff1f</li> </ul> </li> </ol> <pre><code>#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\n\n#define N 210\n#define INF 0x3f3f3f3f\n\nint g[N][N];\n\nint n, m, k;\n\nvoid floyd()\n{\nfor (int k = 1; k &lt;= n; k++) {\nfor (int i = 1; i &lt;= n; i++) {\nfor (int j = 1; j &lt;= n; j++) {\nif (g[i][j] &gt; g[i][k] + g[k][j]) {\ng[i][j] = g[i][k] + g[k][j];\n}\n}\n}\n}\n}\n\nint main()\n{\n\n// \u521d\u59cb\u5316\uff0c\u5bf9\u89d2\u7ebf := 0, \u5176\u4ed6 := INF\nmemset(g, 0x3f, sizeof g);\nscanf(\"%d %d %d\", &amp;n, &amp;m, &amp;k);\nfor (int i = 1; i &lt;= n; i++) for (int j = 1; j &lt;= n; j++)\nif (i == j) g[i][j] = 0;\n\n// \u8bfb\u53d6 \u8fb9\u957f\uff0c\u6ce8\u610f\u6709\u91cd\u8fb9\nwhile (m--)\n{\nint x, y, z;\nscanf(\"%d %d %d\", &amp;x, &amp;y, &amp;z);\ng[x][y] = g[x][y] &lt; z ? g[x][y]: z; }\n\n// \u6c42\u6700\u5c0f\u503c\nfloyd();\n\n// \u8bfb\u53d6\u8be2\u95ee\nwhile(k--)\n{\nint x, y;\nscanf(\"%d %d\", &amp;x, &amp;y);\nif (g[x][y] &lt;= INF / 2) printf(\"%d\\n\", g[x][y]);\nelse printf(\"impossible\\n\");\n}\n\nreturn 0;\n}\n</code></pre>"},{"location":"notes/notes/#_13","title":"\u6700\u5c0f\u751f\u6210\u6811","text":""},{"location":"notes/notes/#858-prim","title":"858 Prim \u7b97\u6cd5","text":"<ol> <li> <p>\u521d\u59cb\u5316 dist (\\(\\infty\\)), state (0), pre (-1); </p> <ul> <li>dist[i] \u8868\u793a\u8282\u70b9 <code>i</code> \u8ddd\u79bb\u8fde\u901a\u90e8\u5206\u7684\u8ddd\u79bb\u4e3a <code>dist[i]</code>\u3002\u4ec5\u5f53 <code>state[i]</code> \u4e3a0\u65f6\u6709\u610f\u4e49</li> <li>state[i] \u8868\u793a\u8282\u70b9 <code>i</code> \u7684\u72b6\u6001\u4e3a state[i] (0 \u8868\u793a\u8fd8\u672a\u8fde\u901a)</li> <li>pre[i] \u8868\u793a\u8282\u70b9 <code>i</code> \u4e0e \u8282\u70b9 <code>pre[i]</code> \u76f8\u8fde\u3002</li> </ul> </li> <li> <p>\u5c06 \u8282\u70b9 1 \u52a0\u5165 \u8fde\u901a\u96c6\u5408 (dist[1] = 0, state[1] = 1);</p> </li> <li>\u5faa\u73af </li> </ol> \\[ \\begin{align*}   &amp; for  \\text{ i }  in  \\text{ 1 .. n }   \\\\    &amp; \\qquad \\text{find the closet node \\textbf{t} to the connected region (and not connected)}  \\\\    &amp; \\qquad \\text{ set state[t] } = \\text{true}  \\\\    &amp; \\qquad \\text { update pre and dist array for node that t can traverse to }\\\\  \\end{align*} \\] <p>\u6ce8\u610f \u65e0\u5411\u8fb9\uff0c\u6709\u5411\u8fb9\u3002 \u56e0\u4e3a \u5355\u5411\u8fde\u63a5\u4e0d\u7b97\u8fde\u901a\u7684\u3002</p> <p> <pre><code>void prim()\n{\ndist[1] = 0;\n// state[1] = true;\n\nfor (int i = 1; i &lt;= n; i++) {\n// check point \nint minn = -1, minw = INF;\nfor (int j = 1; j &lt;= n; j++) {\nif (state[j] == false &amp;&amp; dist[j] &lt; minw) {\nminw = dist[j];\nminn = j;\n}\n}\n\n// printf(\"choose node %d with wight %d\\n\", minn, minw);\n\nstate[minn] = true;\n\n//check point: update\nfor (int j = 1; j &lt;= n; j++) {\nif (g[minn][j] != INF &amp;&amp; state[j] == false &amp;&amp; dist[j] &gt; g[minn][j]) // == &amp; !=\n{\n//printf(\"updateing node= %d w= %d pre= %d\\n\", j, g[minn][j], minn);\ndist[j] = g[minn][j];\npre[j] = minn;\n}\n}\n}\n}\n</code></pre></p>"},{"location":"notes/notes/#dynamic-programming","title":"Dynamic Programming","text":"<p>\u52a8\u6001\u89c4\u5212\u5206\u6790\u6b65\u9aa4 </p> <ol> <li>Define Objective function</li> <li>Identify base cases</li> <li>Write down a recurrence relation for the optimized Objective function</li> <li>What is the order of exeution</li> <li>where to look for answear</li> </ol>"},{"location":"notes/notes/#_14","title":"\u80cc\u5305\u95ee\u9898","text":"<p>\u6709\u9650\u96c6\u5408\u627e\u6700\u503c</p> <ol> <li>\u72b6\u6001\u8868\u793a (Objective function) f(i, j) </li> <li>\u96c6\u5408 \u6700\u4e3b\u8981\u662f\u628a\u76ee\u6807\u51fd\u6570\u7684\u96c6\u5408\u8868\u793a\u51fa\u6765\uff0c\u7136\u540e\u518d\u8003\u8651\u5212\u5206</li> <li>\u5c5e\u6027</li> <li>\u72b6\u6001\u8ba1\u7b97</li> </ol>"},{"location":"notes/notes/#01","title":"01 \u80cc\u5305\u95ee\u9898","text":"\\[ \\begin{align*}     f(i, j) = \\underset{0 \\le  k \\le  \\text{min}(1,  j / v[j]) }{\\text{max} } (f( i-1, v - k * v[i] ) + k * w[i]) \\end{align*} \\]"},{"location":"notes/notes/#_15","title":"\u5b8c\u5168\u80cc\u5305\u95ee\u9898","text":"<p>\u6734\u7d20\u89e3\u6cd5 1. Define Objective function</p> <pre><code>f[n][volume] \u4ece1\u5230n\u4e2a\u7269\u54c1\u9009\uff0c\u4f7f\u5f97\u80cc\u5305\u4f53\u79ef\u5c0f\u4e8e\u7b49\u4e8evolume\uff0c\u6240\u80fd\u8fbe\u5230\u7684\u6700\u5927\u4ef7\u503c\n</code></pre> <ol> <li> <p>Identify base cases</p> <p>f[0][0] = 0,</p> </li> <li> <p>Write down a recurrence relation for the optimized Objective function</p> </li> </ol> \\[ \\begin{align*}   f(i, j) = \\underset{0 \\le  k \\le  j / v[j]}{\\text{max} } (f[i-1][v - k * v[i]] + k * w[i]) \\end{align*} \\] <ol> <li> <p>What is the order of exeution</p> <p>Down to Top</p> </li> <li> <p>where to look for answear</p> <p>f[n][v]</p> </li> </ol> <p></p> <p>\u4f18\u5316\u89e3\u6cd5 1. Define Objective function</p> <pre><code>f[volume] \u80cc\u5305\u4f53\u79ef\u5c0f\u4e8e\u7b49\u4e8evolume\u65f6\uff0c\u6240\u80fd\u8fbe\u5230\u7684\u6700\u5927\u4ef7\u503c\n</code></pre> <ol> <li> <p>Identify base cases</p> <p>f[0] = 0, 3. Write down a recurrence relation for the optimized Objective function</p> </li> </ol> <p>\u6211\u4eec\u5df2\u77e5 (\\(v\\) \u6307\u4ee3 \\(v_i\\)\uff0c\\(w\\) \u6307\u5411 \\(w_i\\)) $$</p> <p>\\begin{align}   f(i, j) &amp;= \\underset{0 \\le  k \\le  j / v[j]}{\\text{max} } (f[i-1][v - k * v[i]] + k * w[i]) \\       &amp;= \\text{max} (f(i-1, j), f(i-1, j - v) + w, \\            &amp; \\qquad \\qquad f(i-1, j - 2\\cdot v) + 2\\cdot w, \\cdots , f(i-1, j - k\\cdot v) + k\\cdot w) \\ \\end{align} $$</p> <p>\u53c8\u56e0\u4e3a\u6709</p> \\[ \\begin{align*}   f(i, j - v) &amp;= max(f(i-1, j - v) , \\\\            &amp; f(i-1, j - 2\\cdot v) + w, \\cdots , f(i-1, j - k\\cdot v) + (k - 1)\\cdot w) \\\\ \\end{align*} \\] <p>\u4f7f\u7528 \\(f(i, j - v)\\) \u8fdb\u884c\u53d8\u91cf\u4ee3\u6362\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u5316\u7b80\u5f0f</p> <p>$$ \\begin{align}   f(i, j ) &amp;= max(f(i-1, j), f(i, j - v) + w) \\end{align} $$ 4. What is the order of exeution</p> <pre><code>Down to Top\n</code></pre> <ol> <li> <p>where to look for answear</p> <p>f[v]</p> </li> </ol>"},{"location":"notes/notes/#_16","title":"\u591a\u91cd\u80cc\u5305\u95ee\u9898","text":"<p>\u6700\u521d\u65e0\u6cd5\u7406\u89e3 \u5982\u4f55\u5224\u65ad\u67d0\u4e00\u4e2a\u7269\u54c1\u6709\u6ca1\u6709\u4f7f\u7528\u5b8c</p> <p>\u6700\u540e\u53d1\u73b0\u5b8c\u5168\u4e0d\u9700\u8981\u5224\u65ad\uff0c\u6700\u91cc\u5c42\u7684\u5faa\u73af (k), \u5df2\u7ecf\u904d\u5386\u4e86\u6240\u6709\u53ef\u80fd\u7684\u60c5\u51b5\uff0c\u4e0d\u518d\u9700\u8981\u5355\u72ec\u8ddf\u8e2a\u3002</p> <p>\u4e3e\u4e00\u4e2a\u5b9e\u9645\u7684\u4f8b\u5b50\u3002</p> <p>\u5047\u8bbe n = 1, v = 2 \u65f6\uff0c\u4ea7\u751f\u6700\u5927\u4ef7\u503c\u7684 k \u7b49\u4e8e aa, \u800c\u6211\u4eec\u4e00\u5171\u6709bb \u4e2a\u7269\u54c1 1, \u90a3\u4e48\u505a\u4e86\u4e0a\u8ff0\u51b3\u7b56\u540e\uff0c  \u5269\u4e0b\u7684\u7269\u54c11\u6709 bb - aa\u4e2a\u3002\u800c bb - aa \u8fd9\u4e2a\u503c\u5bf9\u6211\u4eec\u7684\u540e\u7eed\u51b3\u7b56\u5b8c\u5168\u6ca1\u7528\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u9700\u8981\u8bb0\u5f55\uff0c\u6211\u4eec\u7684\u9009\u62e9\u5bf9\u7269\u54c1\u4e2a\u6570\u7684\u5f71\u54cd\u3002</p> <p>\u6734\u7d20\u89e3\u6cd5 1. Define Objective function</p> <pre><code>f[n][volume] \u4ece1\u5230n\u4e2a\u7269\u54c1\u9009\uff0c\u4f7f\u5f97\u80cc\u5305\u4f53\u79ef\u5c0f\u4e8e\u7b49\u4e8evolume\uff0c\u6240\u80fd\u8fbe\u5230\u7684\u6700\u5927\u4ef7\u503c\n</code></pre> <ol> <li> <p>Identify base cases</p> <p>f[0][0] = 0,</p> </li> <li> <p>Write down a recurrence relation for the optimized Objective function</p> </li> </ol> \\[ f[i][j] = \\underset{0 \\le  k \\le  \\text{min}(j / v[i], s[i])}{\\text{max} } (f[i-1][v - k * v[i]] + k * w[i]) % k from 0 to v / k \\] <ol> <li> <p>What is the order of exeution</p> <p>Down to Top</p> </li> <li> <p>where to look for answear</p> <p>f[n][v]</p> </li> </ol> <p>\u4e8c\u8fdb\u5236\u4f18\u5316</p> <p>\u5c06\u6bcf\u4e00\u4e2a\u7269\u54c1\u6309\u7167 \u4e8c\u8fdb\u5236 \u62c6\u5206, \u6bd4\u5982\u5047\u8bbe i \u7269\u54c1 \u6709 10\u4e2a</p> <p>\u90a3\u4e48 s[i] = 1 + 2 + 4 + 3; \u5c06 10 i \u7269\u54c1\uff0c\u62c6\u5206\u62104\u7ec4\u65b0\u7269\u54c1 </p> <pre><code>for (int i = 1; i &lt;= n; i++) {\nfor (int t = 1; (s[i] - t) &gt; 0; t *= 2){\ngoods.push_back({v[i] * t, w[i] * t});\ns[i] -= t;\n}\ngoods.push_back({v[i] * s[i], w[i] * s[i]});\n}\n</code></pre>"},{"location":"notes/notes/#_17","title":"\u5206\u7ec4\u80cc\u5305\u95ee\u9898","text":"<p>\u5904\u7406\u65b9\u5f0f\u548c \u591a\u91cd\u80cc\u5305\u95ee\u9898 \u4e00\u6a21\u4e00\u6837 </p> <p></p>"},{"location":"notes/notes/#_18","title":"\u6574\u6570\u62c6\u5206","text":"<p> \u9519\u8bef\u89e3\u6cd5  </p> <ul> <li> <p>Define Objective function</p> <p>\\(f(n)\\) \u6574\u6570n \u6700\u591a\u6709\u591a\u5c11\u79cd\u62c6\u5206\u65b9\u5f0f  - Identify base cases</p> <p>\\(f(0) = 0\\), \\(f(1) = 1\\) - Write down a recurrence relation for the optimized Objective function</p> <p>\\(f(n) = \\sum (f(n - 2^0) + f(n - 2^1) + \\cdots + f(n - 2^k))\\), \u5176\u4e2d \\(k = \\lfloor \\log2 (n) \\rfloor\\)  - What is the order of execution</p> <p>bottom to top  - where to look for answer</p> <p>\\(f(n)\\) </p> </li> </ul> <p> \u6b63\u786e\u89e3\u6cd5 </p> <ul> <li> <p>Define Objective function</p> <p>f(i, j) \u5728\u524di\u4e2a\u7269\u54c1\u91cc\u9009\uff0c\u4f7f\u5f97\u4f53\u79ef\u6070\u597d\u4e3a j \u7684\u65b9\u6cd5\u6570  - Identify base cases</p> <p>f[0][0] = 1 - Write down a recurrence relation for the optimized Objective function</p> </li> </ul> \\[ f(i, j) = \\underset{0 \\le m \\le j / v[i]}{\\text{sum}} f(i - 1, j - m * v[i]) \\] <ul> <li> <p>What is the order of execution</p> <p>Bottom to Top - where to look for answer</p> <p>f[m][n] \u5176\u4e2d \\(m = \\lfloor \\log2 (n) \\rfloor\\)</p> </li> </ul> <p> \u65f6\u95f4\u4f18\u5316  </p> <p>\u6211\u4eec\u5df2\u77e5 (\\(v\\) \u6307\u4ee3 \\(v_i\\))</p> <p>$$</p> <p>\\begin{align*}   f(i, j) &amp;= \\sum (f[i-1][v - k * v[i]]) \\       &amp;= (f(i-1, j) + f(i-1, j - v) + \\            &amp; \\qquad \\qquad f(i-1, j - 2\\cdot v) +  \\cdots ) \\</p> <p>\\end{align*} $$</p> <p>\u53c8\u56e0\u4e3a\u6709</p> <p>$$</p> <p>\\begin{align}   f(i, j - v) &amp;= (f(i-1, j - v) + f(i-1, j - 2v) +  \\            &amp; \\qquad \\qquad f(i-1, j - 2\\cdot v) +  \\cdots ) \\</p> <p>\\end{align*}</p> <p>$$</p> <p>\u4f7f\u7528 \\(f(i, j - v)\\) \u8fdb\u884c\u53d8\u91cf\u4ee3\u6362\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u5316\u7b80\u5f0f</p> \\[ \\begin{align*}   f(i, j) &amp;= f(i-1, j) + f(i, j - v)  \\end{align*} \\] <p> \u7a7a\u95f4\u4f18\u5316  </p> <p>\u6211\u4eec\u53ef\u4ee5\u5c06 <code>f(i, j) = f(i - 1, j) + f(i, j - v)</code> \u4f18\u5316\u4e3a <code>f(j) = f(j) + f(j - v)</code>\u3002 \u8fd9\u662f\u56e0\u4e3a\u6211\u4eec\u662f\u4ece\u5c0f\u5230\u5927\u904d\u5386 \u4f53\u79ef\u7684\uff0c\u5728\u8ba1\u7b97<code>f(j)</code> \u65f6, <code>f(j - v)</code> \u5df2\u7ecf\u88ab\u66f4\u65b0\uff0c\u6240\u4ee5 \u5728\u66f4\u65b0 <code>f(j)</code> \u524d\uff0c <code>f(j)</code> \u662f\u4e0a\u4e00\u5c42\u7684<code>j</code> (\u5373 <code>i-1</code> \u5c42), <code>f(j- v)</code> \u5df2\u7ecf\u88ab\u8986\u76d6\u4e86\uff0c\u662f\u5f53\u524d\u5c42(\u5373\u7b2c <code>i</code> \u5c42)\u7684 <code>j - v</code>\u3002</p> <p>\u7531\u6b64\u6211\u4eec\u53d1\u73b0\uff0c\u4f18\u5316\u524d\u548c\u4f18\u5316\u540e\uff0c\u4e24\u4e2a\u8868\u8fbe\u5f0f\u662f\u5b8c\u5168\u7b49\u4ef7\u7684\u3002</p>"},{"location":"notes/notes/#_19","title":"\u603b\u7ed3","text":"<p>\u80cc\u5305\u7684\u9002\u7528\u573a\u666f\uff1a \u6709\u9650\u5236\u7684\u9009\u62e9\u95ee\u9898</p> <ul> <li>01 \u80cc\u5305\u95ee\u9898 &lt;--&gt; \u591a\u91cd\u80cc\u5305\u95ee\u9898 &lt;--&gt; \u5206\u7ec4\u80cc\u5305\u95ee\u9898</li> <li>\u5b8c\u5168\u80cc\u5305\u95ee\u9898 </li> </ul> <p></p>"},{"location":"notes/notes/#dp","title":"\u7ebf\u6027 dp","text":""},{"location":"notes/notes/#a898","title":"A898 \u6570\u5b57\u4e09\u89d2\u5f62","text":"<p>\u8def\u5f84\u95ee\u9898\uff0c\u72b6\u6001\u8868\u793a\u4e00\u822c\u90fd\u7528 \u5750\u6807</p> <ul> <li> <p>Define Objective function</p> <p>f(i, j), \u4ee5 \u5750\u6807(1, 1) \u4e3a\u8d77\u70b9\uff0c(i, j) \u4e3a\u7ec8\u70b9\u7684\u8def\u5f84\u6700\u5927\u503c - Identify base cases</p> \\[ f(i,j ) = \\begin{cases}    0 &amp;\\qquad i = 0, j = 0  \\\\    -\\infty &amp;\\qquad other \\end{cases} \\] </li> <li> <p>Write down a recurrence relation for the optimized Objective function</p> </li> </ul> \\[ f(i, j) = \\text{max}(f(i - 1, j - 1), f(i - 1, j)) \\] <ul> <li> <p>What is the order of execution</p> <p>Down to Top  - where to look for answer</p> </li> </ul> <p>$$   \\underset{1 \\le k \\le n}{\\text{max} } (f(n, k));   $$</p>"},{"location":"notes/notes/#a895","title":"A895 \u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217","text":"<ul> <li> <p>Define Objective function</p> <p>f(i), \u4ee5\u7b2ci\u4e2a\u6570\u7ed3\u5c3e\u7684\u5355\u8c03\u9012\u589e\u5b50\u5e8f\u5217 \uff08\u4e2a\u6570\uff09  - Identify base cases</p> <p>\\(f(i) = 1 \\quad (1 \\le i \\le n)\\)  - Write down a recurrence relation for the optimized Objective function</p> </li> </ul> \\[ f(i) = \\begin{cases}    \\text{max} (f(i), f(j) + 1) &amp;\\quad a[i] &gt; a[j], 1 \\le j &lt; i  \\\\    f(i) &amp;\\quad otherwise \\end{cases} \\] <ul> <li>What is the order of execution</li> <li>where to look for answer</li> </ul>"},{"location":"notes/notes/#a897","title":"A897 \u6700\u957f\u516c\u5171\u5b50\u5e8f\u5217","text":"<p>\u96be\u70b9\uff1a\u4e0d\u592a\u597d\u8fdb\u884c \u72b6\u6001\u8868\u793a</p> <ul> <li> <p>Define Objective function</p> <p>f(i, j) \u8868\u793a A[1 \\(\\sim\\) i], B[1 \\(\\sim\\) j] \u7684\u6700\u5927\u516c\u5171\u5b50\u5e8f\u5217\u96c6\u5408  - Identify base cases</p> <p>f(0, 0) = 0 - Write down a recurrence relation for the optimized Objective function</p> </li> </ul> \\[ f(i, j) = \\begin{cases} \\text{max} (f(i - 1, j), f(i, j - 1), f(i - 1, j - 1) + 1) &amp; \\quad a[i] == b[j] \\\\ \\text{max} (f(i -1, j), f(i, j - 1))   &amp;  otherwise \\\\  \\end{cases} \\] <ul> <li> <p>What is the order of execution</p> <p>Down to Top  - where to look for answer</p> <p>f(n, m)</p> </li> </ul> <p>\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u89e3\u91ca\uff1a \u96c6\u5408\u5212\u5206\u65b9\u5f0f\uff1a \u6839\u636e\u4e24\u4e2a\u5b57\u4e32\u7684\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\u6765\u5212\u5206 </p> <p>\u82e5 a[i] == b[i], \u90a3\u4e48\u7531 A[i], B[j] \u6784\u6210\u7684 \u516c\u5171\u5b50\u5e8f\u5217\u5fc5\u5b9a\u5305\u542b a[i] \u4e0e b[i], \u95ee\u9898\u5c31\u8f6c\u5316\u4e3a \u6c42 f(i -1, j -1) \u7684\u6700\u957f\u516c\u5171\u5b50\u5e8f\u5217</p> <p>\u82e5 a[i] != b[i], \u90a3\u4e48\u4e24\u4e2a\u5b57\u7b26\u91cc\u9762\u4e00\u5b9a\u6709\u4e00\u4e2a\u53ef\u4ee5\u629b\u5f03\u7684\uff0c\u53ef\u4ee5\u5bf9 f(i -1, j), f(i, j -1) \u4e24\u79cd\u72b6\u6001\u53d6 max \u6765\u8f6c\u79fb </p> <pre><code>int main()\n{\nint n, m;\ncin &gt;&gt; n &gt;&gt; m;\nfor (int i = 1; i &lt;= n; i++) {\ncin &gt;&gt; a[i];\n}\ngetchar();\nfor (int i = 1; i &lt;= m; i++) {\ncin &gt;&gt; b[i];\n}\n\nfor (int i = 1; i &lt;= n; i++) {\nfor (int j = 1; j &lt;= m; j++) {\nf[i][j] = max(f[i - 1][j], f[i][j - 1]);\nif (a[i] == b[j]) f[i][j] = max(f[i - 1][j - 1] + 1, f[i][j]);\n}\n}\n\ncout &lt;&lt; f[n][m];\n\nreturn 0;\n}\n</code></pre>"},{"location":"notes/notes/#a899","title":"A899 \u7f16\u8f91\u8ddd\u79bb","text":"<p>\u96be\u70b9\uff1a\u72b6\u6001\u8868\u793a\u96be\u4ee5\u60f3\u5230\u3002 \u96be\u4ee5\u5199\u51fa\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff0c\u4e0d\u77e5\u9053\u5982\u4f55\u5212\u5206\u96c6\u5408</p> <p>\u96c6\u5408\u5212\u5206\u65b9\u5f0f\uff1a - Define Objective function</p> <pre><code>f(i, j) \u8868\u793a \u5c06 A[1 $\\sim$ i] \u53d8\u4e3a B[1 $\\sim$ j] \u6240\u9700\u8981\u7684\u6700\u5c11\u6b65\u9aa4\uff0c\n\u4e5f\u53ef\u4ee5\u7406\u89e3\u4e3a\uff0c\u7ecf\u8fc7 f(i, j)\u6b65\u9aa4\u540e\uff0cA[1 .. i] \u5df2\u7ecf\u548c B[1 .. j] \u5b8c\u5168\u4e00\u6837\n</code></pre> <ul> <li>Identify base cases</li> </ul> \\[ f(i, 0) = i \\qquad (1 \\le i \\le n) \\\\ f(0, j) = j \\qquad (1 \\le j \\le m) \\] <ul> <li>Write down a recurrence relation for the optimized Objective function</li> </ul> \\[ f(i, j) = \\begin{cases} \\text{min} (f(i - 1, j) + 1, f(i, j - 1) + 1, f(i - 1, j - 1) + 1) &amp; \\quad a[i] != b[j] \\\\ \\text{min} (f(i - 1, j) + 1, f(i, j - 1) + 1, f(i - 1, j - 1) + 0) &amp; \\quad a[i] == b[j] \\\\ \\end{cases} \\] <ul> <li>What is the order of execution</li> <li>where to look for answer</li> </ul> <p>\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u89e3\u91ca:</p> <p>f(i, j) \u53ef\u4ee5\u5206\u89e3\u4e3a 4 \u4e2a \u5b50\u95ee\u9898\u3002</p> <p>\u5982\u679c A[1 .. i - 1] \u5df2\u7ecf\u548c B[1 .. j] \u5b8c\u5168\u4e00\u81f4 \uff08\u4e5f\u5373 \u7ecf\u8fc7\u4e86 f(i-1, j) \u6b65\uff09, \u90a3\u4e48\u53ea\u9700\u8981\u5c06 a[i] \u5220\u9664\u5373\u53ef\u3002</p> <p>\u5982\u679c A[1 .. i] \u5df2\u7ecf\u548c B[1 .. j - 1] \u5b8c\u5168\u4e00\u81f4 \uff08\u4e5f\u5373 \u7ecf\u8fc7\u4e86 f(i , j - 1) \u6b65\uff09, \u90a3\u4e48\u53ea\u9700\u8981 \u589e\u52a0\u4e00\u4e2a b[j] \u5373\u53ef\u3002</p> <p>\u5982\u679c A[1 .. i - 1] \u5df2\u7ecf\u548c B[1 .. j - 1] \u5b8c\u5168\u4e00\u81f4 \uff08\u4e5f\u5373 \u7ecf\u8fc7\u4e86 f(i - 1 , j - 1) \u6b65\uff09, \u5982\u679c a[i] \u4e0d\u7b49\u4e8e b[i], \u5c31\u4fee\u6539\u4e00\u6b21\uff0c\u5982\u679c a[i] == b[i] \u4e0d\u505a\u4efb\u4f55\u64cd\u4f5c</p> <p> \u867d\u7136 f(i, j) \u53ea\u662f\u4e00\u4e2a\u6570\uff0c\u4f46\u662f\u8981\u8ba4\u771f\u8003\u8651\u5176\u80cc\u540e\u7684\u610f\u4e49  </p> <p></p>"},{"location":"notes/notes/#a1051","title":"A1051 \u6700\u5927\u7684\u548c","text":"<ul> <li> <p>Define Objective function</p> </li> <li> <p>Identify base cases</p> </li> <li>Write down a recurrence relation for the optimized Objective function</li> <li>What is the order of execution</li> <li>where to look for answer</li> </ul>"},{"location":"notes/notes/#dp_1","title":"\u6811\u5f62 dp","text":""},{"location":"notes/notes/#a285","title":"A285 \u6ca1\u6709\u4e0a\u53f8\u7684\u805a\u4f1a","text":"<ul> <li> <p>Define Objective function</p> <ol> <li>\\(f(u, 0)\\) \u4ece\u6240\u6709\u4ee5u\u4e3a\u6839\u7684\u5b50\u6811\u9009\u62e9\uff0c\u5e76\u4e14\u4e0d\u9009u\u8fd9\u4e2a\u70b9\u7684\u65b9\u6848\u6570 </li> <li>\\(f(u, 1)\\) \u4ece\u6240\u6709\u4ee5u\u4e3a\u6839\u7684\u5b50\u6811\u9009\u62e9\uff0c\u5e76\u4e14\u9009u\u8fd9\u4e2a\u70b9\u7684\u65b9\u6848\u6570</li> </ol> </li> </ul> <p>(\u6c42\u786e\u5b9a\u7684\u96c6\u5408\u7684\u6700\u5927\u503c)</p> <ul> <li> <p>Identify the base case</p> <p>f[u][1] = happy[u]</p> </li> <li> <p>Write down a recurrence relation for the optimized Objective function</p> <p>\u8bbe u \u7684\u5b69\u5b50\u6570\u7ec4\u4e3av $$ f(u, 0) = sum \\big( max(f(v_1, 0), f(v_1,1)) +  max(f(v_2, 0), f(v_1, 1)) + \\cdots \\big) $$</p> </li> </ul> \\[ f(u, 1) = sum (f(v_1, 0) + f(v_2, 0 ) + \\cdots + f(v_n, 0)) \\] <ul> <li> <p>What is the order of execution</p> <p>Top to Down </p> </li> <li> <p>where to look for answer</p> <p>max(f(root, 0), f(root, 1))</p> </li> </ul>"},{"location":"notes/notes/#a1072","title":"A1072 \u6700\u5927\u8def\u5f84\u548c","text":"<p> Naive Approach, \u590d\u6742\u5ea6 \\(\\Theta(n^2)\\) \u4f1a\u8d85\u65f6</p> <ul> <li> <p>Define Objective function</p> </li> <li> <p>f(u, 0) \u4ee5u\u4e3a\u6839\u8282\u70b9\uff0c\u4e14\u4e0d\u9009u\u8fd9\u4e2a\u8282\u70b9\u7684\u8def\u5f84\u65b9\u6848\u6570</p> </li> <li>f(u, 1) \u4ee5u\u4e3a\u6839\u8282\u70b9\uff0c\u4e14\u9009u\u8fd9\u4e2a\u8282\u70b9\u7684\u8def\u5f84\u65b9\u6848\u6570</li> </ul> <p>(\u6c42\u786e\u5b9a\u65b9\u6848\u96c6\u5408\u7684\u6700\u5927\u503c)</p> <ul> <li> <p>Identify base cases</p> <p>f(u, 1) = w[u]</p> </li> <li> <p>Write down a recurrence relation for the optimized Objective function</p> </li> </ul> <p>\u8bbe u \u7684\u5b69\u5b50\u6570\u7ec4\u4e3a v, \u5047\u8bbe\u6709 n \u4e2a\u5b69\u5b50</p> \\[ f(u, 0) = \\underset{1 \\le j \\le n}{max} (f(v_j, 0), f(v_j, 1)) \\] \\[ f(u, 1) = \\text{max} (w[u], w[u] +  \\underset{1 \\le j \\le n}{max} ( f(v_j, 1))) \\] <ul> <li> <p>What is the order of execution</p> <p>Top to Bottom</p> </li> <li> <p>where to look for answer</p> <p>\\(\\underset{1 \\le i \\le  n}{\\text{max}}(\\text{max} (f(i, 0), f(i, 1)))\\)</p> </li> </ul> <p>\\(Q\\): \u4e3a\u4ec0\u4e48\u4e0a\u9762\u8fd9\u79cd\u7b97\u6cd5\u9700\u8981\u904d\u5386\u6bcf\u4e00\u4e2a\u9876\u70b9\uff0c\u624d\u80fd\u627e\u5230\u6700\u5927\u503c\u3002</p> <p>\\(A\\): \u56e0\u4e3a\u8fd9\u91cc\u7684\u8fb9\u90fd\u662f\u65e0\u5411\u8fb9\uff0c\u6bcf\u4e00\u4e2a\u8282\u70b9\u90fd\u53ef\u4ee5\u4f5c\u4e3a\u6839\u8282\u70b9\uff0c\u8fd9\u548c A285 \u9898\u6709\u6240\u4e0d\u540c </p> <p> \u6b63\u786e\u89e3\u6cd5  </p> <p></p>"},{"location":"notes/notes/#dp_2","title":"\u533a\u95f4 dp","text":"<p>\u51e1\u662f\u548c\u64cd\u4f5c\u6570\u6709\u5173\u7cfb\u7684\uff0c\u90fd\u9700\u8981\u5173\u5fc3 dp \u51fd\u6570\u5bf9 \u5e8f\u5217\u9020\u6210\u7684\u5f71\u54cd\u3002</p>"},{"location":"notes/notes/#a282","title":"A282 \u77f3\u5b50\u5408\u5e76","text":"<ul> <li> <p>Define Objective function</p> <p>f(i, j) \u5c06 i \\(\\sim\\) j \u4e4b\u95f4\u7684\u533a\u95f4\u5408\u5e76\u6240\u9700\u8981\u7684\u65b9\u6848\u6570 (\u4e5f\u53ef\u4ee5\u7406\u89e3\u4e3a\u533a\u95f4\\([i, j]\\) \u8fd9\u6bb5\u77f3\u5b50\uff0c\u7ecf\u8fc7 \\(f(i, j)\\) \u6b65\u540e\uff0c\u5df2\u7ecf\u5408\u5e76\u6210\u4e00\u5806\u77f3\u5b50\u4e86)  \u6c42 \u6700\u5c0f\u503c </p> </li> <li> <p>Identify base cases</p> </li> </ul> \\[ f(i, j)\\begin{cases}   0 &amp; \\text{if } i=j \\\\   \\infty &amp; \\text{otherwise}  \\end{cases} \\] <ul> <li>Write down a recurrence relation for the optimized Objective function</li> </ul> \\[ f(i, j) = \\underset{0 \\le k \\le j - i - 1}{\\text{min}} (f(i, i + k), f(i + k + 1, j)) \\] <p> </p> <ul> <li> <p>What is the order of execution</p> <p>Bottom to Top</p> </li> <li> <p>where to look for answer</p> <p>f(1, n)</p> </li> </ul> <p>\u533a\u95f4dp \u6a21\u677f </p> <pre><code>for (int len = 1; len &lt;= n; len++) {         // \u533a\u95f4\u957f\u5ea6\nfor (int i = 1; i + len - 1 &lt;= n; i++) { // \u679a\u4e3e\u8d77\u70b9\nint j = i + len - 1;                 // \u533a\u95f4\u7ec8\u70b9\nif (len == 1) {\ndp[i][j] = \u521d\u59cb\u503c\ncontinue;\n}\n\nfor (int k = i; k &lt; j; k++) {        // \u679a\u4e3e\u5206\u5272\u70b9\uff0c\u6784\u9020\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\ndp[i][j] = min(dp[i][j], dp[i][k] + dp[k + 1][j] + w[i][j]);\n}\n}\n}\n</code></pre>"},{"location":"notes/notes/#dp_3","title":"\u72b6\u6001\u538b\u7f29dp","text":""},{"location":"notes/notes/#_20","title":"\u6700\u77ed\u54c8\u5bc6\u987f\u8def\u5f84","text":"<ul> <li> <p>Define Objective function</p> <p>\\(f(i, j)\\) \u6240\u6709\u4ece \\(0\\) \u8d70\u5230 \\(j\\) \uff0c\u8d70\u8fc7\u7684\u8def\u5f84\u5b58\u5728 \\(i\\) \u4e2d\u3002  \u6c42\u6700\u5c0f\u503c </p> </li> <li> <p>Identify base cases</p> </li> </ul> \\[ f(i, j) = \\infty \\qquad \\text{iff }  (i, j) \\ne (1, 0) \\\\  f(1, 0) = 0  \\] <p>\\(Q:\\) \u4e3a\u4ec0\u4e48 \\(f(0, 0)\\) \u7b49\u4e8e \\(\\infty\\) </p> <p>\\(A:\\) \u6309\u7167\u5b9a\u4e49, \\(f(0, 0)\\) \u8868\u793a\u4ece\u8d77\u70b9\u5230 0 \u8fd9\u4e2a\u70b9\u6240\u7ecf\u8fc7\u7684\u72b6\u6001\u4e3a \\(i\\), \u4f46\u662f \\(i\\) \u7684\u503c\u662f \\(0\\) \uff0c \u8868\u793a\u4e00\u4e2a\u70b9\u90fd\u4e0d\u7ecf\u8fc7\uff0c\u8fd9\u4e0e\u4e8b\u5b9e\u76f8\u6096\uff08\u56e0\u4e3a\u5230\u8fbe\u4e86 \\(0\\) \u8fd9\u4e2a\u8282\u70b9, \u6240\u4ee5 i \u7684\u503c\u5e94\u8be5\u4e3a \\(1\\)\uff09 \\((0 | 1 &lt;&lt; 1 = 1)\\)</p> <ul> <li>Write down a recurrence relation for the optimized Objective function</li> </ul> <p></p> \\[ f(i, j) = \\underset{0 \\le k \\le n - 1}{\\text{min}} \\big( f(i - \\{J\\}, k)  \\big) \\] <ul> <li> <p>What is the order of execution</p> <p>Bottom To Top</p> </li> <li> <p>where to look for answer</p> <p>f((1 &lt;&lt; n) - 1, n)</p> </li> </ul>"},{"location":"notes/notes/#l21a04","title":"L21A04 \u56de\u8def\u8ba1\u6570","text":"<ul> <li> <p>Define Objective function</p> <p>\\(f(i, j)\\) \u4ece 0 \u5230\u8fbe j \u8282\u70b9\u7684 \u8def\u5f84 \u50a8\u5b58\u5728 i \u4e2d  \u6c42 \u65b9\u6848\u603b\u548c</p> </li> <li> <p>Identify base cases</p> </li> </ul> \\[     f(i, j) = 0 \\qquad \\text{iff }   (i, j) \\ne (1, 0)\\\\      f(1, 0) = 1  \\] <ul> <li>Write down a recurrence relation for the optimized Objective function</li> </ul> \\[ f(i, j) = \\underset{0 \\le k \\le n - 1}{\\text{sum}} \\big( f(i - \\{J\\}, k)    \\big) \\] <ul> <li> <p>What is the order of execution</p> <p>Bottom To Top</p> </li> <li> <p>where to look for answer</p> <p>\\(\\sum_{1 \\le i \\le n-1} f((1 &lt;&lt; n) - 1, i)\\) </p> </li> </ul>"},{"location":"notes/notes/#_21","title":"\u6811\u72b6\u6570\u7ec4","text":""},{"location":"notes/notes/#a3662","title":"A3662 \u6700\u5927\u4e0a\u5347\u5b50\u5e8f\u5217","text":"<p> TLE  </p> <ul> <li> <p>Define Objective function</p> <p>f(i) \u8868\u793a \\(1 \\sim i\\) \u4e2d\u4ee5 i \u7ed3\u5c3e\u7684\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u548c </p> </li> <li> <p>Identify base cases</p> <p>f(i) = a[i]</p> </li> <li> <p>Write down a recurrence relation for the optimized Objective function</p> </li> </ul> <p>$$ f(i) = \\begin{cases}</p> <p>\\underset{1 \\le j \\le i - 1}{\\text{max}} (f(i), a[i] + f(j)) &amp; \\text{if } a[i] &gt; a[j]   \\</p> <p>a[i] &amp; \\end{cases} $$</p> <ul> <li> <p>What is the order of execution</p> <p>Bottom To Top </p> </li> <li> <p>where to look for answer</p> </li> </ul> <p>\\(\\underset{1 \\le i \\le n}{\\text{max} } (f(i))\\)</p> <p> \u4f18\u5316\u505a\u6cd5  </p>"},{"location":"notes/notes/#_22","title":"\u7ebf\u6bb5\u6811","text":"<p>Lead in</p> <p>\u7ebf\u6bb5\u6811\u7528\u4e8e\u5904\u7406 \u5bf9\u4e8e \u6570\u7ec4\u7684\u533a\u95f4\u67e5\u8be2\u3002\u6bd4\u5982\uff0c\u6c42 \u6570\u7ec4 l - r \u8303\u56f4 \u5185\u7684\u548c\u3002</p> <p>build </p> <p>\u7ebf\u6bb5\u6811\u662f\u4e00\u4e2a\u4e8c\u53c9\u6811\uff0c\u5b83\u7684\u6bcf\u4e00\u4e2a\u7aef\u70b9\u90fd\u8868\u793a\u4e00\u6bb5\u533a\u95f4 (\u548c\u4e00\u4e9b\u533a\u95f4\u7684\u6027\u8d28 \uff0cmin | max | sum)</p> <p></p> <p>\u6211\u4eec\u53ef\u4ee5\u91c7\u7528\u81ea\u4f4e\u5411\u4e0a\u7684\u65b9\u5f0f\uff0c\u6784\u5efa\u7ebf\u6bb5\u6811\u3002\u4ece\u53f6\u5b50\u8282\u70b9\u5f00\u59cb, \u5411\u8005\u6839\u8282\u70b9\u7684\u65b9\u5411\u5ef6\u4f38\u3002</p> <p>\u6bcf\u4e00\u4e2a\u9012\u5f52\u7684\u8fc7\u7a0b\u4e2d\uff0c\u90fd\u9700\u8981\u4f7f\u7528\u4e24\u4e2a\u5b69\u5b50\u8282\u70b9\u7684\u6570\u636e\u53bb\u5f62\u6210\u4e00\u4e2a\u7236\u8282\u70b9\u3002 \u5982\u4f55\u5408\u5e76\u4e0e\u5177\u4f53\u9898\u76ee\u6709\u5173\u3002</p> <p>\u64cd\u4f5c </p> <p>\u7ebf\u6bb5\u6811\u652f\u6301\u4e24\u79cd\u64cd\u4f5c:</p> <ol> <li><code>update</code> </li> </ol> <p>\u6bcf\u4e00\u6b21\u9012\u5f52\u90fd\u9009\u4e00\u4e2a\u65b9\u5411</p> <ol> <li><code>query</code> </li> </ol> <p>\u4e09\u79cd\u60c5\u51b5 - <code>l r start end</code>, <code>start end l r</code> \u5f53\u524d\u533a\u95f4 <code>(start end)</code> \u5728 \u6240\u6c42\u533a\u95f4 <code>(l, r)</code> \u4e4b\u5916  </p> <pre><code>\u76f4\u63a5 `return` \u4e00\u4e2a\u65e0\u6548\u503c\n</code></pre> <ul> <li> <p><code>l start end r</code> \u5f53\u524d\u533a\u95f4 <code>(start end)</code> \u5728 \u6240\u6c42\u533a\u95f4 <code>(l, r)</code> \u5185\u90e8 </p> <p>\u76f4\u63a5 <code>return</code> \u5f53\u524d\u533a\u95f4\u6240\u4fdd\u5b58\u7684\u503c </p> </li> <li> <p>\u5f53\u524d\u533a\u95f4 <code>(start end)</code> \u4e0e \u6240\u6c42\u533a\u95f4 <code>(l, r)</code> \u6709\u4ea4\u53c9  </p> <p>\u9012\u5f52\u6c42\u89e3 </p> </li> </ul> <p>\u533a\u95f4\u66f4\u65b0 </p> <p>\u61d2\u6807\u8bb0\uff0c</p> <p>\u95ee\u9898\u8fc7\u7a0b\u4e2d\u9047\u5230\u7684\u95ee\u9898 </p> <ol> <li>\u9012\u5f52\u65f6\u8981\u52a0\u4e00\u4e2a\u5224\u65ad\u662f\u5426\u4e3a \u7a7a\u7684\u6761\u4ef6 </li> <li><code>&lt;&lt;</code> <code>&gt;&gt;</code> \u641e\u6df7\u4e86</li> <li>\u57fa\u7ebf\u6761\u4ef6\u8bb0\u5f97return</li> </ol>"},{"location":"notes/notes/#_23","title":"\u53cc\u6307\u9488\u7b97\u6cd5","text":""},{"location":"notes/notes/#leetcode-3","title":"leetcode 3","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32 <code>s</code> \uff0c\u8bf7\u4f60\u627e\u51fa\u5176\u4e2d\u4e0d\u542b\u6709\u91cd\u590d\u5b57\u7b26\u7684\u00a0\u6700\u957f\u5b50\u4e32\u00a0\u7684\u957f\u5ea6\u3002</p>"},{"location":"notes/open_course/","title":"Open course","text":"\u63cf\u8ff0 \u94fe\u63a5 cs537-\u64cd\u4f5c\u7cfb\u7edf CS-537: Introduction to Operating Systems FA19 COMPSCI 537 001-\u64cd\u4f5c\u7cfb\u7edf FA19 COMPSCI 537 001 &lt;++&gt; &lt;++&gt; &lt;++&gt; &lt;++&gt;"},{"location":"notes/paper/","title":"Paper","text":"<p>${toc}</p>"},{"location":"notes/paper/#_1","title":"\u8bba\u6587\u8981\u70b9","text":""},{"location":"notes/paper/#alexnet","title":"AlexNet","text":"<p>\u95ee\u9898 </p> <ul> <li> <p>\\(Q\\): AlexNet \u4e2d\u4f7f\u7528\u4e86\u4ec0\u4e48\u6fc0\u6d3b\u51fd\u6570\uff1f ReLU \u76f8\u6bd4 Sigmoid \u7684\u4e3b\u8981\u4f18\u52bf\u6709\u54ea\u4e9b\uff1f     &gt; \\(A\\): ReLU\u3002\u4f18\u70b9\uff1a1. \u786c\u4ef6\u53cb\u597d\uff0c\u8ba1\u7b97\u901f\u5ea6\u5feb\u30022.\u4e0d\u4f1a\u53d1\u751f\u9971\u548c\uff0c\u53ef\u4ee5\u7f13\u89e3\u68af\u5ea6\u6d88\u5931\u7684\u60c5\u51b5</p> </li> <li> <p>\\(Q\\): Dropout \u4e3a\u4ec0\u4e48\u53ef\u4ee5\u51cf\u5c11\u8fc7\u62df\u5408\uff1fDropout \u662f\u600e\u4e48\u8ba1\u7b97\u7684\uff1f      &gt; \\(A\\): \u4f7f\u7528 Dropout \u7684\u8bdd\uff0c\u76f8\u5f53\u4e8e\u8bad\u7ec3\u4e86\u5f88\u591a\u4e2a\u795e\u7ecf\u7f51\u7edc\uff0c\u8fd9\u4e9b\u7f51\u7edc\u5171\u4eab\u53c2\u6570     &gt; \u6bcf\u4e00\u4e2a\u7f51\u7edc\u8fc7\u62df\u5408\u7684\u5730\u65b9\u4e0d\u540c\uff0c\u6d4b\u8bd5\u65f6\uff0c\u5bf9\u8fd9\u4e9b\u7f51\u7edc\u53d6\u5e73\u5747\uff0c\u8fc7\u62df\u5408\u76f8\u4e92\u62b5\u9500\u3002</p> </li> <li> <p>\\(Q\\): AlexNet \u7684\u7ed3\u6784\u662f\u600e\u4e48\u6837\u7684\uff0c\u51e0\u4e2a\u5377\u79ef\u5c42\uff0c\u51e0\u4e2a\u5168\u8fde\u63a5\u5c42      &gt; \\(A\\):  5\u4e2a\u5377\u79ef\u5c42\uff0c3\u4e2a\u5168\u8fde\u63a5\u5c42</p> </li> <li> <p>\\(Q\\): AlexNet \u4f7f\u7528\u4e86\u54ea\u4e9b\u51cf\u5c11\u8fc7\u62df\u5408\u7684\u65b9\u6cd5     &gt; \\(A\\): \u6570\u636e\u6269\u589e \u548c Dropout\u3002 </p> </li> <li> <p>\\(Q\\): AlextNet \u7684\u6570\u636e\u6269\u589e\u662f\u600e\u4e48\u505a\u7684      &gt; \\(A\\): \u6570\u636e\u6269\u589e\u6709\u4e24\u79cd     &gt; 1. \u5e73\u79fb\u548c\u6c34\u5e73\u53cd\u8f6c\uff0c\u5b9e\u9645\u4e0a\u5c31\u662f\u5c06\u56fe\u7247\u7684\u4e3b\u4f53\u79fb\u52a8\u5230\u4e2d\u5fc3\u4f4d\u7f6e     &gt; 2. \u6539\u53d8 RGB \u7684\u503c\u3002\u5229\u7528 pca \u83b7\u53d6\u4e3b\u6210\u5206\uff0c\u7136\u540e\u5728\u7279\u5f81\u503c\u4e0a\u4e58\u4e0a\u9ad8\u65af\u968f\u673a\u6570</p> </li> <li> <p>\\(Q\\): AlexNet \u7684\u7f51\u7edc\u7ed3\u6784\u4e2d\uff0c\u6709\u4ec0\u4e48\u4e0d\u5408\u7406\u7684\u5730\u65b9\u5417\uff1f      &gt; \\(A\\):  \u7b2c\u4e00\u4e2a\u5c42\u7684\u5377\u79ef\u6838\u8fc7\u5927\uff0c\u8fd9\u5bfc\u81f4\u8ba1\u7b97\u91cf\u4f1a\u5f88\u5927</p> </li> <li> <p>\\(Q\\): AlexNet \u6709\u4ec0\u4e48\u540e\u9762\u4eba\u4eec\u4e0d\u518d\u4f7f\u7528\u7684\u7ed3\u6784\u5417\uff1f     &gt; \\(A\\):  LRN</p> </li> </ul>"},{"location":"notes/paper/#vgg","title":"VGG","text":"<p>\u80cc\u666f\u4ecb\u7ecd </p> <p>2014 \u5e74 ImageNet \u6bd4\u8d5b\u7b2c\u4e8c\u540d</p> <p>\u63d0\u5347\u65b9\u5f0f </p> <p>\u589e\u52a0\u5377\u79ef\u5c42\u4e2a\u6570\uff0c\u589e\u52a0\u7f51\u7edc\u6df1\u5ea6\u3002</p> <p>\u6210\u679c </p> <ul> <li>\u5728 ImageNet \u6bd4\u8d5b\u4e2d\u53d6\u5f97\u826f\u597d\u6210\u7ee9</li> <li>\u6cdb\u5316\u6548\u679c\u597d</li> </ul> <p>\u95ee\u9898 </p> <ul> <li> <p>\\(Q\\): VGG\u7684\u7f51\u7edc\u7ed3\u6784\u6709\u4ec0\u4e48\u7279\u70b9\uff1f\u5377\u79ef\u5c42\u548cmaxpool\u5c42\u662f\u6309\u4ec0\u4e48\u89c4\u5f8b\u6392\u5e03\u7684?      &gt; \\(A\\): \u7279\u70b9:\u7f51\u7edc\u5c42\u6b21\u5f88\u6df1, \u7531\u4e94\u4e2a\u5377\u79ef\u5757\u548c\u4e09\u4e2a\u5168\u8fde\u63a5\u5c42\u6784\u6210; \u6bcf\u4e00\u4e2a\u5377\u79ef\u5757\u7531\u82e5\u5e72\u4e2a\u5377\u79ef\u5c42\u6784\u6210\uff0c\u6bcf\u4e00\u4e2a\u5377\u79ef\u5c42\u7684\u5377\u79ef\u6838\u5927\u5c0f\u90fd\u662f3*3, padding=1\u3002\u5377\u79ef\u5757\u4e4b\u95f4\u6709\u6c60\u5316\u5c42\uff0ckernel_size = 2, \u6b65\u957f\u4e3a2\u3002 \u89c4\u5f8b\uff1a\u4e00\u4e2a\u5377\u79ef\u5757\u540e\u8ddf\u4e0a\u4e00\u4e2a maxpool \u5c42\u3002</p> </li> <li> <p>\\(Q\\): \u5982\u4f55\u7406\u89e3 VGG \u4e2d\u7684\u5377\u79ef\u5757\uff1f\u591a\u4e2a 33 \u4e3a\u4ec0\u4e48\u53ef\u4ee5\u66ff\u4ee3\u4e00\u4e2a\u5927\u5377\u79ef\u6838\uff1f\u4ee3\u66ff\u540e\u6709\u54ea\u4e9b\u597d\u5904\uff1f     &gt; \\(A\\): \u4e00\u4e2a\u5377\u79ef\u5feb\u7531\u82e5\u5e72\u4e2a\u5377\u79ef\u5c42\u6784\u6210\uff0c\u6bcf\u4e00\u4e2a\u5377\u79ef\u5c42\u540e\u90fd\u6709\u4e00\u4e2a relu\u5c42\u3002\u56e0\u4e3a\u65bd\u7528\u591a\u4e2a33\u7684\u5377\u79ef\u6838\u7684\u6548\u679c\u548c\u5927\u5377\u79ef\u6838\u7684\u611f\u53d7\u91ce\u662f\u4e00\u6837\u7684\u3002\u597d\u5904\uff1a(1) \u53c2\u6570\u4e2a\u6570\u51cf\u5c11\uff0c\u8ba1\u7b97\u91cf\u4e0b\u964d\uff0c\u53ef\u4ee5\u51cf\u5c11\u8fc7\u62df\u5408\u3002(2) \u5377\u79ef\u5c42\u4e4b\u95f4\u6709 relu\uff0c\u589e\u52a0\u975e\u7ebf\u6027\u64cd\u4f5c\uff0c\u63d0\u5347\u9274\u522b\u80fd\u529b</p> </li> <li> <p>\\(Q\\): VGG \u662f\u5426\u4f7f\u7528\u4e86 LRN, \u4e3a\u4ec0\u4e48      &gt; \\(A\\): \u6ca1\u6709\uff0c\u56e0\u4e3a \u4f7f\u7528 LRN \u4e0d\u80fd\u63d0\u9ad8\u6a21\u578b\u7684\u6b63\u786e\u7387\uff0c\u5f92\u589e\u8ba1\u7b97\u91cf</p> </li> <li> <p>\\(Q\\): \u4ec0\u4e48\u662f\u611f\u53d7\u91ce\uff1f      &gt; \\(A\\): \u8f93\u51fa\u7279\u5f81\u56fe\u7684\u50cf\u7d20\u70b9\u5728\u8f93\u5165\u7279\u5f81\u56fe\u4e0a\u6620\u5c04\u7684\u533a\u57df \uff08\u795e\u7ecf\u7f51\u7edc\u4e2d\uff0c\u4e00\u4e2a\u795e\u7ecf\u5143\u770b\u5230\u7684\u533a\u57df\uff09</p> </li> <li> <p>\\(Q\\): \u8bad\u7ec3\u4e2d\u4f7f\u7528\u52a8\u91cf\uff0c\u4f1a\u5bf9\u68af\u5ea6\u6709\u4ec0\u4e48\u5f71\u54cd\uff1f\u4f7f\u7528\u52a8\u91cf\u6709\u4ec0\u4e48\u597d\u5904\uff1f      &gt; \\(A\\): \u5bf9\u6bcf\u6b21\u8fed\u4ee3\u8ba1\u7b97\u7684\u68af\u5ea6\u505a\u52a0\u6743\u5e73\u5747\uff0c\u4f7f\u7528\u52a8\u91cf\u7684\u597d\u5904\u662f\u80fd\u591f\u62b5\u6d88\u68af\u5ea6\u7684\u6296\u52a8\uff0c\u52a0\u5feb\u7b97\u6cd5\u6536\u655b\u7684\u901f\u5ea6\u3002</p> </li> </ul> <p></p> <ul> <li>\\(Q\\): weight decay \u5bf9\u76ee\u6807\u51fd\u6570\u6709\u4ec0\u4e48\u5f71\u54cd\uff1f\u4f7f\u7528 weight decay \u6709\u4ec0\u4e48\u597d\u5904\uff1f      &gt; \\(A\\): \u7ea6\u675f\u6743\u91cd weight \u8fc7\u62df\u5408\uff0c\u7f13\u89e3\u8fc7\u62df\u5408</li> </ul> <p></p> <ul> <li> <p>\\(Q\\): VGG \u662f\u5982\u4f55\u521d\u59cb\u5316\u7684      &gt; \\(A\\): \u5148\u7528\u6700\u6d45\u7684\u795e\u7ecf\u7f51\u7edc A \u6765\u8bad\u7ec3\uff0c\u8bad\u7ec3\u66f4\u6df1\u5c42\u6b21\u7684\u7f51\u7edc\u65f6\uff0c\u5c31\u5c06 A \u6a21\u578b\u8bad\u7ec3\u5f97\u5230\u7684\u53c2\u6570\u4f5c\u4e3a\u6df1\u5c42\u7f51\u7edc\u7684\u521d\u59cb\u53c2\u6570\u3002\u540e\u9762\u4f5c\u8005\u53d1\u73b0\u4f7f\u7528 Xavier/Kaiming \u7684\u521d\u59cb\u5316\u65b9\u5f0f\u4e5f\u884c\u3002</p> </li> <li> <p>\\(Q\\): \u5982\u4f55\u7406\u89e3 Xavier \u548c Kaiming \u7684\u521d\u59cb\u5316\u601d\u8def\uff1f      &gt; \\(A\\):  \u4e3a\u4e86\u9632\u6b62\u51fa\u73b0 \u68af\u5ea6\u6d88\u5931 \u548c \u68af\u5ea6\u7206\u70b8, \u5408\u7406\u7684\u521d\u59cb\u5316\u5e94\u8be5\u4fdd\u8bc1 \u8f93\u5165\u548c\u8f93\u51fa\u7684\u5206\u5e03\u76f8\u540c </p> </li> <li> <p>\\(Q\\): VGG \u5728\u8bad\u7ec3\u548c\u6d4b\u8bd5\u65f6\u90fd\u4f7f\u7528\u4e86\u591a\u5c3a\u5ea6\u56fe\u50cf\u6269\u589e\uff0c\u6709\u4ec0\u4e48\u6548\u679c      &gt; \\(A\\):  \u591a\u5c3a\u5ea6\u7684\u6548\u679c\u4f1a\u6bd4\u5355\u5c3a\u5ea6\u597d (256-512) \u968f\u673a\u9009\u53d6\u56fe\u50cf</p> </li> <li> <p>\\(Q\\): VGG \u8fd8\u5c1d\u8bd5\u4e86\u591a\u4e2a\u6a21\u578b\u878d\u5408\uff0c\u6709\u4ec0\u4e48\u6548\u679c     &gt; \\(A\\):  \u591a\u6a21\u578b\u878d\u5408\u7684\u6548\u679c\u4f1a\u66f4\u597d</p> </li> <li> <p>\\(Q\\): \u4e3a\u4ec0\u4e48 VGG \u6700\u6df1\u4e3a19\u5c42      &gt; \\(A\\):  \u56e0\u4e3a\u5230\u4e8619\u5c42\uff0c\u6a21\u578b\u57fa\u672c\u5df2\u7ecf\u9971\u548c\u4e86\uff0c\u518d\u589e\u52a0\u5c42\u6570\u6a21\u578b\u7684\u51c6\u786e\u7387\u4e0d\u4f1a\u518d\u6709\u6240\u53d8\u5316\u3002</p> </li> </ul>"},{"location":"notes/paper/#googlenet","title":"GoogLeNet","text":"<p>\u80cc\u666f  2014 \u5e74 \u5206\u7c7b\u51a0\u519b</p> <ul> <li> <p>\\(Q\\): GoogLeNet \u7684\u603b\u4f53\u8bbe\u8ba1\u76ee\u6807\u662f\u4ec0\u4e48\uff1f     &gt; \\(A\\): 1. \u63d0\u5347\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\u7684\u6df1\u5ea6\u548c\u5bbd\u5ea6\u3002 2. \u4e0d\u589e\u52a0 (\u51cf\u5c11) \u8ba1\u7b97\u91cf\u3002</p> </li> <li> <p>\\(Q\\): \u76f4\u63a5\u53bb\u6389\u7f51\u7edc\u4e2d\u8f83\u5927\u6743\u91cd\u7684\u7a00\u758f\u65b9\u6cd5\u6709\u4ec0\u4e48\u7f3a\u9677     &gt; \\(A\\): 1. \u7f51\u7edc\u635f\u5931\uff1a\u76f4\u63a5\u526a\u679d\u53ef\u80fd\u4f1a\u5bfc\u81f4\u7f51\u7edc\u7684\u6027\u80fd\u4e0b\u964d\uff0c\u56e0\u4e3a\u526a\u679d\u4f1a\u5220\u9664\u67d0\u4e9b\u6743\u91cd\uff0c\u4ece\u800c\u4e22\u5931\u4e00\u90e8\u5206\u7f51\u7edc\u6240\u5b66\u5230\u7684\u77e5\u8bc6\u3002     &gt; \\(A\\): 2. \u4e0d\u89c4\u5219\u6027\uff1a\u76f4\u63a5\u526a\u679d\u53ef\u80fd\u4f1a\u5bfc\u81f4\u7f51\u7edc\u4e2d\u7684\u7a00\u758f\u6027\u53d8\u5f97\u4e0d\u89c4\u5219\u3002     &gt; \\(A\\): 3. \u8bad\u7ec3\u4ee3\u4ef7\uff1a\u76f4\u63a5\u526a\u679d\u53ef\u80fd\u9700\u8981\u8fdb\u884c\u591a\u8f6e\u7684\u8fed\u4ee3\u8bad\u7ec3\u548c\u526a\u679d\u8fc7\u7a0b\uff0c\u4ee5\u627e\u5230\u8981\u5220\u9664\u7684\u6743\u91cd\u3002</p> </li> <li> <p>\\(Q\\): \u4ece\u8bbe\u8ba1\u601d\u8def\u8bb2\uff0cInception \u662f\u5982\u4f55\u5b9e\u73b0\u7a00\u758f\u7684      &gt; \\(A\\): \u901a\u8fc7\u4f7f\u7528 1*1 \u7684\u5377\u79ef\u5c42\uff0c\u8fd9\u662f\u56e0\u4e3a 1*1 \u7684\u7f51\u7edc\u7ed3\u6784\u53ef\u505a\u5230\u6570\u636e\u964d\u7ef4\uff0c\u4f7f\u5f97\u7f51\u7edc\u5b66\u4e60\u5230\u4e3b\u8981\u4fe1\u606f\uff0c\u5ffd\u7565\u6b21\u8981\u4fe1\u606f\u3002</p> </li> <li> <p>\\(Q\\): \u5982\u4f55\u5c06\u8d6b\u5e03\u7406\u8bba (fire togethe, wire together) \u8fd0\u7528\u5230 Inception \u7684\u8bbe\u8ba1\u4e2d     &gt; \\(A\\): \u901a\u8fc7\u4f7f\u7528 1*1 \u5377\u79ef\uff0c\u5c06\u795e\u7ecf\u5143\u805a\u5408\u5728\u4e00\u8d77</p> </li> <li> <p>\\(Q\\): Inception \u7684\u7ed3\u6784\u5927\u6982\u662f\u4ec0\u4e48\u6837\u7684\uff1f\u6709\u51e0\u4e2a\u5206\u652f\uff0c\u5206\u522b\u662f\u4ec0\u4e48\u3002      &gt; \\(A\\): \u7531\u8f93\u5165\u5206\u6210\u56db\u4e2a\u5206\u652f\uff0c\u5206\u522b\u8fdb\u884c\u4e0d\u540c\u7684\u5377\u79ef\u8fd0\u7b97\uff0c\u6700\u540e\u6c47\u603b\u5230\u8f93\u51fa\u5c42\u3002     &gt; \u6709\u56db\u4e2a\u5206\u652f\uff0c\u7b2c\u4e00\u4e2a\u5206\u652f\u662f 1*1\uff0c \u7b2c\u4e8c\u4e2a\u5206\u652f 1*1 \u548c 3*3\uff0c \u7b2c\u4e09\u4e2a\u5206\u652f 1*1 \u548c 5*5, \u7b2c\u56db\u4e2a\u5206\u652f max-pool \u548c 1*1</p> </li> <li> <p>\\(Q\\): Inception \u4e2d 1*1 \u7684\u5377\u79ef\u4f5c\u7528\u662f\u4ec0\u4e48?     &gt; \\(A\\): 1. \u7528\u4e8e\u6570\u636e\u964d\u7ef4\uff0c\u51cf\u5c11\u8bad\u7ec3\u53c2\u6570\uff0c\u51cf\u5c11\u6570\u636e\u91cf\u30022. \u589e\u52a0\u975e\u7ebf\u6027\uff0c \u9632\u6b62\u8fc7\u62df\u5408</p> </li> <li> <p>\\(Q\\): GoogleNet \u4e2d\u6dfb\u52a0\u8f85\u52a9 loss \u7684\u76ee\u7684\u662f\u4ec0\u4e48\uff1f \u6d4b\u8bd5\u7684\u65f6\u5019\u662f\u5426\u8fd8\u9700\u8981\u8f85\u52a9 loss\u3002     &gt; \\(A\\): GoogLeNet \u7f51\u7edc\u5c42\u6b21\u592a\u6df1\uff0c\u5728\u53cd\u76f8\u4f20\u64ad\u7684\u8fc7\u7a0b\u4e2d\u53ef\u80fd\u4f1a\u53d1\u751f\u68af\u5ea6\u6d88\u5931\u3002\u6d4b\u8bd5\u7684\u65f6\u5019\u4e0d\u9700\u8981\u3002</p> </li> </ul> <p>\u62d3\u5c55 </p> <p>\u795e\u7ecf\u7f51\u7edc\u51cf\u679d patch:</p>"},{"location":"notes/paper/#resnet","title":"ResNet","text":"<p>2015 \u5e74 ImageNet \u51a0\u519b</p> <p>2016 \u5e74 best paper</p> <ul> <li> <p>\\(Q\\): \u4ec0\u4e48\u662f\u9000\u5316\u95ee\u9898 ?     &gt; \\(A\\): \u4f7f\u7528\u8fc7\u6df1\u7684\u7f51\u7edc\u7ed3\u6784\u8bad\u7ec3\u6a21\u578b\uff0c\u8bad\u7ec3\u8bef\u5dee\u548c\u6d4b\u8bd5\u8bef\u5dee\u53cd\u800c\u4f1a\u589e\u52a0\u3002</p> </li> <li> <p>\\(Q\\): \u4ec0\u4e48\u5b9e\u9a8c\u73b0\u8c61\u8868\u660e\u662f\u9000\u5316\u95ee\u9898\u800c\u4e0d\u662f\u8fc7\u62df\u5408\u95ee\u9898 ?     &gt; \\(A\\): \u56e0\u4e3a \u5728\u9000\u5316\u95ee\u9898\u4e2d\uff0c\u8bad\u7ec3\u8bef\u5dee\u548c\u6d4b\u8bd5\u8bef\u5dee\u90fd\u589e\u52a0\u3002\u5982\u679c\u662f\u8fc7\u62df\u5408\u95ee\u9898\uff0c\u5e94\u8be5\u662f\u6d4b\u8bd5\u8bef\u5dee\u589e\u52a0     &gt;   \u8bad\u7ec3\u8bef\u5dee\u51cf\u5c11\u3002</p> </li> <li> <p>\\(Q\\): \u5982\u4f55\u7406\u89e3\u6b8b\u5dee\u8fde\u63a5\uff0c\u4e3a\u4ec0\u4e48\u6b8b\u5dee\u8fde\u63a5\u53ef\u4ee5\u89e3\u51b3\u9000\u5316\u95ee\u9898?     &gt; \\(A\\): \u56e0\u4e3a\u6b8b\u5dee\u8fde\u63a5\u662f\u7528 \u975e\u7ebf\u6027\u5c42\u6765 \u62df\u5408 \u6b8b\u5dee\u51fd\u6570\uff0c\u6bd4\u8d77\u76f4\u63a5\u7528\u6765\u62df\u5408\u6700\u4f18\u51fd\u6570\u6548\u679c     &gt; \u8981\u597d\u7684\u591a\u3002</p> </li> <li> <p>\\(Q\\): \u5728\u7f51\u7edc\u7ed3\u6784\u4e0a\u5982\u4f55\u5b9e\u73b0\u6b8b\u5dee\u8fde\u63a5\uff1f\uff08\u5206\u7ef4\u5ea6\u4e0d\u53d8\u548c\u7ef4\u5ea6\u6539\u53d8\u4e24\u79cd\u60c5\u51b5\uff09      &gt; \\(A\\): \u7ef4\u5ea6\u4e0d\u53d8\uff0c\u4e4b\u95f4\u5c06\u4e4b\u524d\u5c42\u7684\u8f93\u51fa\u6309\u5143\u7d20\u52a0\u5165\u5f53\u524d\u5c42\u7684\u8f93\u51fa\u3002     &gt;  \u7ef4\u5ea6\u6539\u53d8\uff0c\u4e4b\u95f4\u5c06\u4e4b\u524d\u5c42\u7684\u8f93\u51fa\u7ecf\u8fc7\u6295\u5f71\u77e9\u9635\u540e\uff0c\u6309\u5143\u7d20\u52a0\u5165\u5f53\u524d\u5c42\u7684\u8f93\u51fa\u3002</p> </li> <li> <p>\\(Q\\): \u4ece\u53c2\u6570\u548c\u8ba1\u7b97\u91cf\u4e0a\uff0c\u6b8b\u5dee\u8fde\u63a5\u6709\u4ec0\u4e48\u4f18\u52bf\uff1f      &gt; \\(A\\): \u6b8b\u5dee\u8fde\u63a5\u4e0d\u4f1a\u589e\u52a0\u53c2\u6570, \u8ba1\u7b97\u91cf\u5f88\u5c0f</p> </li> <li> <p>\\(Q\\): bottleneck \u7ed3\u6784\u662f\u600e\u6837\u7684\uff1f \u5176\u4e2d 1*1 \u5377\u79ef\u7684\u4f5c\u7528\u662f\u4ec0\u4e48? \u4e3a\u4ec0\u4e48\u8981\u8bbe\u8ba1bottleneck\u7ed3\u6784?     &gt; \\(A\\)\uff1abottleneck \u6709\u4e09\u4e2a\u5377\u79ef\u5c42\u6784\u6210\uff0c\u5206\u522b\u4e3a 1*1, 3*3, 1*1, \u7b2c\u4e00\u4e2a 1*1\u662f\u4e3a\u4e86\u964d\u7ef4\uff0c\u51cf\u5c11 3*3     &gt; \u7684\u8ba1\u7b97\u91cf\uff0c\u7b2c\u4e8c\u4e2a 1*1\u4e3a\u4e86\u5347\u7ef4\u3002\u4f7f\u7528 bottleneck \u7ed3\u6784\u53ef\u4ee5\u51cf\u5c11\u8ba1\u7b97\u91cf\uff0c\u52a0\u5feb\u8bad\u7ec3\u901f\u5ea6\u3002 </p> </li> </ul> <p></p> <ul> <li> <p>\\(Q\\): BN \u548c conv relu \u7684\u5173\u7cfb\u662f\u4ec0\u4e48 ?     &gt; \\(A\\): bn \u5c42\u5728 conv \u548c relu \u4e4b\u95f4</p> </li> <li> <p>\\(Q\\): BN \u662f\u4e3a\u4e86\u89e3\u51b3\u4ec0\u4e48\u95ee\u9898\uff0c\u4e3a\u4ec0\u4e48\u53ef\u4ee5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898 ?     &gt; \\(A\\): BN \u662f\u4e3a\u4e86\u89e3\u51b3 \u5185\u90e8\u534f\u53d8\u91cf\u504f\u79fb\uff0cbn \u7684\u505a\u6cd5\u662f\u5c06\u4e2d\u95f4\u5c42\u53c2\u6570\u6309\u7167\u5747\u503c\u4e3a0\uff0c\u6807\u51c6\u5dee\u4e3a1\u7684\u9ad8\u65af\u5206\u5e03\u6807\u51c6\u5316\u3002     &gt; BN \u80fd\u591f\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u7684\u539f\u56e0\u662f\uff1a(\u540c\u65f6\u4e5f\u4fdd\u8bc1\u4e0d\u4f1a\u53d1\u751f\u68af\u5ea6\u6d88\u5931\u7684\u95ee\u9898)</p> </li> <li> <p>\\(Q\\): \u8bad\u7ec3\u548c\u6d4b\u8bd5\u65f6\uff0cBN\u7684\u8ba1\u7b97\u8fc7\u7a0b\u5206\u522b\u662f\u600e\u4e48\u6837\u7684\uff1f      &gt; \\(A\\): \u8bad\u7ec3\u65f6: \u8ba1\u7b97\u4e00\u4e2a batch \u7684\u5747\u503c\u548c\u6807\u51c6\u5dee\uff0c\u505a\u5f52\u4e00\u5316\uff0c\u7136\u540e\u8fdb\u884c     &gt; scale and shift, \u540c\u65f6\u5b66\u4e60 scale \u548c shift \u7684\u53c2\u6570      &gt; \u6d4b\u8bd5\u65f6\uff0c\u7528\u8bad\u7ec3\u65f6\u5f97\u5230\u7684\u5747\u503c\u548c\u65b9\u5dee\u6807\u51c6\u6cd5\uff0c\u5e76\u8fdb\u884c scale \u548c shift</p> </li> <li> <p>\\(Q\\): \u6709\u54ea\u4e9b\u8bad\u7ec3\u548c\u6d4b\u8bd5\u65f6\uff0c\u8ba1\u7b97\u65b9\u5f0f\u4e0d\u540c\u7684\u5c42 ?     &gt; \\(A\\): BN \u5c42\u3002\u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\uff0cBatch Normalization\u4f1a\u6839\u636e\u6bcf\u4e2a\u6279\u6b21\u7684\u6570\u636e\u8fdb\u884c\u5f52\u4e00\u5316\u5904\u7406\uff0c\u5e76\u4e14\u7ef4\u62a4\u6bcf\u4e2a\u6279\u6b21\u7684\u5747\u503c\u548c\u65b9\u5dee\u3002\u4f46\u662f\u5728\u6d4b\u8bd5\u8fc7\u7a0b\u4e2d\uff0c\u7531\u4e8e\u65e0\u6cd5\u5f97\u77e5\u6574\u4e2a\u6d4b\u8bd5\u96c6\u7684\u7edf\u8ba1\u4fe1\u606f\uff0c\u6240\u4ee5\u9700\u8981\u4f7f\u7528\u8bad\u7ec3\u9636\u6bb5\u79ef\u7d2f\u7684\u79fb\u52a8\u5e73\u5747\u5747\u503c\u548c\u79fb\u52a8\u5e73\u5747\u65b9\u5dee\u6765\u8fdb\u884c\u5f52\u4e00\u5316\u3002</p> </li> <li> <p>\\(Q\\): \u52a0\u5165 BN \u540e\uff0c\u7f51\u7edc\u7ed3\u6784\u548c\u8bad\u7ec3\u8d85\u53c2\u6570\u9700\u8981\u505a\u51fa\u54ea\u4e9b\u8c03\u6574 ?     &gt; \\(A\\): 1.\u5728\u5377\u79ef\u5c42\u548crelu\u5c42\u4e4b\u524d\uff0c\u9700\u8981\u52a0\u5165 bn \u5c42     &gt; 2. \u8c03\u6574\u6279\u5927\u5c0f </p> </li> <li> <p>\\(Q\\): \u4e3a\u4ec0\u4e48\u4e0d\u80fd\u540c\u65f6\u4f7f\u7528 bn \u548c dropout      &gt; \\(A\\):  1. \u51b2\u7a81\u7684\u566a\u58f0\u5f15\u5165\uff1aBN\u5c42\u5bf9\u8f93\u5165\u6570\u636e\u8fdb\u884c\u5f52\u4e00\u5316\uff0c\u6709\u4e00\u5b9a\u7684\u6b63\u5219\u5316\u6548\u679c\uff0c\u800cDropout\u5c42\u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u968f\u673a\u4e22\u5f03\u795e\u7ecf\u5143\uff0c\u5f15\u5165\u4e86\u53e6\u4e00\u79cd\u566a\u58f0\u3002\u540c\u65f6\u4f7f\u7528\u5b83\u4eec\u53ef\u80fd\u4f1a\u5f15\u5165\u51b2\u7a81\u7684\u566a\u58f0\u4fe1\u53f7\uff0c\u53ef\u80fd\u4f1a\u5e72\u6270\u6a21\u578b\u7684\u5b66\u4e60\u8fc7\u7a0b\u3002</p> <p> 2.\u51cf\u5f31BN\u7684\u4f18\u52bf\uff1aBN\u5c42\u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u901a\u8fc7\u5bf9\u6bcf\u4e2a\u6279\u6b21\u7684\u5f52\u4e00\u5316\u6765\u52a0\u901f\u6a21\u578b\u7684\u8bad\u7ec3\uff0c\u5e76\u4e14\u63d0\u4f9b\u4e86\u4e00\u5b9a\u7684\u6b63\u5219\u5316\u6548\u679c\u3002\u800cDropout\u5c42\u7684\u5f15\u5165\u53ef\u80fd\u4f1a\u524a\u5f31BN\u5c42\u7684\u6b63\u5219\u5316\u6548\u679c\uff0c\u4f7f\u5f97\u6a21\u578b\u7684\u8bad\u7ec3\u8fc7\u7a0b\u4e0d\u518d\u90a3\u4e48\u7a33\u5b9a\u548c\u9ad8\u6548\u3002</p> </li> </ul> <p>\u5c55\u671b </p> <p>\u5f88\u5927\u4e00\u90e8\u5206\u5de5\u4f5c\u90fd\u5728\u4f7f\u7528 ResNet \u505a backbone (\u9aa8\u5e72)</p>"},{"location":"notes/paper/#transformer","title":"transformer \u6a21\u578b","text":"<ul> <li> <p>\\(Q\\): 1.Transformer\u4e3a\u4f55\u4f7f\u7528\u591a\u5934\u6ce8\u610f\u529b\u673a\u5236\uff1f\uff08\u4e3a\u4ec0\u4e48\u4e0d\u4f7f\u7528\u4e00\u4e2a\u5934\uff09     &gt; \\(A\\): \u4e3a\u4e86\u80fd\u5b66\u5230\u4e0d\u540c\u6a21\u5f0f\u4e0b\u7684\u4fe1\u606f\uff0c\u8fbe\u5230\u7c7b\u4f3c\u5377\u79ef\u591a\u901a\u9053\u7684\u6548\u679c</p> </li> <li> <p>\\(Q\\): 2.Transformer\u4e3a\u4ec0\u4e48Q\u548cK\u4f7f\u7528\u4e0d\u540c\u7684\u6743\u91cd\u77e9\u9635\u751f\u6210\uff0c\u4e3a\u4f55\u4e0d\u80fd\u4f7f\u7528\u540c\u4e00\u4e2a\u503c\u8fdb\u884c\u81ea\u8eab\u7684\u70b9\u4e58\uff1f \uff08\u6ce8\u610f\u548c\u7b2c\u4e00\u4e2a\u95ee\u9898\u7684\u533a\u522b\uff09     &gt; \\(A\\): - \u4f7f\u7528 Q \u70b9\u4e58 K \u672c\u8d28\u4e0a\u662f\u6c42\u51fa\u4e00\u4e2a attention score \u77e9\u9635\uff0c \u8fd9\u4e2a\u77e9\u9635\u5b58\u50a8\u4e86\u4e00\u4e2a\u53e5\u5b50\u4e2d\u6bcf\u4e00\u4e2a\u8bcd\u4e0e\u5176\u4ed6     &gt; \u8bcd\u7684\u8ddd\u79bb\u5927\u5c0f\u3002\u5982\u679c\u662f K * K\uff0c\u56e0\u4e3a\u662f\u540c\u6837\u4e00\u4e2a\u77e9\u9635\uff0c\u90fd\u6295\u5f71\u5230\u4e86\u540c\u6837\u4e00\u4e2a\u7a7a\u95f4\uff0c\u6240\u4ee5\u6cdb\u5316\u80fd\u529b\u5f88\u5dee\u3002     &gt;  - \u4f7f\u7528\u4e0d\u540c\u6743\u91cd\u77e9\u9635\u53ef\u4ee5\u4fdd\u8bc1\u5728\u4e0d\u540c\u7a7a\u95f4\u5185\u8fdb\u884c\u6295\u5f71\uff0c\u63d0\u5347\u8868\u8fbe\u80fd\u529b\uff0c\u589e\u52a0\u4e86\u6cdb\u5316\u80fd\u529b\u3002</p> </li> <li> <p>\\(Q\\): 3.Transformer\u8ba1\u7b97attention\u7684\u65f6\u5019\u4e3a\u4f55\u9009\u62e9\u70b9\u4e58\u800c\u4e0d\u662f\u52a0\u6cd5\uff1f\u4e24\u8005\u8ba1\u7b97\u590d\u6742\u5ea6\u548c\u6548\u679c\u4e0a\u6709\u4ec0\u4e48\u533a\u522b\uff1f     &gt; \\(A\\): \u4e24\u8005\u6548\u679c\u5dee\u4e0d\u591a,  \u4f46\u662f\u77e9\u9635\u4e58\u6cd5\u66f4\u597d\u5e76\u884c\uff0c\u5bf9\u4e8e\u786c\u4ef6\u66f4\u52a0\u53cb\u597d\u3002</p> </li> <li> <p>\\(Q\\): 4.\u4e3a\u4ec0\u4e48\u5728\u8fdb\u884csoftmax\u4e4b\u524d\u9700\u8981\u5bf9attention\u8fdb\u884cscaled\uff08\u4e3a\u4ec0\u4e48\u9664\u4ee5dk\u7684\u5e73\u65b9\u6839\uff09\uff0c\u5e76\u4f7f\u7528\u516c\u5f0f\u63a8\u5bfc\u8fdb\u884c\u8bb2\u89e3     &gt; \\(A\\): \u7531\u4e8e \\(d_k\\) \u7684\u503c\u5f88\u5927\uff0c\u8fdb\u884c\u77e9\u9635\u76f8\u4e58\u540e\uff0c\u7ed3\u679c\u4f1a\u5f88\u5927\uff0c\u800c \\(\\text{ softmax}\\) \u51fd\u6570\u4f1a\u5c06\u7ed3\u679c\u5f88\u5927\u7684     &gt; \u6570\u636e\u70b9\u63a8\u5411\u66f2\u7ebf\u7684\u4e24\u7aef (\u68af\u5ea6\u5f88\u5c0f\u7684\u4f4d\u7f6e)\uff0c\u4e0d\u5229\u4e8e\u8fdb\u884c\u68af\u5ea6\u7684\u53cd\u5411\u4f20\u64ad</p> </li> <li> <p>\\(Q\\): 5.\u5728\u8ba1\u7b97attention score\u7684\u65f6\u5019\u5982\u4f55\u5bf9padding\u505amask\u64cd\u4f5c\uff1f     &gt; \\(A\\): \u5c06\u5f53\u524d\u65f6\u95f4\u540e\u7684\u6570\u503c\u66ff\u6362\u4e3a \u4e00\u4e2a\u7edd\u5bf9\u503c\u8f83\u5927\u7684\u8d1f\u6570\uff0c\u8fd9\u6837\u7ecf\u8fc7 \\(\\text{ softmax}\\)\u51fd\u6570\u540e\uff0c\u5bf9\u5e94\u503c\u4f1a\u53d8\u62100 </p> </li> <li> <p>\\(Q\\): 6.\u4e3a\u4ec0\u4e48\u5728\u8fdb\u884c\u591a\u5934\u6ce8\u610f\u529b\u7684\u65f6\u5019\u9700\u8981\u5bf9\u6bcf\u4e2ahead\u8fdb\u884c\u964d\u7ef4\uff1f\uff08\u53ef\u4ee5\u53c2\u8003\u4e0a\u9762\u4e00\u4e2a\u95ee\u9898\uff09     &gt; \\(A\\): \u5c06\u539f\u6709\u7684\u9ad8\u5ea6\u964d\u6210\u4f4e\u7ef4\u5ea6\u518d\u8fdb\u884c\u62fc\u63a5\uff0c\u53ef\u4ee5\u4e30\u5bcc\u7279\u5f81\u4fe1\u606f\u3002</p> </li> <li> <p>\\(Q\\): 7.\u5927\u6982\u8bb2\u4e00\u4e0bTransformer\u7684Encoder\u6a21\u5757\uff1f     &gt; \\(A\\): encoder \u6a21\u5757\u75316\u4e2a\u5b8c\u5168\u76f8\u540c\u7684\u5c42\u6784\u6210\uff0c\u6bcf\u4e00\u5c42\u6709\u4e24\u4e2a\u5b50\u5c42\u3002     &gt; \u7b2c\u4e00\u4e2a\u5b50\u5c42\u662f multi-head attention machanism, \u7b2c\u4e8c\u5c42\u662f mlp (\u4e24\u4e2a\u7ebf\u6027\u5c42)</p> </li> <li> <p>\\(Q\\): 8.\u4e3a\u4f55\u5728\u83b7\u53d6\u8f93\u5165\u8bcd\u5411\u91cf\u4e4b\u540e\u9700\u8981\u5bf9\u77e9\u9635\u4e58\u4ee5embedding size\u7684\u5f00\u65b9\uff1f\u610f\u4e49\u662f\u4ec0\u4e48\uff1f     &gt; \\(A\\): embedding matrix\u7684\u521d\u59cb\u5316\u65b9\u5f0f\u662fxavier init\uff0c\u8fd9\u79cd\u65b9\u5f0f\u7684\u65b9\u5dee\u662f1/embedding size\uff0c\u56e0\u6b64\u4e58\u4ee5embedding size\u7684\u5f00\u65b9\u4f7f\u5f97embedding matrix\u7684\u65b9\u5dee\u662f1\uff0c\u5728\u8fd9\u4e2ascale\u4e0b\u53ef\u80fd\u66f4\u6709\u5229\u4e8eembedding matrix\u7684\u6536\u655b\u3002</p> </li> <li> <p>\\(Q\\): 9.\u7b80\u5355\u4ecb\u7ecd\u4e00\u4e0bTransformer\u7684\u4f4d\u7f6e\u7f16\u7801\uff1f\u6709\u4ec0\u4e48\u610f\u4e49\u548c\u4f18\u7f3a\u70b9\uff1f     &gt; \\(A\\): \u6839\u636e \u5355\u8bcd\u6240\u5728\u53e5\u5b50\u4e2d\u7684\u4f4d\u7f6e\uff0c\u751f\u6210\u4e00\u4e2a 512 \u4f4d\u7684\u4f4d\u7f6e\u7f16\u7801\uff0c\u518d\u4e0e\u5355\u8bcd\u7684\u5411\u91cf\u8fdb\u884c\u76f8\u52a0     &gt;  \u4f18\u70b9\uff0c\u4e3a \u5355\u8bcd\u6dfb\u52a0\u4e86\u4f4d\u7f6e\u4fe1\u606f\u3002</p> </li> <li> <p>\\(Q\\): 10.\u4f60\u8fd8\u4e86\u89e3\u54ea\u4e9b\u5173\u4e8e\u4f4d\u7f6e\u7f16\u7801\u7684\u6280\u672f\uff0c\u5404\u81ea\u7684\u4f18\u7f3a\u70b9\u662f\u4ec0\u4e48\uff1f     &gt; \\(A\\): RPE, \u548c \u590d\u6570\u51fd\u6570\u57df</p> </li> <li> <p>\\(Q\\): 11.\u7b80\u5355\u8bb2\u4e00\u4e0bTransformer\u4e2d\u7684\u6b8b\u5dee\u7ed3\u6784\u4ee5\u53ca\u610f\u4e49\u3002     &gt; \\(A\\): \u53ef\u4ee5\u89e3\u51b3 \u7f51\u7edc\u7ed3\u6784\u5c42\u8fc7\u591a\u800c\u9020\u6210\u7684\u68af\u5ea6\u6d88\u5931\u95ee\u9898 </p> </li> <li> <p>\\(Q\\): 12.\u4e3a\u4ec0\u4e48transformer\u5757\u4f7f\u7528LayerNorm\u800c\u4e0d\u662fBatchNorm\uff1fLayerNorm \u5728Transformer\u7684\u4f4d\u7f6e\u662f\u54ea\u91cc\uff1f     &gt; \\(A\\): LayerNorm \u662f\u4e00\u4e2a\u6837\u672c(\u53e5\u5b50)\u8fdb\u884c\u6807\u51c6\u5316\uff0c\u800c BatchNorm \u662f\u5bf9\u4e00\u4e2a batch \u8fdb\u884c\u6807\u51c6\u5316\u3002     &gt; \u7531\u4e8e\u5728 nlp \u4e2d, \u53e5\u5b50\u7684\u957f\u77ed\u4e0d\u540c\uff0c\u8fd9\u5c31\u5bfc\u81f4\u4e0d\u540cbatch\u7684\u957f\u5ea6\u4e0d\u540c(\u88650\u5bf9\u9f50)\uff0c\u4f7f\u7528 bn \u7684\u6548\u679c\u4e0d\u597d     &gt; encoder \u548c decoder \u6bcf\u4e00\u4e2a\u5b50\u5c42\u7684\u8f93\u51fa</p> </li> <li> <p>\\(Q\\): 13.\u7b80\u7b54\u8bb2\u4e00\u4e0bBatchNorm\u6280\u672f\uff0c\u4ee5\u53ca\u5b83\u7684\u4f18\u7f3a\u70b9\u3002     &gt; \\(A\\): \u89c1 resnet</p> </li> <li> <p>\\(Q\\): 14.\u7b80\u5355\u63cf\u8ff0\u4e00\u4e0bTransformer\u4e2d\u7684\u524d\u9988\u795e\u7ecf\u7f51\u7edc\uff1f\u4f7f\u7528\u4e86\u4ec0\u4e48\u6fc0\u6d3b\u51fd\u6570\uff1f\u76f8\u5173\u4f18\u7f3a\u70b9\uff1f     &gt; \\(A\\): relu</p> </li> <li> <p>\\(Q\\): 15.Encoder\u7aef\u548cDecoder\u7aef\u662f\u5982\u4f55\u8fdb\u884c\u4ea4\u4e92\u7684\uff1f\uff08\u5728\u8fd9\u91cc\u53ef\u4ee5\u95ee\u4e00\u4e0b\u5173\u4e8eseq2seq\u7684attention\u77e5\u8bc6\uff09     &gt; \\(A\\): encoder \u7aef\u7684\u8f93\u51fa\u4f5c\u4e3a decoder \u7b2c\u4e8c\u4e2a\u5b50\u5c42 key, value \u7684\u8f93\u5165\u3002</p> </li> <li> <p>\\(Q\\): 16.Decoder\u9636\u6bb5\u7684\u591a\u5934\u81ea\u6ce8\u610f\u529b\u548cencoder\u7684\u591a\u5934\u81ea\u6ce8\u610f\u529b\u6709\u4ec0\u4e48\u533a\u522b\uff1f\uff08\u4e3a\u4ec0\u4e48\u9700\u8981decoder\u81ea\u6ce8\u610f\u529b\u9700\u8981\u8fdb\u884c sequence mask)     &gt; \\(A\\): \u4e3a\u4e86\u4fdd\u8bc1\u4e0d\u63d0\u524d\u770b\u5230 t \u65f6\u523b\u540e\u7684 token</p> </li> <li> <p>\\(Q\\): 17.Transformer\u7684\u5e76\u884c\u5316\u63d0\u73b0\u5728\u54ea\u4e2a\u5730\u65b9\uff1fDecoder\u7aef\u53ef\u4ee5\u505a\u5e76\u884c\u5316\u5417\uff1f     &gt; \\(A\\): Encoder\u4fa7\uff1a\u6a21\u5757\u4e4b\u95f4\u662f\u4e32\u884c\u7684\uff0c\u4e00\u4e2a\u6a21\u5757\u8ba1\u7b97\u7684\u7ed3\u679c\u505a\u4e3a\u4e0b\u4e00\u4e2a\u6a21\u5757\u7684\u8f93\u5165\uff0c\u4e92\u76f8\u4e4b\u524d\u6709\u4f9d\u8d56\u5173\u7cfb\u3002\u4ece\u6bcf\u4e2a\u6a21\u5757\u7684\u89d2\u5ea6\u6765\u8bf4\uff0c\u6ce8\u610f\u529b\u5c42\u548c\u524d\u9988\u795e\u7ecf\u5c42\u8fd9\u4e24\u4e2a\u5b50\u6a21\u5757\u5355\u72ec\u6765\u770b\u90fd\u662f\u53ef\u4ee5\u5e76\u884c\u7684\uff0c\u4e0d\u540c\u5355\u8bcd\u4e4b\u95f4\u662f\u6ca1\u6709\u4f9d\u8d56\u5173\u7cfb\u7684\u3002     &gt; Decode\u5f15\u5165sequence mask\u5c31\u662f\u4e3a\u4e86\u5e76\u884c\u5316\u8bad\u7ec3\uff0cDecoder\u63a8\u7406\u8fc7\u7a0b\u6ca1\u6709\u5e76\u884c\uff0c\u53ea\u80fd\u4e00\u4e2a\u4e00\u4e2a\u7684\u89e3\u7801\uff0c\u5f88\u7c7b\u4f3c\u4e8eRNN\uff0c\u8fd9\u4e2a\u65f6\u523b\u7684\u8f93\u5165\u4f9d\u8d56\u4e8e\u4e0a\u4e00\u4e2a\u65f6\u523b\u7684\u8f93\u51fa\u3002</p> </li> <li> <p>\\(Q\\): 19.Transformer\u7ec3\u7684\u65f6\u5019\u5b66\u4e60\u7387\u662f\u5982\u4f55\u8bbe\u5b9a\u7684\uff1fDropout\u662f\u5982\u4f55\u8bbe\u5b9a\u7684\uff0c\u4f4d\u7f6e\u5728\u54ea\u91cc\uff1fDropout \u5728\u6d4b\u8bd5\u7684\u9700\u8981\u6709\u4ec0\u4e48\u9700\u8981\u6ce8\u610f\u7684\u5417\uff1f     &gt; \\(A\\): \u6bcf\u4e00\u4e2a\u5b50\u5c42\u8f93\u51fa\u65f6\uff0c\u90fd\u8fdb\u884c dropout \uff08\u65e9\u4e8e norm\uff09\uff0c \\(P_{drop} = 0.1\\) </p> </li> </ul> <p>answear </p>"},{"location":"notes/tips/","title":"Tips","text":"<p>${toc}</p>"},{"location":"notes/tips/#tips","title":"tips","text":""},{"location":"notes/tips/#_1","title":"\u4e0b\u4e00\u4e2a\u8981\u6298\u817e\u7684\u70b9","text":"<ul> <li>computer network: Seriously</li> <li>vscode and docker</li> <li>jupyter notebook \u5bfc\u51fa \u4e2d\u6587</li> <li>\u6682\u65f6\u4e0d\u8003\u8651\u4f7f\u7528 typst \u4f5c\u4e3a\u4f5c\u4e3a\u7b14\u8bb0\u6392\u7248\u7cfb\u7edf, \u8ba9\u5b50\u5f39\u518d\u98de\u4e00\u4f1a, \u76ee\u524d\u4ec5\u5728 xournalpp \u91cc\u4f7f\u7528\u3002</li> </ul> <p>\u5728 vscode \u6d4b\u8bd5\uff0c\u5b8c\u6210\u540e \u4fdd\u5b58\u5230 xournalpp, \u540c\u65f6\u4e5f\u53ef\u622a\u56fe \u590d\u5236\u5230 md</p> <p>\u4e0d\u8db3     1. \u56fe\u7247\u590d\u5236\u4e0d\u592a\u65b9\u4fbf     2. \u6682\u65f6\u6ca1\u6709\u7cbe\u529b \u4e3a typst \u5236\u4f5c\u4e00\u4efd snippets     3. neovim \u652f\u6301\u4e0d\u5168     4. \u4e0d\u652f\u6301\u5bfc\u51fa html</p> <p>\u4f18\u70b9     1. \u51fd\u6570\u5f0f\u7f16\u7a0b     2. \u4f18\u96c5\u7684\u516c\u5f0f\u8bed\u6cd5</p> <p>\u4ee5\u540e\u6709\u4ec0\u4e48\u60f3\u6cd5 \u5148\u8bb0\u5728\u8fd9\u91cc\uff0c\u4e0d\u8981\u6253\u65ad\u6b63\u5e38\u5de5\u4f5c\u6d41</p> <p>\u5f88\u591a\u95ee\u9898\u90fd\u6765\u81ea\u8f6f\u4ef6\u7684\u7248\u672c\u8fc7\u4f4e</p> <p>\u9047\u5230\u63d2\u4ef6\u7684\u95ee\u9898\uff0c\u5148\u53bb\u770b\u5bf9\u5e94\u7684\u4ed3\u5e93 readme, \u8fd9\u6837\u80fd\u8282\u7701\u4e0d\u5c11\u65f6\u95f4</p>"},{"location":"notes/tips/#steps-to-moving-to-new-linux-machine","title":"steps to moving to new Linux machine","text":""},{"location":"notes/tips/#before-installing-system","title":"before installing system","text":"<ol> <li>dowmload .iso from offical website</li> <li>make installer with an empty storage and rufus</li> <li>Getting into the BIOS, changer HDD device and shut secure reboot</li> <li>config, and restart</li> </ol>"},{"location":"notes/tips/#after-installing-system","title":"After installing system","text":"<ol> <li>updating core   <pre><code>sudo pacman-\nsudo pacman-\n</code></pre></li> <li>change source for new system</li> <li>installing neovim, lazygit, ranger, zsh, tmux</li> <li>config alias for zsh</li> <li>add ssh-key to github</li> <li>git clone clash</li> <li>config proxy</li> <li>installing neovim plugin</li> <li>fcxit5, linux_qq, picom, variety wps-office, gnome-pomodoro, chromium, firefox obsidian visual-studio-code-bin neofetch lolcat figlet feh gnome-shell-pomodoro</li> </ol> <p> \u5c0fbug  </p> <ul> <li>\u8f93\u5165\u6cd5\u811a\u672c github </li> <li>flameshot \u65e0\u6cd5\u83b7\u53d6\u622a\u56fe <code>yay -S xdg-desktop-portal-gnome-noprompt-git</code> </li> <li>wpspdf \u6ca1\u6709\u529e\u6cd5\u6253\u5f00 <code>yay -S libtiff5</code> </li> <li>pyright import \u62a5\u9519\u7684\u8bdd\uff0c\u9000\u51fa\u91cd\u65b0\u8fdb\u5165\u8bd5\u8bd5\u3002\u5728 neovim \u91cc\u521b\u5efa\u4e00\u4e2a\u6587\u4ef6\uff0c\u4e0d\u5173\u95ed neovim\uff0c\u800c</li> <li>\u4f7f\u7528 <code>e XX</code> \u6253\u5f00\u53e6\u4e00\u4e2a py \u6587\u4ef6\uff0c\u5f15\u7528\u521a\u521a\u521b\u5efa\u7684\u6587\u4ef6\u65f6\uff0c\u4f1a\u5931\u8d25</li> <li>wps \u65e0\u6cd5\u4f7f\u7528fcitx5 \u5b89\u88c5manjaro-asian-input-support-fcitx5 </li> </ul>"},{"location":"notes/tips/#installing-neovim","title":"installing neovim","text":"<pre><code>sudo apt install software-properties-common -y\nsudo add-apt-repository ppa:neovim-ppa/stable -\nsudo add-apt-repository ppa:neovim-ppa/unstable -y\nsudo apt-get update\nsudo apt install neovim -y\n</code></pre>"},{"location":"notes/tips/#git","title":"\u6709\u5173git \u4ee3\u7406\u7684\u95ee\u9898","text":"<ul> <li>\u6839\u636e\u8fd9\u7bc7\u535a\u5ba2\uff0c\u914d\u7f6e\u4e86github\u7684\u4ee3\u7406\u3002git \u4ee3\u7406 </li> <li>\u5982\u679c\u9047\u5230\u4e86\u4ecegithub\u62c9\u53d6\u5931\u8d25\u7684\u60c5\u51b5\uff0c\u8981\u4e48\u662f\u6ca1\u5f00clash \u4ee3\u7406\uff0c\u8981\u4e48\u662f\u8282\u70b9\u5e9f\u4e86</li> </ul>"},{"location":"notes/tips/#auto-complete-and-snippets","title":"auto-complete and snippets","text":""},{"location":"notes/tips/#_2","title":"\u641e\u6e05\u695a\u81ea\u52a8\u8865\u5168\u89e6\u53d1\u7684\u903b\u8f91","text":"<p>\u9996\u5148\u5728coc\u4e2d\uff0c\u63a8\u8350\u7684\u914d\u7f6e\u662f\u7528 tab \u9009\u62e9\u8865\u5168\uff0c\u7528cr or \u786e\u8ba4\u9009\u62e9 \u4e5f\u53ef\u4ee5\u914d\u7f6e\u6210\u4f7f\u7528\u65b9\u5411\u952e\u9009\u62e9\u8865\u5168\uff0c\u7528tab\u8fdb\u884c\u786e\u8ba4\uff0c\u8df3\u8f6c <p>\u800c\u7531\u4e8e\u5728 utilsnippets \u4e2d \u7528\u4e8e\u89e6\u53d1\u8865\u5168\u7684\u952e\u662f tab, \u548ccoc\u7684\u5feb\u6377\u952e\u51b2\u7a81\u4e86 \u6240\u4ee5tab\u5207\u6362\u65e0\u6548\uff0c\u6211\u4eec\u53ef\u4ee5\u5728 vimrc \u4e2d\u5c06 util snippets \u7684\u89e6\u53d1\u6539\u6210c-e \u8fd9\u6837\u5927\u5bb6\u5c31\u4e0d\u4e92\u76f8\u5e72\u6270\uff0c\u5404\u73a9\u5404\u7684\u3002</p>"},{"location":"notes/tips/#snippets","title":"\u4e3asnippets\u589e\u52a0\u6570\u5b66\u73af\u5883","text":"<p>\u5728snippets\u6587\u4ef6 \u6700\u5f00\u59cb\u7684\u5730\u65b9\u52a0\u4e0a</p> <pre><code>global !p\ndef math():\n    return vim.eval('vimtex#syntax#in_mathzone()') == '1'\n\ndef comment(): \n    return vim.eval('vimtex#syntax#in_comment()') == '1'\n\ndef env(name):\n    [x,y] = vim.eval(\"vimtex#env#is_inside('\" + name + \"')\") \n    return x != '0' and x != '0'\nendglobal\n</code></pre>"},{"location":"notes/tips/#snippets_1","title":"snippets \u7684\u7ec4\u6210","text":"<p>tutorial </p> symbol meaning w expand on word boundaries A automaticaly expanding &lt;++&gt; <p>\u518d\u7ed9\u5c5e\u4e8e \u6570\u5b66\u73af\u5883\u4e0b\u7684snippets \u5934\u4e0a\u52a0 context \u201cmath()\u201d</p>"},{"location":"notes/tips/#some-important-short-cut-for-vim","title":"some important short-cut for vim","text":""},{"location":"notes/tips/#tips_1","title":"tips","text":"<ul> <li> <p>\u91cd\u65b0\u6620\u5c04 \u5207\u6362\u7a97\u53e3\u7684\u5feb\u6377\u952e \u65f6\uff0c\u6ce8\u610f\u662f\u4f7f\u7528 + (h, j, k, l) vim \u9ed8\u8ba4\u7684     \u79fb\u52a8\u952e\u4f4d\u8fdb\u884c\u6620\u5c04 <li> <p>\u4fee\u6539\u4e86 \u79fb\u52a8\u952e\u4f4d \u7a97\u53e3\u5207\u6362\u952e\u4f4d</p> </li> <li>\u66f4\u6539\u4e86 \u9884\u89c8 markdown \u7684\u63d2\u4ef6</li> <li>\u66f4\u6539\u4e86 coc.config.json \u4e2d snippets \u6240\u5728\u7684\u4f4d\u7f6e</li> <li>\u9009\u62e9 clangd \u4f5c\u4e3a language server</li> <pre><code>noremap &lt;SPACE&gt;&lt;up&gt;   &lt;C-w&gt;k\nnoremap &lt;SPACE&gt;&lt;left&gt;  &lt;C-w&gt;h\nnoremap &lt;SPACE&gt;&lt;down&gt;  &lt;C-w&gt;j\nnoremap &lt;SPACE&gt;&lt;right&gt; &lt;C-w&gt;l\n</code></pre>"},{"location":"notes/tips/#for-plugins","title":"for plugins","text":"short-cuts function <code>Space y</code> \u5c55\u793a\u526a\u8f91\u7248\u5386\u53f2 <code>Space \\</code> \u5411\u4e0b\u6253\u5f00\u7ec8\u7aef <code>Space r n</code> \u91cd\u547d\u540d\u4e00\u4e2a\u53d8\u91cf <code>Ctrl e/n</code> \u5c55\u5f00\u4ee3\u7801\u7247\u6bb5/ \u4e0a\u4e0b\u5207\u6362 <code>tt</code> \u5c55\u5f00\u6587\u4ef6\u76ee\u5f55 <code>Space t m</code> \u5f00\u542f\u8868\u683c\u6a21\u5f0f <code>Space t r</code> \u91cd\u65b0\u6392\u5217\u8868\u683c <code>cs\"'</code> \u5c06\u5305\u88f9\u7684\u7b26\u53f7\u4ece\" \u6539\u4e3a ' <code>\\\\ f</code> format code <code>Space f r</code> find and replace <code>Space \\\\</code> \u5c55\u793a\u65f6\u95f4 <code>Space \\c</code> \u5c55\u793a\u65e5\u5386 <code>[</code> + <code>a-&gt;l (1 - 9)</code> + <code>Space</code> \u5411\u4e0a\u8df3\u8f6c XX \u884c <code>'</code> + <code>a-&gt;l (1 - 9)</code> + <code>Space</code> \u5411\u4e0b\u8df3\u8f6c XX \u884c"},{"location":"notes/tips/#fzf","title":"FZF","text":"Shortcut Action <code>Ctrl</code> <code>p</code> FZF Files <code>Ctrl</code> <code>u</code> Move up 1 item <code>Ctrl</code> <code>e</code> Move down 1 item <code>Ctrl</code> <code>w</code> FZF Buffers <code>Ctrl</code> <code>f</code> FZF Files' Content <code>Ctrl</code> <code>h</code> FZF Recent Files <code>Ctrl</code> <code>t</code> FZF Tags"},{"location":"notes/tips/#installing-lsp-for-nvim","title":"installing lsp for nvim","text":"<p>coc-nvim-lsp </p>"},{"location":"notes/tips/#c-c","title":"c / c++","text":"<ul> <li>install clangd <code>sudo apt install clangd</code>     Then</li> <li>add <code>coc-clangd</code>     or</li> <li>config language server in cocconfig.json</li> </ul>"},{"location":"notes/tips/#java","title":"java","text":"<ul> <li>add <code>coc-java</code> in <code>g:coc\\_global\\_extensions</code> list</li> <li>install open-jdk (version &gt;= 17)</li> </ul> <pre><code> apt-cache search openjdk | egrep '11|17|18'\napt update\n apt install openjdk-17-jdk\n</code></pre>"},{"location":"notes/tips/#rust","title":"rust","text":"<p><code>cargo</code></p> <p>very simple</p> <ul> <li>install rust itself website <code>curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh</code></li> <li>add <code>coc-rust-analyzer</code> in <code>g:coc\\_global\\_extensions</code> list</li> <li>some tutorial offical tutorial </li> </ul>"},{"location":"notes/tips/#go","title":"go","text":"<ul> <li>install go itself website</li> <li>install gopls<ol> <li>export GO111MODULE=on</li> <li>go env -w GOPROXY=https://goproxy.cn,direct \u5207\u6362\u4e3a\u56fd\u5185\u4ee3\u7406</li> <li>go install golang.org/x/tools/gopls@latest \u4e0b\u8f7d gopls</li> <li>set up languageserver in cocConfig, remember write absolute path for gopls</li> </ol> </li> <li>begin writing code</li> </ul> <pre><code>go mod init example/hello\ncd example/hello\ntouch hello.go\n</code></pre> <pre><code>package main\n\nimport \"fmt\"\n\nfunc main() {\nfmt.Println(\"Hello, World!\")\n}\n</code></pre> <ul> <li>some tutorial offical </li> </ul> <pre><code>rm -rf /usr/local/go &amp;&amp; tar -C /usr/local -xzf go1.19.4.linux-amd64.tar.gz\n</code></pre> <ul> <li>add <code>coc-rust-analyzer</code> in <code>g:coc\\_global\\_extensions</code> list</li> </ul>"},{"location":"notes/tips/#haskell","title":"haskell","text":"<ul> <li>first install ghcup, website <p>after installing, may need to add ghcup to your environment variable. <code>export PATH=$PATH: ...</code></p> </li> <li>using ghcup to install hls, website</li> <li>Then add configrations in cocConfig.json</li> </ul> <pre><code>    \"haskell\": {\n\"command\": \"haskell-language-server-wrapper\",\n\"args\": [\"--lsp\"],\n\"rootPatterns\": [\"*.cabal\", \"stack.yaml\", \"cabal.project\", \"package.yaml\", \"hie.yaml\"],\n\"filetypes\": [\"haskell\", \"lhaskell\"],\n// Settings are optional, here are some example values\n\"settings\": {\n\"haskell\": {\n\"checkParents\": \"CheckOnSave\",\n\"checkProject\": true,\n\"maxCompletions\": 40,\n\"formattingProvider\": \"ormolu\",\n\"plugin\": {\n\"stan\": { \"globalOn\": true }\n}\n}\n}\n},\n</code></pre> <ul> <li>some tutorial ws3 school offical tutorial </li> </ul>"},{"location":"notes/tips/#kotlin","title":"kotlin","text":"<ol> <li>download kotlin lsp at github </li> <li>add configrations <pre><code>\"languageserver\": {\n\"kotlin\": {\n\"command\": \"~/lsp/kotlin/server/bin/kotlin-language-server\",\n\"filetypes\": [\"kotlin\"]\n}\n}\n</code></pre></li> <li> <p>install kotlin via sdk</p> </li> <li> <p>\u4e0b\u8f7d <code>kotlin</code> tutorial </p> <p>\u6ce8\u610f\u4f7f\u7528 <code>curl -s \"https://get.sdkman.io\" | bash</code> \u5b89\u88c5 <code>sdkman</code> sdkman usage </p> </li> <li> <p>\u5982\u679c\u4e0b\u8f7d\u901f\u5ea6\u592a\u6162\uff0c\u53ef\u4ee5\u524d\u5f80 kotlin  \u4e0b\u8f7d\u4e8c\u8fdb\u5236\u5b89\u88c5\u5305\uff0c\u89e3\u538b\u5230\u4efb\u610f\u4f4d\u7f6e\uff0c\u518d\u5c06 \u89e3\u538b\u540e\u6839\u76ee\u5f55\u4e2d <code>bin</code> \u6587\u4ef6\u5939 \u6dfb\u52a0\u5230\u73af\u5883\u53d8\u91cf</p> <p>\u89e3\u538b .tar.gz \u6587\u4ef6 \u7528  tar -xzf \u547d\u4ee4</p> </li> <li> <p>need install gradle (can not directly use kotlinc)</p> <p>using gradle to build project and run project</p> </li> </ol> <p>see this link Neovim for beginners </p>"},{"location":"notes/tips/#php","title":"php","text":"<ul> <li><code>coc-phpls</code></li> </ul> <p>web development in wsl2 </p>"},{"location":"notes/tips/#lua","title":"lua","text":"<p>how to install lua and luarock 1. follow the offical doc  <pre><code>curl -R -O http://www.lua.org/ftp/lua-5.4.4.tar.gz\ntar zxf lua-5.4.4.tar.gz\ncd lua-5.4.4\nmake all test\n</code></pre> 2. configure the environment variable 3. run <code>make local</code>, and copy everything in <code>install</code> directories to  /usr/local/bin/lua-5.4</p>"},{"location":"notes/tips/#python","title":"python","text":"<p>meet with issue 600  fixed by deleting coc-python in directory</p>"},{"location":"notes/tips/#latex","title":"latex","text":"<p>installing <code>texlive</code> </p> <pre><code>sudo pacman -S texlive-most texlive-lang  \n</code></pre> <p>&lt;++&gt;</p> <ul> <li>download and build <code>texlab</code> </li> <li>config settings</li> </ul> <pre><code>    \"texlab.path\": \"$HOME/notes/tex/texlab/target/release/texlab\",\n\"texlab.build.onSave\": true,\n\"texlab.build.args\": [\"-xelatex\", \"-interaction=nonstopmode\", \"-synctex=1\", \"%f\"],\n</code></pre>"},{"location":"notes/tips/#tips-in-configuring-android-studio","title":"Tips in Configuring Android Studio","text":""},{"location":"notes/tips/#config-maven-in-windows","title":"config maven in Windows","text":"<ol> <li>In IDEA find settings-&gt;build-&gt;Maven change <code>User settings file</code>, and <code>Local Repository</code> </li> <li>In the location of <code>user settings file</code>,touch a settings json, which Maven will read before execution</li> <li>In <code>settings.json</code>, add <code>local repository</code> and <code>mirror</code> . settings <p>~/.m_2/settings.xml is user config file ../conf/settings.xml is system config file  The priority of user file weights than system configration file.</p> </li> </ol> <p>if you are not sure what script is being executed, you can somehow random change the contents  see whether the change affect idea</p> <ul> <li>for maven or some thing related to java, go to bilibli channel to see tutorial.</li> <li>intelliJ offical doc is also a great reference</li> </ul>"},{"location":"notes/tips/#android-gradle","title":"Android gradle","text":"<ul> <li>To modify gradle location permanently, Add a environment variable <code>GRADLE_USER_HOME</code>,  and set its value as your self defined location.  for example <code>D:\\.gradle</code></li> <li>To move location of avd. go <code>~/.android/avd</code>, modify <code>XXX.ini</code> file</li> </ul> <pre><code>avd.ini.encoding=UTF-8\npath=D:\\avd\\Pixel_XL_API_33_2.avd // change this to your desired location\npath.rel=avd\\Pixel_XL_API_33_2.avd\ntarget=android-33\n</code></pre>"},{"location":"notes/tips/#tips-in-configuring-vscode","title":"Tips in Configuring VScode","text":""},{"location":"notes/tips/#vscode-configration","title":"vscode configration","text":"<ul> <li><code>which-key</code> could specify function of same key-bindings for different circustances</li> <li><code>multi-command</code></li> <li>find the api for spercific action in vscode docs  </li> </ul> <p>reference dotfiles tasks </p> <pre><code>\"terminal.integrated.fontFamily\": \"NotoSansMono Nerd Font\"     // amazing\n\"keyboard.dispatch\": \"keyCode\"  // keyboard\n// Place your key bindings in this file to override the defaults\n[\n{\n\"key\": \"ctrl+alt+t\",  // you could use     \"key\": \"ctrl+`\",  if you wish\n\"command\": \"workbench.action.closePanel\",\n// \"when\": \"terminalFocus\"\n},\n\n{\n\"key\": \"ctrl+alt+t\",\n\"command\": \"workbench.action.toggleMaximizedPanel\",\n\"when\": \"!terminalFocus\"\n},\n{\n\"key\": \"ctrl+shift+alt+z\",\n\"command\": \"workbench.action.tasks.runTask\"\n},\n{ \"key\": \"tab\",     \"command\": \"selectNextSuggestion\",\n\"when\": \"editorTextFocus &amp;&amp; suggestWidgetMultipleSuggestions &amp;&amp; suggestWidgetVisible\" },\n{ \"key\": \"tab\",                   \"command\": \"-acceptSelectedSuggestion\"\n},\n]\n</code></pre> <p>vscode cpp \u8c03\u8bd5 </p> <ol> <li>\u4ece \u5b98\u7f51 \u62f7\u8d1d task.json, launch.json</li> <li>\u9009\u62e9 debug cpp/c \u6587\u4ef6\u65f6\uff0c\u8bb0\u5f97\u4e0d\u8981\u9009 \u5e26\u6709 <code>/usr/bin/cpp</code> \u90a3\u4e2a\u4efb\u52a1</li> </ol> <p></p> <ol> <li>\u4e4b\u540e\u5c31\u53ef\u4ee5\u4e86</li> </ol>"},{"location":"notes/tips/#tips-in-configuring-ideavim","title":"Tips in Configuring ideavim","text":"<p>&lt;++&gt;</p>"},{"location":"notes/tips/#ideavimrc","title":"ideavimrc","text":"<ul> <li>how to use which key</li> <li>how to find the task id<ul> <li>first, <code>shift</code> <code>shift</code> and search <code>track action ID</code> </li> <li>perform and copy the action</li> <li>write mappings <code>map keyMappings &lt;Action&gt;({action_id})</code></li> </ul> </li> </ul>"},{"location":"notes/tips/#tips-for-command-line-tools","title":"Tips for Command Line tools","text":""},{"location":"notes/tips/#git_1","title":"git","text":"<p>git stash pop \u53ef\u4ee5\u64a4\u9500git stash \u64cd\u4f5c\u5e76\u5220\u9664stash\u7684\u8bb0\u5f55</p>"},{"location":"notes/tips/#pandoc","title":"pandoc","text":"<p><code>!pandoc % -o %&lt;.pdf --pdf-engine=xelatex -V CJKmainfont=KaiTi</code> </p> <p>\\(a_1 + b_2 = c_3\\) </p>"},{"location":"notes/tips/#ranger","title":"ranger","text":"<ul> <li>need syntax highlighting</li> <li>open pdf document for the first time is extremely slow</li> </ul>"},{"location":"notes/tips/#_3","title":"\u5e38\u7528\u547d\u4ee4\u884c","text":"<pre><code>wget --mirror --convert-links --adjust-extension --page-requisites --no-parent https://www.eecs189.org/sp18/\n\nadduser acs  # \u521b\u5efa\u7528\u6237acs\nusermod -aG sudo acs  # \u7ed9\u7528\u6237acs\u5206\u914dsudo\u6743\u9650\npasswd {}\nchsh -s /bin/zsh\nchange user name https://linux.cn/article-9192-1.html\nln \nln -s\nranger\n\u5c1d\u8bd5\u4f7f\u7528 vim \u5199 latex \n\nRunning Command in background\ncommand &amp;\ncommand &gt; /dev/null 2&gt;&amp;1 &amp; &gt;/dev/null 2&gt;&amp;1 means redirect stdout to /dev/null and stderr to  stdout .\n\n To bring a background process to the foreground, use the fg command: fg\n\n\n\n\u4e0d\u4f7f\u7528 treesitter \u7684 markdown \u8bed\u6cd5\u9ad8\u4eae\u89e3\u6790\uff0c\u4e14\u4e3b\u9898\u4e0d\u8c03\u6574\u4e3a sonokai\nmd\u6587\u6863\u5185\u5fc5\u987b\u6709\u4e00\u4e2a json \u4ee3\u7801\u5757\u624d\u80fd\u6b63\u5e38\u9ad8\u4eae\n</code></pre>"},{"location":"notes/tips/#pacman","title":"pacman","text":"<ol> <li><code>pacman -Ss {{package}}</code> s for search.</li> <li><code>pacman -Sc</code> clear cache </li> <li><code>pacman -Scc</code> clear all cache</li> <li><code>pacman -Rc {{package}}</code> remove package</li> <li><code>pacman -Rs</code> remove package and its dependency </li> <li><code>pacman -Rns</code> remove package, its dependency and its global configration file</li> <li><code>pacman -Qe</code> search user installed package</li> <li><code>pacman -R $(pacman -Qdtq)</code> </li> </ol>"},{"location":"notes/tips/#zellij","title":"zellij","text":"<ol> <li>\u914d\u7f6e\u6587\u4ef6 <code>~/.config/zellij</code> </li> <li>\u5e03\u5c40\u6587\u4ef6 <code>~/.config/zellij/layouts</code> </li> <li>\u52a0\u8f7d\u5e03\u5c40 <code>zellij --layout {\u5199\u6587\u4ef6\u540d\u5c31\u597d}</code> </li> </ol> <p>\u5e03\u5c40\u4ecb\u7ecd - tab \u662f\u4e00\u4e2a\u6ee1\u5c4f  - \u4e00\u4e2a tab \u4e0b \u53ef\u4ee5\u6709 \u591a\u4e2a pane</p> <p>\u53c2\u8003\u914d\u7f6e</p> <pre><code>layout {\n    pane split_direction=\"vertical\" {\n                    pane\n                    pane\n            }\n}\n</code></pre>"},{"location":"notes/tips/#gdb","title":"gdb","text":"<ol> <li><code>.gdbinit</code> \u53ef\u4ee5\u9884\u8bbe\u4e00\u4e9bgdb \u547d\u4ee4 \u65b9\u4fbf\u8c03\u8bd5 </li> <li>\u9700\u8981\u5728 <code>~/.config/gdb/gdbinit</code> \u91cc\u6dfb\u52a0\u5b89\u5168\u8def\u5f84\uff0c<code>.gdbinit</code> \u624d\u80fd\u88ab\u6267\u884c  </li> </ol> <pre><code>add-auto-load-safe-path /home/trace/trace/learning/open_course/6.s081/xv6-labs-2021/.gdbinit\nadd-auto-load-safe-path /home/trace/trace/learning/cpp/.gdbinit\n</code></pre> <ol> <li>\u5982\u679c gdb \u6253\u5370 \u5f02\u5e38</li> </ol> <pre><code>(gdb) p intervals[0][0]\n$2 = (__gnu_cxx::__alloc_traits&lt;std::allocator&lt;int&gt;, int&gt;::value_type &amp;) @0x555555\n572000: 15\n</code></pre> <p>\u53ef\u80fd\u662f\u56e0\u4e3a\u8bbe\u7f6e\u4e86 <code>set auto-load safe-path XXX</code></p>"},{"location":"notes/tips/#manjaro","title":"Manjaro \u4f7f\u7528\u5fc3\u5f97","text":"<ul> <li>How to installing fonts for manjaro</li> <li>downloading <code>ttf</code> file</li> <li>create directory for your font in <code>/usr/share/fonts</code> </li> <li>move your <code>ttf</code> file into the directory you just created</li> <li> <p>Done!</p> </li> <li> <p>\u6ce8\u610f \u4f7f\u7528 <code>yay</code> \u65f6\uff0c\u9700\u8981\u5f00\u4ee3\u7406\uff0c\u800c\u65e5\u7ec8\u7aef\u9ed8\u8ba4\u662f\u4e0d\u8d70\u4ee3\u7406\u7684\uff0c\u9700\u8981\u624b\u52a8\u8fd0\u884c</p> </li> </ul> <pre><code>export http_proxy=''\nexport https_proxt=''\n</code></pre> <ul> <li>i3wm \u4f7f\u7528 </li> <li><code>font:pango {{fontsize}}</code> </li> <li>\u9700\u8981\u5728\u4f7f\u7528\u4ee3\u7406\u7684\u7ec8\u7aef\u4e0b\uff0c\u5f00\u542f\u6d4f\u89c8\u5668\uff0c\u624d\u80fd\u8d70\u4ee3\u7406</li> <li><code>./clash-linux-amd64-v3-v1.11.4 -f config.yml &gt;/dev/null 2&gt;&amp; 1 &amp;</code> </li> <li> <p><code>source proxy.sh</code> </p> </li> <li> <p>\u5173\u95ed\u4ee3\u7406 </p> </li> <li><code>ps aux | grep clash</code> </li> <li><code>kill -9</code> </li> <li> <p><code>source noproxy.sh</code> </p> </li> <li> <p>\u952e\u4f4d\u7ed1\u5b9a</p> </li> <li><code>xev</code> show ascii code for keystroke</li> <li> <p>capslock: 66, esc: 9</p> </li> <li> <p>\u5f85\u6298\u817e</p> </li> <li> <p>\u8c03\u6574\u6807\u7b7e\u9875\u7684\u5927\u5c0f</p> </li> <li> <p>When using <code>fanyi</code> command line tools</p> </li> <li>either using <code>-S</code> option to close voice</li> <li>or you install relavent package <code>pacman -S festival festival-englist</code> </li> </ul> <p>&lt;++&gt;</p>"},{"location":"notes/tips/#_4","title":"\u5378\u8f7d\u8f6f\u4ef6","text":"<ul> <li>\u4f7f\u7528 pacman \u5378\u8f7d\u8f6f\u4ef6\u540e\uff0c\u53ef\u80fd\u4f1a\u6709\u6b8b\u7559\u6587\u4ef6\uff0c\u4e00\u822c\u68c0\u67e5\u4e00\u4e0b\u51e0\u4e2a\u6587\u4ef6\u4f4d\u7f6e<ul> <li><code>~/.config/</code></li> <li><code>~/</code></li> <li><code>/usr/share/</code></li> <li><code>~/cache/</code></li> </ul> </li> </ul>"},{"location":"notes/tips/#bluetoothctl","title":"bluetoothctl","text":"<p>\u9996\u5148\u542f\u52a8\u670d\u52a1</p> <pre><code>sudo systemctl enable bluetoothctl.service\nsudo systemctl start bluetoothctl.service\n</code></pre> <p>\u518d\u8f93\u5165 <code>bluetoothctl</code> \u8fdb\u5165\u547d\u4ee4\u884c\u754c\u9762</p> <pre><code>bluetoothctl #\u8fde\u63a5\u4ea4\u4e92\u547d\u4ee4\npower on #\u5f00\u542f\u63a7\u5236\u5668\u7535\u6e90\uff0c\u9ed8\u8ba4\u5173\u95ed\ndevices #\u83b7\u53d6\u8981\u914d\u5bf9\u8bbe\u5907\u7684MAC\nagent on #\u6253\u5f00\u4ee3\u7406\npair MAC_ADDRESS #\u914d\u5bf9\uff0c\u8f93\u5165MAC\u5730\u5740\u5373\u53ef\u914d\u5bf9\uff0c\u5efa\u8bae\u4f7f\u7528Tab\nconnect MAC_ADDRESS #\u8fde\u63a5\uff0c\u5efa\u8bae\u4f7f\u7528Tab\n</code></pre> <p>\u5982\u679c\u8f93\u5165 <code>power on</code> \u540e\uff0c\u51fa\u73b0 <code>Failed to set power on: org.bluez.Error.Failed</code> \u9519\u8bef, \u8fd4\u56de\u7ec8\u7aef\u8f93\u5165 <code>rfkill unblock bluetooth</code>\uff0c\u518d\u8fdb\u5165\u5230 <code>bluetoothctl</code> \u754c\u9762\u91cd\u65b0\u8f93\u5165 <code>power on</code> </p>"},{"location":"notes/tips/#_5","title":"\u901a\u77e5","text":"<p>\u5982\u679cqq\u4e0d\u73b0\u5b9e\u6d88\u606f\u901a\u77e5\uff0c\u53ef\u80fd\u662f\u56e0\u4e3a\u4f60\u5f00\u4e86 <code>Do not Disturb</code> \u6a21\u5f0f</p>"},{"location":"notes/tips/#cloud-server","title":"cloud server \u4f7f\u7528\u8bb0\u5f55","text":""},{"location":"notes/tips/#how-to-deploy-website-using-apacha2","title":"How to deploy website using Apacha2","text":"<ol> <li> <p>install <code>apache</code> <pre><code>sudo apt update\nsudo apt install apache2\n</code></pre></p> </li> <li> <p>config ufw (ubuntu firewall)</p> </li> </ol> <p><pre><code>sudo ufw allow OpenSSH # for ssh into server \nsudo ufw allow 'Apache Full' # \u4e3a apache \u670d\u52a1 \u653e\u884c\nsudo ufw enable # \u542f\u7528\u9632\u706b\u5899\n</code></pre> 3. \u542f\u52a8 apache \u670d\u52a1</p> <pre><code>sudo systemctl start apache2\n</code></pre> <ol> <li>installing php, <code>php plugin for apache</code>, mysql, <code>sql plugin for php</code></li> </ol> <p><code>sudo apt install php libapache-mod-php mysql-server php-mysql</code> </p> <ol> <li> <p>the root dir is located at <code>/var/www/html</code>, You can modify the content in index.html</p> </li> <li> <p>mysql \u670d\u52a1</p> <p>After installing mysql service automaticaly activatied</p> </li> </ol> <p>First we need to config password for root <code>Alter ...</code> </p> <p>Then run <code>mysql_secure_installation</code> </p>"},{"location":"notes/tips/#_6","title":"\u5b9a\u65f6\u4efb\u52a1","text":"<p>0 22 * * * ncdu / -o ~/log/disk_$(date +\\%Y\\%m\\%d_\\%H\\%M\\%S).json</p>"},{"location":"notes/tips/#side-notes","title":"Side Notes","text":"<ul> <li>About <code>systemctl</code> </li> <li> <p><code>systemctl [start | reload | restart | stop] {{service}}</code></p> </li> <li> <p>About <code>ufw</code> </p> </li> <li><code>ufw status</code> </li> <li><code>ufw allow in {{service}}</code> </li> <li> <p><code>ufw app list</code> </p> </li> <li> <p>About Apache </p> </li> <li>apache2.conf \u4e3b\u914d\u7f6e</li> <li>ports.conf  \u914d\u7f6e\u7aef\u53e3</li> <li>conf-available</li> <li>conf-enabled </li> <li><code>mods-available</code> \u5b89\u88c5\u7684\u63d2\u4ef6</li> <li><code>mods-enabled</code> \u542f\u7528\u7684\u63d2\u4ef6</li> <li><code>sites-available</code> \u5f85\u4f7f\u7528\u7684\u7ad9\u70b9</li> <li> <p><code>sites-enabled</code> \u542f\u7528\u7684\u7ad9\u70b9</p> </li> <li> <p>\u67e5\u770b\u7aef\u53e3\u5360\u7528\u60c5\u51b5</p> </li> </ul> <p><code>sudo netstat -tlnp | grep ':80'</code> </p>"},{"location":"notes/tips/#cloud-server-hexo","title":"cloud server + hexo","text":"<ol> <li>\u8fdb\u5165 <code>trace1729.github.io</code>, \u8f93\u5165 <code>hexo new  {post name}</code> \u65b0\u5efa\u535a\u5ba2 </li> <li><code>hexo g</code> \u751f\u4ea7\u9759\u6001\u9875\u9762 </li> <li><code>hexo d</code> \u5c06\u5185\u5bb9\u540c\u6b65\u81f3 github </li> <li>oss \u5982\u679c\u9700\u8981\u5c06\u6587\u4ef6\u4e0a\u4f20\u81f3\u4e91\u7aef\uff0c\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e2a</li> </ol> <p>\u7eff\u5bfc\u5e08\u539f\u8c05\u4f60\u4e86 19 1h10min</p>"},{"location":"notes/6.s081/lab1/","title":"Lab1","text":""},{"location":"notes/6.s081/lab1/#primes","title":"primes","text":"<ul> <li>How to stop program<ul> <li>-1 \u4f5c\u4e3a\u7ec8\u7ed3\u7b26</li> <li>\u6ce8\u610f\u5728\u7236\u8fdb\u7a0b \u6700\u540e \u52a0\u4e0a wait(0);</li> </ul> </li> <li>when you are confused about the output, pint out the pid would be convenient</li> </ul>"},{"location":"notes/6.s081/lab1/#find","title":"find","text":"<p>\u5148\u770bls\u7684\u5b9e\u73b0\u7ec6\u8282\uff1a     - \u9996\u5148\u6839\u636e\u53c2\u6570\u4e2a\u6570\u5224\u65ad\u8f93\u5165\u662f\u5426\u5408\u6cd5         - \u82e5\u8f93\u5165\u7684\u53c2\u6570\u4e2a\u6570\u4e3a0 \u76f4\u63a5\u9000\u51fa         - \u5426\u5219\uff0c\u5206\u522b\u5bf9\u6bcf\u4e00\u4e2a\u53c2\u6570 \u6267\u884c ls \u51fd\u6570</p> <p>ls \u51fd\u6570\u7684\u5b9e\u73b0\u7ec6\u8282 some struct and function api - struct dirent      | name | type    | description       |     |------|---------|-------------------|     | inum | ushort  | number of files ? |     | name | char [] | file names array  |</p> <ul> <li> <p>struct stat     | name  | type  | description                       |     |-------|-------|-----------------------------------|     | dev   | int   | file system disk divice           |     | ino   | uint  | file poniters ponits to the array |     | type  | short | type of a file                    |     | nlink | short | number of links to the file       |     | size  | size  | size of a file                    |</p> </li> <li> <p>system call close     | arugments            | description                    |     |----------------------|--------------------------------|     | const char* pathname | the name of the file           |     | int flag             | specify the way to open a file |</p> flag des O_RDONLY, O_WRONLY, or O_RDWR. \u53ea\u8bfb\uff0c\u53ea\u5199\uff0c\u8bfb\u5199 return Value des int fd file descripnator </li> <li> <p>fstat (file state)</p> arugments description int fd file descripnator struct stat* the info retrived from file fd points to was saved here return Value des status code 0 success, -1 failed </li> <li> <p>details about the ls</p> <ul> <li>first we open the file according to the file name (string) , and we get fd</li> <li>using fd, we call <code>fstat</code> ,to retrieve the metadata from it,</li> <li>according to the file, we have the following operation<ul> <li>if it is a <code>T_FILE</code> we print it </li> <li>if it is a <code>T_DIR</code> we </li> </ul> </li> </ul> </li> <li>persudo code for \"find\" <pre><code>takes two argument, \n    1. target directory\n    2. find target\nopen target directory, iterate through the catalogue\n    if it is a file, we compare it to file target\n    if it is a direc, we do it recursively\n</code></pre></li> </ul>"},{"location":"notes/6.s081/lab1/#problem","title":"problem","text":"<ul> <li>how to iterate through a direc in unix</li> <li>what is <code>.</code>, <code>..</code> be represented for</li> <li>cannot open file, maybe file name wrongs<ul> <li>do not close the file descripnator, so new file cannot be open</li> </ul> </li> </ul>"},{"location":"notes/6.s081/lab1/#xargs","title":"xargs","text":""},{"location":"notes/6.s081/lab1/#problem_1","title":"problem","text":"<ul> <li>how can we know we are excecuting xargs command</li> <li>how can I get the arguments from the pipe <ul> <li>we do not need to know, just read from standard input. the os provide us with abstraction using pipe.</li> </ul> </li> <li>how can pass char**  arg as the second  argument for exec, as we need to increase the number of arugments,     instead of copy value, we just assign poniters</li> </ul>"},{"location":"notes/6.s081/lab1/#how-to-implement","title":"How to implement","text":"<ul> <li>is the second paramter == '-n'<ul> <li>yes,  then we store the specified maximum arguments </li> <li>no, we read all the input, replace \\n -&gt; ' ' </li> </ul> </li> </ul>"},{"location":"notes/6.s081/lab10/","title":"Lab10","text":""},{"location":"notes/6.s081/lab10/#mmap","title":"mmap","text":"<p>mmap \u5c06 \u6587\u4ef6\u5185\u5bb9 \u6620\u5c04\u5230\u865a\u62df\u5185\u5b58\u3002\u8fd9\u6837\u64cd\u4f5c\u7cfb\u7edf\u53ef\u4ee5\u901a\u8fc7\u865a\u62df\u5730\u5740\u6765\u5bf9\u6587\u4ef6\u8fdb\u884c\u4fee\u6539\u3002</p> <p>\u9700\u8981\u67e5\u770b\u7684\u5185\u5bb9     - lecture 15 17 19 VMA     - lazy page allowcation     - \u5783\u573e\u56de\u6536\u673a\u5236</p> <p>lecture 10</p> <p>\u7ed3\u675f lab \u540e(\u9664\u4e86 lock)     - paper     - lecture</p> <p>\u4ec0\u4e48\u53eb fill in the page lazily, \u54ea\u91cc\u7684 page</p> <p>process \u5c06 \u6253\u5f00\u7684\u6587\u4ef6\u4fdd\u5b58\u5728 p-&gt;ofile \u6570\u7ec4\u4e2d\uff0c\u53ef\u4ee5\u901a\u8fc7 file descriptor \u6765\u8bbf\u95ee\u3002</p> <p>\u90a3\u4e48\u5728\u4e4b\u524d\uff0cuvmcopy \u662f\u901a\u8fc7\u67e5\u627e \u8d77\u59cb\u5730\u5740\u5bf9\u5e94\u7684 \u9875\u8868\u9879 \u6765\u505a\u5730\u5740\u6620\u5c04\u7684\u3002 mmap \u7684\u91cd\u70b9\u662f\u8981\u627e\u5230\u8fde\u7eed\u7684\u5185\u5b58\u7a7a\u95f4\u6765\u5b58\u653e\u6587\u4ef6\u6620\u5c04\u533a\u57df\u3002</p> <p>naive thought:      \u5728\u8c03\u7528 mmap \u65f6\uff0c\u4f7f\u7528\u5faa\u73af\u4fbf\u5229\u6574\u4e2a\u865a\u62df\u5730\u5740\u7a7a\u95f4\uff0c\u627e\u5230\u8fde\u7eed n \u4e2a page\uff1b     \u4e3a\u8fd9\u8fde\u7eed\u7684 n \u4e2apage \u8bbe\u7f6e\u6807\u5fd7\u4f4d\u3002\u5e76\u8bb0\u5f55\u5728\u6570\u7ec4 vma \u4e2d\u3002     \u968f\u4fbf\u627e\u4e00\u6bb5\u7a7a\u95f2\u5185\u5b58\u597d\u50cf\u4e0d\u663e\u793a\uff0c\u4f1a\u51fa\u73b0\u5404\u79cd\u6743\u9650\u9519\u8bef\u3002</p> <p>\u5730\u5740\u7a7a\u95f4 addr     user space         text data bss heap {mmap area} stack        kernerl space</p> <p>\u9996\u5148\uff0c\u53ea\u662f\u4e3a mmap \u5728\u7528\u6237\u7a7a\u95f4 \u627e\u5230\u4e00\u4e2a\u8fde\u7eed\u7684\u7a7a\u95f4\uff0c\u7136\u540e\u6ce8\u518c\u4e00\u4e0b vma\u3002\u8fd9\u4e2a\u65f6\u5019\u4e0d\u5bf9\u865a\u62df\u5185\u5b58\u505a\u4efb\u4f55\u64cd\u4f5c \u7f3a\u9875\u4e2d\u65ad\u7684\u65f6\u5019\uff0c\u518d\u505a\u9875\u9762\u6620\u5c04\u3002</p> <p>\u4e0d\u77e5\u9053\u4ece\u54ea\u91cc\u5f00\u59cb\u67e5\u627e\u9875\u9762\u6620\u5c04\uff0c\u53bb\u770b\u4e0b exec \u7684\u4ee3\u7801\u8bd5\u8bd5</p> <p>\u9006\u5929\uff0c\u7a0b\u5e8f\u8fd0\u884c\u5361\u6b7b\u662f\u56e0\u4e3a\u5728 trap \u4e2d \u5224\u65ad\u662f\u5426\u53d1\u751f\u4e86\u7f3a\uff0c\u4f46\u662f\u6ca1\u6709\u5bf9\u7f3a\u9875\u505a\u4efb\u4f55\u5904\u7406\u3002\u3002\u3002</p> <p>\u5728\u5bf9va \u8fdb\u884c\u4e2d\u65ad\u5904\u7406\u4e4b\u540e\uff0c\u76f8\u540c\u7684va \u518d\u6b21\u89e6\u53d1\u4e86\u7f3a\u9875\u4e2d\u65ad\uff0c\u8fd9\u5bfc\u81f4 mappages \u51fa\u73b0 panic. \u6211\u731c\u6d4b\u5927\u6982\u662f\u56e0\u4e3a\u6211\u5bf9 \u6743\u9650\u4f4d\u6ca1\u6709\u5904\u7406\u597d</p> <p>\u786e\u5b9e\uff0cprot \u9700\u8981\u53f3\u79fb\u4e00\u4f4d\uff0c\u624d\u80fd\u548c pte \u6807\u5fd7\u4f4d\u76f8\u5bf9\u5e94</p> <ul> <li> <p>\u4fee\u6b63\u540e\uff0c\u51fa\u73b0 panic freewalk, \u4f30\u8ba1\u662f \u8fdb\u7a0b\u7ed3\u675f\u65f6\uff0c\u6ca1\u6709\u91ca\u653e\u6389 vma \u6240\u6307\u5411\u7684 \u865a\u62df\u5185\u5b58\uff1b     \u5148\u67e5\u770b\u4e00\u4e0b\u5199\u5165\u7684\u6570\u636e\u5bf9\u4e0d\u5bf9\u3002</p> </li> <li> <p>\u5e76\u4e0d\u662f\uff0c\u56e0\u4e3a mmaptouch \u51fa\u73b0\u4e86\u95ee\u9898\uff0c\u8bbe\u7f6e p-&gt;killed = 1\uff0c\u6240\u4ee5\u624d\u4f1a\u89e6\u53d1 freewalk \u7b2c\u4e8c\u4e2a\u9875\u9762\u53ea\u8bfb\u5230 2048 \u5b57\u8282\u7684\u6570\u636e, \u5c06\u591a\u4f59\u7684\u6570\u636e\u521d\u59cb\u5316\u4e3a0\u5c31\u597d\u4e86\u3002</p> </li> </ul> <p>\u8ba9\u6211\u597d\u5947\u7684\u662f\uff0c write(fd, buf, BSIZE) \u662f\u600e\u4e48\u505a\u5230\u6bcf\u6b21\u5199\u5165\u4e00\u4e2a\u5b57\u7b26\u7684\uff1f \u4ed6\u7684\u5199\u5165\u5927\u5c0f\u4e0d\u662f BSIZE \u5417\uff1f</p> <p>\u5728\u5185\u6838\u6001\u53ea\u80fd\u8fde\u7eed\u68c0\u9a8c\u4e00\u4e2a\u9875\u7684\u5185\u5bb9\u3002 (\u4e0d\u540c\u7684\u9875\u9700\u8981\u67e5\u9875\u8868\u83b7\u5f97\u6620\u5c04)</p> <p>\u5728 8\u6708\u4efd\u524d\uff0c\u6ca1\u80fd\u5b8c\u6210 xv6\uff0c\u8fd9\u662f\u6211\u7684\u4e25\u91cd\u5931\u8bef\u3002\u5e94\u8be5\u75db\u5b9a\u601d\u75db\uff0c\u4e89\u53d6\u5728\u63a5\u4e0b\u7684\u51e0\u5929\u675c\u7edd\u6478\u9c7c\uff0c\u5c3d\u5feb\u5b8c\u6210xv6\u5e76\u5f00\u59cb\u4e0b\u4e00\u4e2a\u9879\u76ee\u3002</p> <p>\u5728\u4e0a\u4e00\u5468\u6709\u5b66\u4e60\u8bb0\u5f55\u7684\u53ea\u67093\u5929\u300228\uff0c29\uff0c30 \u8fd9\u4e09\u5929\u6478\u9c7c \u4e25\u91cd\u5ef6\u8bef\u4e86\u8ba1\u5212\u3002 \u5e0c\u671b\u5728\u4e4b\u540e\u7684\u5b66\u4e60\u751f\u6d3b\u4e2d\uff0c\u80fd\u591f\u66f4\u597d\u7684\u63a7\u5236\u81ea\u5df1\u7684\u65f6\u95f4\u3002</p>"},{"location":"notes/6.s081/lab2/","title":"lab 2 kernal development","text":""},{"location":"notes/6.s081/lab2/#_1","title":"\u7b14\u8bb0","text":""},{"location":"notes/6.s081/lab2/#kernal-user-mode","title":"kernal / user mode","text":"<p>How would user actually override the bits that identify context if the instruction to change that bit  is itself a privilege instruction? It seems user can never change to kernel mode.</p> <ul> <li>use <code>ecall</code> to invoke kernel mode</li> </ul> <p>The loader loads the XV_6 kernel into memory at physical address 0x80000000. The reason it places the kernel at 0x80000000 rather than 0x0 is because the address range 0x0:0x80000000 contains I/O devices</p>"},{"location":"notes/6.s081/lab2/#xv_6","title":"xv_6","text":"<p>The startup process for xv_6 system</p> <p> \u4e3a\u4e86\u5b9e\u73b0\u7cfb\u7edf\u8c03\u7528\uff0c\u6211\u4eec\u9996\u5148\u9700\u8981\u83b7\u53d6\u7528\u6237\u4f20\u9012\u7684\u53c2\u6570\u3002\u7531\u4e8e\u6700\u521d\u662f\u5728\u7528\u6237\u6a21\u5f0f\u4e0b\u8c03\u7528\u7684\u8c03\u7528\u7684\u7cfb\u7edf\u8c03\u7528\u51fd\u6570 \uff0c\u6240\u4ee5\u53c2\u6570\u662f\u50a8\u5b58\u5728\u901a\u7528\u5bc4\u5b58\u5668\u4e2d\u3002<code>kernal trap code</code> \u4f1a\u4fdd\u5b58\u901a\u7528\u5bc4\u5b58\u5668\u7684\u503c\uff0c<code>kernal code</code> \u5c31\u53ef\u4ee5\u5229\u7528 trapframe \u6765\u83b7\u53d6\u53c2\u6570\u3002xv6 \u4e3a\u6b64\u5c01\u88c5\u4e86<code>argint</code>, <code>argaddr</code>, <code>argfd</code>\u4e09\u4e2a\u51fd\u6570\u3002</p> <ul> <li>\u4f7f\u7528\u5b83\u4eec\u53ef\u4ee5\u5206\u522b\u4ee5 \u6574\u5f62\uff0c\u6307\u9488\uff0c\u6587\u4ef6\u63cf\u8ff0\u7b26\u6765\u83b7\u53d6\u7528\u6237\u4f20\u9012\u53c2\u6570</li> <li>\u5b83\u4eec\u90fd\u501f\u52a9 <code>argraw</code> \u6765\u4ece\u6b63\u786e\u7684\u5bc4\u5b58\u5668\u83b7\u53d6\u53c2\u6570</li> </ul>"},{"location":"notes/6.s081/lab2/#_2","title":"\u5b9e\u9a8c","text":""},{"location":"notes/6.s081/lab2/#trace-system-call","title":"trace system call","text":""},{"location":"notes/6.s081/lab2/#_3","title":"\u7cfb\u7edf\u8c03\u7528\u7684\u6267\u884c\u8fc7\u7a0b","text":"<ol> <li><code>user.h</code> add function stub to pass compiling </li> <li><code>usys.pl</code> generate corresponding assembly code </li> <li><code>syscall.c</code> call corresponding function in <code>sysproc.c</code> </li> <li>add code in <code>sycall.h</code> <code>1 &lt;&lt; xxx</code> </li> <li>add function <code>sys_trace</code> in <code>sysproc.c</code> </li> <li>add <code>extern uint64 sys_trace(void)</code> function signature</li> <li>modify array <code>syscalls</code> </li> </ol>"},{"location":"notes/6.s081/lab2/#sysinfo-system-call","title":"sysinfo system call","text":"<ul> <li>need record</li> <li><code>freemem</code> free memory, <code>kalloc.c</code> </li> <li> <p><code>nproc</code> number of process, <code>proc.c</code> </p> </li> <li> <p>copy <code>struct info</code> back to user space</p> </li> <li><code>sys_fstate</code> in <code>sysfile.c</code> </li> <li> <p><code>filestat</code> in <code>file.c</code> </p> </li> <li> <p>quesion</p> </li> <li> <p>why we need copy <code>struct info</code> to user space </p> </li> <li> <p>because after the system call, we need read struct info in user space</p> </li> <li> <p>why testmem test failed?</p> </li> <li> <p>seems like the freemem is always 0</p> <p><code>p = p-&gt;next</code> instead of <code>p++</code> </p> </li> </ul>"},{"location":"notes/6.s081/lab3/","title":"Page Table","text":"\u51fd\u6570 \u4f5c\u7528 copyin copy data to user space copyout copy data from user space mappages install PTE for new mappings walk find PA for VA"},{"location":"notes/6.s081/lab3/#xv6-book","title":"XV6 Book","text":"<ul> <li>\u4ece3.5 \u5f00\u59cb\uff0c \u90fd\u6ca1\u8bfb\u61c2, \u540e\u7eed\u8865\u4e0a:  &lt;13-04-23, David Chen&gt; -</li> </ul> <p>implement pageing in practice </p> <p>in <code>main.c</code> , it calls <code>kvminit</code>, and <code>kvminit</code>  calls <code>kvmmake</code>. <code>kvmmake</code> returns a pointer (kernel_pagetable).</p> <p>kvmmake first init allocate a PAGE for root pagetable, and then call <code>mappages</code> to allocate memory for hardware (At this point, paging is not started, so virtual address is directed mapped to physical address) </p> <p><code>kvmmap</code> calls <code>mappages</code> , <code>mappages</code> first align the start address and end address, and start allocate PA for VA at page intervals</p> <ul> <li><code>mappages</code> function makes me confusing</li> <li>what is macro <code>PAGEROUNDDOWN</code> means<ul> <li>I guess this macro is used to align the size of a and size.</li> </ul> </li> </ul>"},{"location":"notes/6.s081/lab3/#lab","title":"lab","text":""},{"location":"notes/6.s081/lab3/#speed-up-system-calls","title":"Speed up system calls","text":"<p>\u67d0\u4e9b\u73b0\u4ee3\u64cd\u4f5c\u7cfb\u7edf\u901a\u8fc7\u4e00\u4e2a\u53ea\u8bfb\u533a\u57df\u6765\u5728\u7528\u6237\u4e0e\u5185\u6838\u4e4b\u95f4\u5171\u4eab\u6570\u636e\uff0c\u4ee5\u52a0\u901f\u7cfb\u7edf\u8c03\u7528\u7684\u6267\u884c\u901f\u5ea6\u3002\u8fd9\u6837\u7684\u7b56\u7565\u80fd\u591f\u51cf\u5c11\u7cfb\u7edf\u5728\u5730\u5740\u8f6c\u6362\u4e0a\u82b1\u8d39\u7684\u65f6\u95f4\u3002\u4e3a\u4e86\u5e2e\u52a9\u4f60\u66f4\u597d\u7684\u7406\u89e3\u5982\u4f55\u5411 <code>page table</code> \u4e2d\u63d2\u5165\u6620\u5c04\uff0c\u4f60\u7684\u7b2c\u4e00\u4e2a\u4efb\u52a1\u5c31\u662f\u4e3a <code>getpid</code> \u8fd9\u4e2a\u7cfb\u7edf\u8c03\u7528\u5b9e\u73b0\u8fd9\u6837\u7684\u4f18\u5316\u3002</p> <p>Solution </p> <p>The life cycle of a xv6 process is as follows.</p> <p>We can call <code>allocproc</code> to create a new process. <code>allocproc</code> first use <code>kalloc</code> to allocate physical space for <code>p-&gt;trapframe</code>  and <code>p-&gt;usyscall</code> .</p> <pre><code>  if((p-&gt;usyscall = (struct usyscall *)kalloc()) == 0){\nfreeproc(p);\nrelease(&amp;p-&gt;lock);\nreturn 0;\n}\n\np-&gt;usyscall-&gt;pid = p-&gt;pid;\n</code></pre> <p>Then <code>allocproc</code> call <code>proc_pagetabl</code> to initialize the pagetable for the process.</p> <p><code>proc_pagetable</code> use <code>uvmmap</code> to map virtual memory to corresponding physical memory.</p> <pre><code>  // map a page for speed up syscall\nif(mappages(pagetable, USYSCALL, PGSIZE,\n(uint64)(p-&gt;usyscall), PTE_R) &lt; 0){\nuvmunmap(pagetable, USYSCALL, 1, 0);\nuvmfree(pagetable, 0);\nreturn 0;\n}\n\nreturn pagetable;\n}\n</code></pre> <p>We can call <code>freeproc</code> to free an running process. <code>freeproc</code> first use <code>kfree</code> to free process memory, Then call <code>proc_freepagetabl</code> to initialize free pagetable for the process.</p> <pre><code>  if(p-&gt;usyscall)\nkfree((void*)p-&gt;usyscall);\np-&gt;usyscall = 0;\n</code></pre> <p><code>proc_pagetable</code> use <code>uvmummap</code> to  cancel mapping for virtual memory to corresponding physical memory.</p> <p>And then call <code>uvmfree</code> to free pagetable.</p> <pre><code>void\nproc_freepagetable(pagetable_t pagetable, uint64 sz)\n{\nuvmunmap(pagetable, TRAMPOLINE, 1, 0);\nuvmunmap(pagetable, TRAPFRAME, 1, 0);\nuvmunmap(pagetable, USYSCALL, 1, 0);\nuvmfree(pagetable, sz);\n}\n</code></pre>"},{"location":"notes/6.s081/lab3/#detecting-which-page-have-been-accessed","title":"Detecting which page have been accessed","text":"<p>and according to the PA, find corresponding VA for kernel. But How to do this. Or we insert a new mapping for this copyin and copyout confused me. I guess they work as follows. copyin use process pagetable to find PA of the argument</p> <p>\u5b9e\u73b0\u7684\u65f6\u5019\uff0c\u53ea\u9700\u901a\u8fc7 walkaddr \u627e\u5230 \u7528\u6237\u865a\u62df\u5730\u5740\u5bf9\u5e94\u7684 \u7269\u7406\u5730\u5740\uff0c\u518d\u5bf9\u7269\u7406\u5730\u5740\u8fdb\u884c\u64cd\u4f5c\u5373\u53ef\u3002 </p> <p>How to write content to corresponding addr</p> <ol> <li>First we need to define <code>PTE_A</code> in <code>riscv.h</code> </li> <li>add stub for <code>walk</code> in <code>def.h</code> </li> <li>implement <code>sys_pgaccess</code> in <code>sysproc.c</code> <ul> <li>\u904d\u5386\u5c31\u597d </li> </ul> </li> </ol> <p> \u6ce8\u610f\u6211\u4eec\u4e0d\u9700\u8981\u624b\u52a8\u8bbe\u7f6e PTE_A \u4f4d\uff0c\u786c\u4ef6\u5e2e\u6211\u4eec\u505a\u597d\u4e86  <pre><code>int sys_pgaccess()\n{\n// lab pgtbl: your code here.\n\nuint64 va0;\nint num;\nuint64 usr_cnt;\n\n// \u4ece trapframe \u83b7\u53d6\u53c2\u6570\nif(argaddr(0, &amp;va0) &gt; 0) {\nreturn -1;\n}\n\nif(argint(1, &amp;num) &gt; 0) {\nreturn -1;\n}\n\nif(argaddr(2, &amp;usr_cnt) &gt; 0) {\nreturn -1;\n} uint64 k_cnt = 0;\n\n// \u5411\u4e0b\u53d6\u6574\uff0c\u4fdd\u8bc1\u5730\u5740\u5bf9\u9f50\n\nva0 = PGROUNDDOWN(va0);\nstruct proc* p = myproc();\n\n// \u4ece va0 -&gt; va0 + num * pagesize \u904d\u5386 \u9875\u8868\n// \u67e5\u770b\u5176 PTE_A \u662f\u5426\u4e3a 1\n// \u4e3a 1 \u7684\u8bdd\uff0c\u7f6e\u7ed3\u679c\u7b2c 1 &lt;&lt; num \u4f4d \u4e3a 1\uff0c\n// \u518d\u5c06 access \u4f4d \u7f6e 0\nfor (int i = 0; i &lt; num; i++) {\npte_t* pte = walk(p-&gt;pagetable, va0, 0);\nif (*pte &amp; PTE_A) {\nk_cnt |= (1 &lt;&lt; i);\n*pte = *pte &amp; (~PTE_A);\n}\nva0 += PGSIZE;\n}\n\ncopyout(p-&gt;pagetable, usr_cnt, (char* )&amp;k_cnt, sizeof(uint64) / sizeof(char));\n\nreturn 0;\n}\n</code></pre></p> <p>&lt;++&gt;</p> <p>```json</p>"},{"location":"notes/6.s081/lab4/","title":"Lab4","text":""},{"location":"notes/6.s081/lab4/#trap","title":"Trap","text":"<p>Q: Which registers contain arguments to functions? For example, which register holds 13 in main's call to printf?</p> <ul> <li>regisetr a2</li> </ul> <p>Q: Where is the call to function f in the assembly code for main? Where is the call to g? (Hint: the compiler may inline functions.)</p> <ul> <li>\u7f16\u8bd1\u5668\u4f18\u5316\u4e86\u5bf9\u4e0e f \u548c g \u7684\u51fd\u6570\u8c03\u7528</li> </ul> <p>26: 45b1                    li  a1,12</p> <p>Q: At what address is the function printf located?</p> <p>0x616</p> <p>Q: What value is in the register ra just after the jalr to printf in main?</p> <p>0x616</p> <p>Q: Run the following code.</p> <pre><code>unsigned int i = 0x00646c72;\nprintf(\"H%x Wo%s\", 57616, &amp;i);\n</code></pre> <p>What is the output? Here's an ASCII table that maps bytes to characters. The output depends on that fact that the RISC-V is little-endian. If the RISC-V were instead big-endian what would you set i to in order to yield the same output? Would you need to change 57616 to a different value?</p> <p>HE110 World; 0x726c64; 57616 \u4e0d\u9700\u8981\u6539\u53d8</p> <p></p> <p>Q: In the following code, what is going to be printed after 'y='? (note: the answer is not a specific value.) Why does this happen?</p> <pre><code>printf(\"x=%d y=%d\", 3);\n</code></pre> <p>A: read data that locates outside the stackframe</p> <p>Q: riscv \u4e0d\u662f\u5b9a\u957f\u7f16\u5740\uff0c\u4e00\u6761\u6307\u4ee464\u4f4d\u5417\uff0c\u600e\u4e48\u8fd9\u91cc\u6307\u4ee4\u7684\u4f4d\u7f6e\u4e4b\u95f4\u76f8\u5dee2</p> <p>64\u4f4d\u6307\u7684\u662f \u53ef\u5bfb\u5740\u8303\u56f4\u662f 2^64, \u548c\u6307\u4ee4\u957f\u5ea6\u6ca1\u6709\u5173\u7cfb\u3002 xv6 \u91c7\u7528\u7684\u6307\u4ee4\u96c6\u4e2d\u7684\u6307\u4ee4\u662f\u975e\u5b9a\u957f\u7684\u3002(16 bit / 32 bit)</p> <p>Q: auipc \u6307\u4ee4\u662f\u5e72\u5565\u7684</p> <p>auipc rd imm =&gt; rd = PC + imm &lt;&lt; 12 </p> <p>imm \u5269\u4e0b\u768412\u4f4d\u5728 jalr \u91cc</p> <p>auipc\u6307\u4ee4\u5c06\u7acb\u5373\u6570\u5de6\u79fb12\u4f4d\u52a0\u5230PC\u4e0a\u3002\u8fd9\u6837\uff0c\u53ef\u4ee5\u5c06auipc\u4e2d\u768420\u4f4d\u7acb\u5373\u6570\u4e0ejalr\u4e2d\u768412\u4f4d\u7acb\u5373\u6570\u7ec4\u5408\uff0c\u5c06\u6267\u884c\u6d41\u7a0b\u8f6c\u79fb\u5230\u4efb\u4f5532\u4f4dpc\u76f8\u5bf9\u5730\u5740\u3002\u800cauipc\u52a0\u4e0a\u666e\u901a\u52a0\u8f7d\u6216\u5b58\u50a8\u6307\u4ee4\u4e2d\u768412\u4f4d\u7acb\u5373\u6570\u504f\u79fb\u91cf\uff0c\u53ef\u4ee5\u4f7f\u5f97\u7a0b\u5e8f\u8bbf\u95ee\u4efb\u4f5532\u4f4dPC\u76f8\u5bf9\u5730\u5740\u7684\u6570\u636e</p> <p>Q: \u5982\u679c\u50a8\u5b58\u4e0d\u4e0b\uff0c\u8ba1\u7b97\u5730\u5740\u7684\u65f6\u5019\u4e0d\u4f1a\u6ea2\u51fa\u5417\uff1f</p> <p>\u8fd0\u7b97\u7684\u65f6\u5019\u5728ALU\u4e2d\u8fdb\u884c\u7684\uff0c\u4e0e\u673a\u5668\u5b57\u957f\u6709\u5173\uff0c \u548c\u6307\u4ee4\u5b57\u957f\u65e0\u5173\u3002</p> <p>\u673a\u5668\u5b57\u957f \u50a8\u5b58\u5b57\u957f \u6307\u4ee4\u5b57\u957f \u5bfb\u5740\u7a7a\u95f4</p> <p>Q: \u5730\u5740\u4e0d\u592a\u5bf9\u7684\u4e0a\u54e6\u3002  \u5bf9\u7684\u4e0a 30: ra = PC(0x30) + 0 = 0x30 34: pc = ra + 1510 = 1510 + 3 * 16 = 1558 = 0x616</p>"},{"location":"notes/6.s081/lab4/#backtrace","title":"backtrace","text":"<p>Q: \u8fd9\u4e2a stackframe \u7684\u5730\u5740\u4e3a\u5565\u8fd9\u4e48\u5c0f A: \u6253\u5370\u51fa\u6765\u7684\u662f\u7269\u7406\u5730\u5740</p> <p>Q: \u6808\u662f\u5b58\u5728\u865a\u62df\u5185\u5b58\u7684\u90a3\u4e00\u4e2a\u4f4d\u7f6e\uff1f A: </p> <p>\u5b8c\u6210\u672c\u5b9e\u9a8c\u7684\u5173\u952e\u70b9\uff0c\u5728\u4e8e\u7406\u89e3\u6808\u5e27 (stack frame) \u8fd9\u4e2a\u6a21\u578b</p> <p></p> <p>\u8fd8\u6709\u6307\u9488\u7684\u5999\u7528 </p> <p>r_fp \u8fd9\u4e2a\u51fd\u6570 \u8fd4\u56de\u7684\u662f\u5f53\u524d\u51fd\u6570\u7684 fp \u5730\u5740\u3002\u7531\u4e8e <code>xv</code>  \u662f 64 \u7684\u673a\u5668\uff0c\u6211\u4eec\u7528 <code>uint64</code> \u6765\u4fdd\u5b58\u5f53\u524d\u51fd\u6570\u7684 <code>fp</code> \u3002</p> <p>\u53c8\u56e0\u4e3a ra \u50a8\u5b58\u5728 \u6808\u9876\uff0c\u4e14 <code>xv6</code> \u662f <code>little endian</code> \u5b58\u50a8\uff0c\u6240\u4ee5\u6211\u4eec\u77e5\u9053\u50a8\u5b58 <code>ra</code> \u4f4e\u5b57\u8282\u7684\u6570\u636e\u5b58\u653e\u5728 \u4f4e\u5730\u5740\uff0c\u4e5f\u5c31\u662f <code>fp - 8</code> \u8fd9\u4e2a\u4f4d\u7f6e\u3002</p> <p>\u62ff\u5230 \u8fd9\u4e2a\u5730\u5740\u540e\uff0c\u6211\u4eec\u8981\u600e\u4e48\u83b7\u53d6\u8fd9\u4e2a\u5730\u5740\u6240\u4fdd\u5b58\u7684\u503c\u5462\uff1f \u53ef\u4ee5\u5c06\u8fd9\u4e2a\u5730\u5740\u8f6c\u6362\u4e3a\u6307\u9488\u7684\u7c7b\u578b\uff0c\u7136\u540e\u901a\u8fc7 <code>*fp</code> \u7684\u65b9\u5f0f\u6765\u83b7\u53d6\u5bf9\u5e94\u7684\u503c\u3002</p> <p>\u5176\u5b9e\u770b\u5230\u8fd9\u91cc\uff0c\u6211\u4eec\u5c31\u77e5\u9053\uff0c\u6307\u9488\u4e0d\u8fc7\u662f C \u8bed\u8a00\u63d0\u4f9b\u7ed9\u6211\u4eec\u7684\u4e00\u4e2a\u8bed\u6cd5\u7cd6\u3002 <code>*p</code> \u7684\u672c\u8d28\u76f8\u5f53\u4e8e</p> <pre><code>void copy(void* a, void* b, int len) {\nchar* a1 = (char *)a;\nchar* b1 = (char *)b;\n\nwhile (len-- &gt; 0) {*a1++ = *b1++;}\n}\n</code></pre> <pre><code>void\nbacktrace(void)\n{\nuint64 fp = r_fp();\nuint64 up = PGROUNDUP(fp);\nuint64 down = PGROUNDDOWN(fp);\n\nwhile (fp &lt;= up &amp;&amp; fp &gt;= down) {\nuint64* ra = (uint64* )(fp - 8);\nuint64* pre_fp = (uint64* )(fp - 16);\nprintf(\"%p\\n\", *ra);\nfp = *pre_fp;\n}\n}\n</code></pre> <p>\u505a\u5b8c\u8fd9\u4e2a\u5b9e\u9a8c\u6211\u4e5f\u7ec8\u4e8e\u7406\u89e3\u4e86</p> <p>The allocator sometimes treats addresses as integers in order to perform arithmetic on them (e.g., traversing all pages in freerange), and sometimes uses addresses as pointers to read and write memory (e.g., manipulating the run structure stored in each page);  this dual use of addresses is the main reason that the allocator code is full of C type casts.  The other reason is that freeing and allocation inherently change the type of the memory</p>"},{"location":"notes/6.s081/lab4/#alarm","title":"Alarm","text":"<p>\u9898\u610f: \u5728\u67d0\u4e00\u4e2a\u7a0b\u5e8f\u8c03\u7528\u4e86 <code>sigalarm</code> \u540e\uff0c \u6bcf\u95f4\u9694 <code>n</code> \u4e2a\u65f6\u949f\u5468\u671f\uff0c\u5c31\u4f1a\u8fdb\u5165\u8fdb\u5165\u4e2d\u65ad\uff0c\u8c03\u7528 <code>handler</code> \u51fd\u6570\u3002 \u60f3\u8981\u53d6\u6d88\u5468\u671f\u6027\u4e2d\u65ad\uff0c\u7a0b\u5e8f\u53ef\u4ee5\u8c03\u7528 <code>sigalarm(0, 0)</code> </p> <p>test0 \u96be\u70b9\uff1a 1. \u600e\u6837\u83b7\u53d6\u65f6\u95f4 2. \u6ca1\u6709\u627e\u5230 kernel \u83b7\u53d6 timer interrupt \u7684\u4ee3\u7801</p> <p>\u597d\u50cf\u4e0d\u9700\u8981\u624b\u52a8\u83b7\u53d6\u65f6\u95f4, \u786c\u4ef6\u5e2e\u6211\u4eec\u505a\u5230\u4e86</p> <p>Every tick, the hardware clock forces an interrupt' \u76f4\u63a5\u7528 ticks \u8fd9\u4e2a\u5168\u5c40\u53d8\u91cf</p> <p>\u53ef\u4ee5\u5728\u8fd9\u4e2a\u6761\u4ef6\u4e0b\uff0c\u5904\u7406 tick</p> <p>if(which_dev == 2) ...</p> <p>test1 \u96be\u70b9: 1. \u50a8\u5b58\u4ec0\u4e48\u5bc4\u5b58\u5668\u624d\u80fd\u6b63\u5e38\u56de\u590d\u72b6\u6001</p>"},{"location":"notes/6.s081/lab5%28cow%29/","title":"Lab5(cow)","text":""},{"location":"notes/6.s081/lab5%28cow%29/#cow","title":"cow","text":"<p>\u5f88\u7efc\u5408\u7684\u4e00\u4e2a\u9879\u76ee\uff0c\u505a\u5b8c\u4e4b\u540e\u590d\u4e60\u4e86 os api(fork, pipe), \u7cfb\u7edf\u8c03\u7528\uff0c\u9875\u8868\uff0c\u4e2d\u65ad, \u8fdb\u7a0b\u58f0\u660e\u5468\u671f\u3002</p> <ul> <li> <p>\u4fee\u6539 uvmmap \u51fd\u6570\u5c06\u7236\u8fdb\u7a0b\u7684\u7269\u7406\u5730\u5740\u6620\u5c04\u5230\u5b50\u8fdb\u7a0b\u7684\u865a\u62df\u5730\u5740</p> </li> <li> <p>Modify uvmcopy() to map the parent's physical pages into the child, instead     of allocating new pages. Clear PTE_W in the PTEs of both child and parent.</p> </li> </ul> <p>structure of pagetabl entry</p> <p></p> <p>scause \u503c\u6240\u4ee3\u8868\u7684\u542b\u610f</p> <p></p> <ul> <li>\u51fa\u73b0\u7f3a\u9875\u9519\u8bef\u624d\u4e3a\u5b50\u8fdb\u7a0b\u5206\u914d\u81ea\u5df1\u7684\u5185\u5bb9\u7a7a\u95f4.</li> <li> <p>\u600e\u4e48\u627e\u5230\u5f15\u53d1\u7f3a\u9875\u9519\u8bef\u7684\u5730\u5740\u5462\uff1f</p> </li> <li> <p>Modify usertrap() to recognize page faults. When a page-fault occurs on a     COW page, allocate a new page with kalloc(), copy the old page to the newpage, and install the new page in the PTE with PTE_W set.</p> </li> <li> <p>\u4ec0\u4e48\u65f6\u5019 drop \u4e00\u4e2apage \u5f53\u5b50\u8fdb\u7a0b\u8fd0\u884c\u7ed3\u675f\u7684\u65f6\u5019\u5417</p> </li> </ul> <p>need some ways to record page reference count</p> <ol> <li>Ensure that each physical page is freed when the last PTE reference to it     goes away -- but not before. A good way to do this is to keep, for each     physical page, a \"reference count\" of the number of user page tables that     refer to that page. Set a page's reference count to one when kalloc()     allocates it. Increment a page's reference count when fork causes a child     to share the page, and decrement a page's count each time any process drops     the page from its page table. kfree() should only place a page back on the     free list if its reference count is zero. It's OK to to keep these counts     in a fixed-size array of integers. You'll have to work out a scheme for how     to index the array and how to choose its size. For example, you could index     the array with the page's physical address divided by 4096, and give the     array a number of elements equal to highest physical address of any page     placed on the free list by kinit() in kalloc.c.</li> <li>Modify copyout() to use the same scheme as page faults when it encounters a     COW page.</li> </ol> <p>Some hints:</p> <ul> <li>use RSW to distinguish cow pages table</li> </ul> <p>\u6b63\u5e38\u60c5\u51b5\u4e0b\uff0cpte \u7684 \u7b2c\u4e5d\u4f4d \u4e5f\u5c31\u662f rsw \u4f4d\u662f 0 \u624d\u5bf9\u3002  \u4e0d\u5bf9\uff0c1 &lt;&lt; 9\uff0c \u5b9e\u9645\u4e0a\u5012\u6570\u7b2c10\u4f4d\u662f1</p> <p>\u662f\u4e0d\u662f\u6211\u7684\u7236\u8fdb\u7a0b\u6ca1\u6709\u6807\u793a\u4e3a cow\uff0c\u6240\u4ee5\u5bfc\u81f4\u51fa\u9519     \u8fd8\u771f\u662f\uff0c\u4e0d\u8fc7 \u8fd9\u6837\u6539\u5c31\u8fc7\u4e0d\u4e86\u7b2c\u4e09\u4e2a threetest, \u5185\u5b58\u8fd8\u662f\u6cc4\u6f0f\u4e86</p> <p>\u6211\u8fd9\u91cc\u53ea\u8003\u8651\u4e86\u4e00\u4e2a\u8fdb\u7a0b\u7ed3\u675f\u65f6\uff0c\u5bf9\u8fdb\u7a0b\u6240\u5360\u6709\u7684\u7269\u7406\u7a7a\u95f4\u7684\u8ba1\u6570\u5668\u51cf\u4e00\uff0c\u8fd8\u6709\u4ec0\u4e48\u5176\u4ed6\u60c5\u51b5\u4f1a\u5bfc\u81f4\u8ba1\u6570\u5668\u51cf\u4e00\u5417       \u5176\u5b9e\u5e76\u6ca1\u6709\u3002</p> <pre><code>\u5728 uvmhardcopy \u91cc\uff0c\u8fd9\u91cc\u5bf9\u7236\u8fdb\u7a0b\u5730\u5740\u7684\u5f15\u7528\u51cf1\uff0c\u6211\u4ee5\u4e3a\u8fd9\u4e2a\u65f6\u5019\u7236\u8fdb\u7a0b\u5730\u5740\u7684\u5f15\u7528\u4e00\u5b9a\u662f\u5927\u4e8e 0\u7684\uff0c\u5176\u5b9e\u4e0d\u4e00\u5b9a\u3002\u53ef\u80fd\u4f1a\u6709\u5b64\u513f\u8fdb\u7a0b\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u53ea\u6709\u5b50\u8fdb\u7a0b\uff0c\u6ca1\u6709\u7236\u8fdb\u7a0b\u3002\uff08\u6216\u8005\u8bf4\u5b50\u8fdb\u7a0b\u88ab\u6839\u8fdb\u7a0b\u6258\u7ba1\uff09\u8fd9\u4e2a\u65f6\u5019\uff0c\u7236\u8fdb\u7a0b\u5360\u7528\u7684\u8fd9\u5757\u5185\u5b58\u5c31\u91ca\u653e\u4e0d\u4e86\u4e86\u3002\u8981\u5224\u65ad\u4e00\u4e0b\uff0c\u5982\u679c\u8fd9\u5757\n\u5730\u5740\u7684\u5f15\u7528\u5df2\u7ecf\u662f0\u7684\u8bdd\uff0c\u5c31\u8981\u91ca\u653e\u7a7a\u95f4\u3002\n</code></pre> <p>\u8bf4\u5b9e\u8bdd\uff0c\u8fd9\u6b21\u627ebug\u4e5f\u662f\u9760\u8fd0\u6c14\uff0c\u8fd8\u662f\u7f3a\u5c11\u70b9\u65b9\u6cd5\u8bba\u3002</p> <p>\u5fc3\u8def\u5386\u7a0b</p> <p>\u7b2c\u4e09\u4e2a threetest failed -&gt; \uff08\u770b\u4e86\u6d4b\u8bd5\u51fd\u6570\u7684\u76ee\u7684\uff09\u53ef\u80fd\u662f\u6709\u5185\u5b58\u6ca1\u91ca\u653e -&gt; \u5199\u4e00\u4e2a\u7cfb\u7edf\u8c03\u7528\u770b\u4e00\u4e0b\u6267\u884c\u5b8c\u4e00\u4e2a\u51fd\u6570\u540e\uff0c\u7269\u7406\u5185\u5b58\u7684\u5269\u4f59\u5927\u5c0f -&gt; \u679c\u7136\u8d8a\u6765\u8d8a\u5c0f\u4e86 -&gt; \u5c1d\u8bd5\u4fee\u6539\u4e00\u4e0b\u8ba1\u7b97\u9875\u9762\u5f15\u7528\u7684\u7b97\u6cd5 -&gt; \u6210\u4e86 -&gt; \u5206\u6790\u95ee\u9898\u539f\u56e0</p> <p>\u2022 The lazy page allocation lab has likely made you familiar with much of the     xv6 kernel code that's relevant for copy-on-write. However, you should not     base this lab on your lazy allocation solution; instead, please start with     a fresh copy of xv6 as directed above.   \u2022 It may be useful to have a way to record, for each PTE, whether it is a COW     mapping. You can use the RSW (reserved for software) bits in the RISC-V PTE     for this.   \u2022 usertests explores scenarios that cowtest does not test, so don't forget to     check that all tests pass for both.   \u2022 Some helpful macros and definitions for page table flags are at the end of     kernel/riscv.h.   \u2022 If a COW page fault occurs and there's no free memory, the process should     be killed.</p> <p>\u8fc7\u4e86 cowtest, \u4f46\u662f usertest \u6ca1\u6709\u8fc7\u3002 usertest: countfree     \u5f00\u4e24\u4e2a\u8fdb\u7a0b\u3002\u5b50\u8fdb\u7a0b\u4f7f\u7528sbrk\u5206\u914d\u7a7a\u95f4\uff0c\u6bcf\u5206\u914d\u4e00\u9875\u7a7a\u95f4\u5c31\u50cf stdin \u5199\u5165\u4e00\u4e2ax\uff0c\u7236\u8fdb\u7a0b\u4ece stdout \u8bfb\u53d6\u5b57\u7b26\uff0c\u6bcf     \u8bfb\u5230\u4e00\u4e2a\u5b57\u7b26\u5c31\u8bf4\u660e\u6210\u529f\u5206\u914d\u4e86\u4e00\u9875\u3002</p> <p>\u5728\u8fdb\u884c MAXva test \u65f6\uff0c\u4f1a\u51fa\u73b0 \u9875\u9762\u7a7a\u95f4\u6ca1\u6709\u56de\u6536\u7684\u60c5\u51b5 \u603b\u662f\u6709\u4e00\u9875 \u7684 mem leak \u6682\u65f6\u653e\u5f03\u4e86 \u4e4b\u540e\u6709\u65f6\u95f4\u518d\u91cd\u5199\u4e00\u904d \u901a\u8fc7\u4fee\u6539\u6d4b\u8bd5\u4ee3\u7801\uff0c\u9a97\u5230\u4e86 usertests \u7684\u5206\u6570\uff0c\u5f88\u65e0\u803b\u54c8\u54c8\u54c8 \u5148\u770b\u540e\u9762\u4e86</p>"},{"location":"notes/6.s081/lab6%28scheduling%29/","title":"lab 6 multithreading","text":""},{"location":"notes/6.s081/lab6%28scheduling%29/#xv6-chapter-7-scheduling","title":"XV6 Chapter 7 Scheduling","text":"<p>7.6 - 7.7 \u6ca1\u6709\u770b</p>"},{"location":"notes/6.s081/lab6%28scheduling%29/#6","title":"\u8fdb\u7a0b\u8c03\u5ea6\u7684 6 \u4e2a\u95ee\u9898","text":""},{"location":"notes/6.s081/lab6%28scheduling%29/#71","title":"7.1","text":"<ol> <li>\u5982\u4f55\u5728\u8fdb\u7a0b\u95f4\u8fdb\u884c\u5207\u6362</li> <li>\u5982\u4f55\u5b9e\u73b0\u5bf9\u4e8e\u7528\u6237\u900f\u660e\u7684\u4e0a\u4e0b\u6587\u5207\u6362<ul> <li><code>yield</code> , <code>swtch</code> , <code>scheduler</code> </li> </ul> </li> <li>\u9700\u8981\u52a0\u9501\u6765\u9632\u6b62 race condition<ul> <li><code>p-&gt;lock</code> , <code>sleep</code> , <code>wake up</code> </li> </ul> </li> <li>\u8fdb\u7a0b\u7ed3\u675f\u65f6\u9700\u8981\u91ca\u653e\u6389\u6240\u6709\u8d44\u6e90\uff0c\u4ec5\u4f9d\u9760\u8fdb\u7a0b\u81ea\u5df1\u4e0d\u80fd\u5b8c\u5168\u91ca\u653e\u3002<ul> <li><code>wait</code> and <code>exit</code> </li> </ul> </li> <li>\u591a\u6838\u673a\u5668\u5fc5\u987b\u77e5\u9053\u4ed6\u6b63\u52a0\u6267\u884c\u7684\u662f\u54ea\u4e00\u4e2a\u8fdb\u7a0b</li> <li>sleep and wake up</li> </ol> <p><code>swtch</code> only save and restore 32 regs </p> <p>\u4e3a\u4ec0\u4e48 process \u6709 context, cpu \u4e5f\u6709 context, \u4ed6\u4eec\u662f\u7528\u5728\u4e0d\u540c\u7684\u573a\u666f\u4e0b\u5417 </p>"},{"location":"notes/6.s081/lab6%28scheduling%29/#72-code-context-switching","title":"7.2 code context switching","text":"<p>\u590d\u4e60\u4e00\u4e0b\u5728 chapter 4 \u4e2d\uff0c\u4e2d\u65ad\u7684\u8c03\u7528\u8fc7\u7a0b</p> <ol> <li><code>usertrap</code> calls <code>yield</code> </li> <li><code>yield</code> calls <code>sched</code> </li> <li><code>sched</code> calls <code>swtch</code> to save current context in p-&gt;context, and switch to the scheduler context previously saved in cpu-&gt;scheduler</li> </ol> <p>Q: \u4e3a\u4ec0\u4e48\u8981\u5207\u6362\u5230 <code>scheduler context</code> , <code>scheduler context</code> \u53c8\u662f\u4ec0\u4e48\u610f\u601d\uff1f A: \u6bcf\u4e00\u4e2a cpu \u90fd\u6709\u4e00\u4e2a kernel thread \u8fd0\u884c <code>scheduler</code> \u51fd\u6570\u3002\u60f3\u8981\u5207\u6362\u6267\u884c\u7684\u8fdb\u7a0b\uff0c\u5c31\u8981\u5148\u5207\u6362\u5230\u8fd9\u4e2a\u8fd0\u884c\u7740 <code>scheduler</code> \u51fd\u6570 \u7684 kernel thread. \u518d\u901a\u8fc7  <code>scheduler</code> \u51fd\u6570\u6765\u8fdb\u884c\u8fdb\u7a0b\u5207\u6362\u3002(\u5bf9\u5e944\u6b21\u8f6c\u6362\u7684\u7b2c\u4e8c\u6b21)</p>"},{"location":"notes/6.s081/lab6%28scheduling%29/#73-scheduler","title":"7.3 scheduler","text":"<p>Q: \u4e3a\u4ec0\u4e48\u5728<code>swtch</code> \u6267\u884c\u671f\u95f4\uff0c\u8981\u4fdd\u6301 <code>p-&gt;lock</code> A: \u56e0\u4e3a\u8981\u7ef4\u6301\u4e00\u4e2a\u4e0d\u53d8\u91cf\uff0c\u4e5f\u5373 before schedulering, process must excute <code>yield</code> , <code>sched</code> , <code>scheduler</code> continuosly. \u4e0d\u52a0\u9501\u7684\u8bdd\uff0c\u53ef\u80fd\u5728cpu1 \u4e2d \u8fdb\u7a0bp \u521a\u5c06\u81ea\u5df1\u7684\u72b6\u6001\u8bbe\u7f6e\u6210 runable \uff0c\u4e0e\u6b64\u540c\u65f6 cpu2 \u770b\u5230 \u8fdb\u7a0bp\u7684\u72b6\u6001\u662f runable\uff0c\u5c31\u60f3\u8981\u5f00\u59cb\u6267\u884c\u8fd9\u4e2a\u8fdb\u7a0b\u3002\u8fd9\u6837\u4f1a\u5bfc\u81f4\u4e24\u4e2acpu \u8fd0\u884c\u5728\u540c\u4e00\u4e2a kernel stack \u4e2d </p>"},{"location":"notes/6.s081/lab6%28scheduling%29/#75-sleep-and-wake-up","title":"7.5 sleep and wake up","text":"<p>\u4e3a\u4ec0\u4e48\u4e0d\u5728 sched \u4e4b\u524d release p-lock</p> <p>In the given code, we don't release the <code>p-&gt;lock</code> before calling <code>sched</code> because releasing the lock before calling <code>sched</code> would allow other threads to modify the state of the process (<code>p-&gt;state</code>) or wake it up (<code>wakeup</code>), which could lead to race conditions or incorrect behavior.</p> <p>\u4e0d\u592a\u5bf9\u52b2\uff0c\u4e4b\u540e\u95ee\u95ee\u522b\u4eba</p>"},{"location":"notes/6.s081/lab6%28scheduling%29/#78-wait-exit-and-kill","title":"7.8 wait exit and kill","text":"<p>wait </p> <ol> <li>free any child whose stauts is ZOMBIE</li> </ol> <p>exit </p> <ol> <li>put caller into zombie state.</li> <li>wake up parent</li> </ol> <p>kill </p> <p>does very little, just mark the state of process to be <code>KILLED``</code>. when the process enter or exit the kernel, the trap handler will see the flag and free this process.</p>"},{"location":"notes/6.s081/lab6%28scheduling%29/#lab-thread","title":"Lab thread","text":""},{"location":"notes/6.s081/lab6%28scheduling%29/#user-level-thread-package","title":"user level thread package","text":"<ol> <li>\u521b\u5efa\u7684\u65f6\u5019. \u521d\u59cb\u5316 context, \u8bbe\u7f6e ra \u548c sp \u4e24\u4e2a\u6307\u9488.</li> <li>\u8c03\u5ea6\u7684\u65f6\u5019, \u4fdd\u5b58 ra, sp \u548c callee saved \u5bc4\u5b58\u5668</li> </ol> <p>lab \u5f88\u7b80\u7b54,\u4f46\u662f\u6211\u5f88\u7591\u60d1</p> <p>Q: \u6211\u53ea\u662f\u8bbe\u7f6e\u4e86\u7ebf\u7a0b\u7ed3\u6784\u4f53\u4e2dcontext\u7684ra\u503c,\u64cd\u4f5c\u7cfb\u7edf\u662f\u600e\u4e48\u77e5\u9053\u8981\u52a0\u8f7d\u8fd9\u4e2ara\u5230pc\u7684.\u5982\u679c\u662f\u8fdb\u7a0b\u7684\u8bdd,\u7f16\u8bd1\u5668\u4f1a\u5e2e\u52a9\u81ea\u52a8\u751f\u6210\u76f8\u5173\u7684\u6c47\u7f16\u4ee3\u7801(\u6bd4\u5982\u5c06ra\u5bc4\u5b58\u5668\u7684\u503c\u653e\u8fdbpc\u91cc), \u4f46\u662f\u8fd9\u4e2a thread \u662f\u600e\u4e48\u505a\u5230\u7684?? A: \u50bb\u4e86, thread_Switch \u5c31\u6709 <code>ld ra, xxx</code>. \u628a\u4fdd\u5b58\u7684 ra \u503c\u52a0\u8f7d\u5230 ra \u5bc4\u5b58\u53bb\u4e86\u3002\u6700\u540e\u6267\u884cret, \u5c31\u628a ra \u7684\u503c\u7ed9pc\u4e86\u3002</p>"},{"location":"notes/6.s081/lab6%28scheduling%29/#_1","title":"\u4f7f\u7528\u7ebf\u7a0b","text":"<p>\u5728\u8fd9\u4e2a\u4efb\u52a1\u4e2d\uff0c\u4f60\u5c06\u63a2\u7d22\u5982\u4f55\u4f7f\u7528\u7ebf\u7a0b\u548c\u9501\u6765\u4fdd\u8bc1\u54c8\u5e0c\u8868\u5728\u591a\u7ebf\u7a0b\u4e0b\u6b63\u5e38\u5de5\u4f5c\u3002\u4f60\u5e94\u8be5\u5728\u771f\u6b63\u7684Linux\u6216\u8005Macos \u4e0b \u5b8c\u6210\u8fd9\u4e2a\u5b9e\u9a8c (not xv6)</p> <p>\u8fd9\u4e2a\u5b9e\u9a8c\u4f7f\u7528\u4e86 <code>pthread</code> \u7ebf\u7a0b\u5e93\uff0c\u4f60\u53ef\u4ee5\u9605\u8bfb\u6587\u6863\u4ee5\u4e86\u89e3\u5e93\u7684\u4f7f\u7528\u3002</p> <p>\u6587\u4ef6 <code>ph.c</code> \u5b9e\u73b0\u4e86\u4e00\u4e2a\u5728\u5355\u7ebf\u7a0b\u4e0b\u6b63\u5e38\u5de5\u4f5c\uff0c\u4f46\u5728\u591a\u7ebf\u7a0b\u4e0b\u4f1a\u51fa\u9519\u7684\u54c8\u5e0c\u8868\u3002</p> <p>\u4f60\u9700\u8981\u505a\u7684\uff0c\u5c31\u662f\u4f7f\u7528\u4e00\u628a\u4e92\u65a5\u9501\uff0c\u6765\u4f7f\u5f97\u54c8\u5e0c\u8868\u5728\u591a\u7ebf\u7a0b\u7684\u60c5\u51b5\u4e0b\u80fd\u591f\u6b63\u5e38\u5de5\u4f5c\u3002</p> <p>\u5728\u8c03\u7528 insert \u51fd\u6570\u524d\u540e\u52a0\u4e0a\u4e00\u628a \u4e92\u65a5\u9501\u5c31\u53ef\u4ee5\u4e86\u3002</p> <pre><code>pthread_mutex_lock(&amp;lock);\ninsert(key, value, &amp;table[i], table[i]);\npthread_mutex_unlock(&amp;lock);\n</code></pre> <p>\u6ce8\u610f\u4e0d\u80fd\u5728 insert \u51fd\u6570\u5185\u52a0\u9501\uff0c\u56e0\u4e3a\u5728\u5411 insert \u51fd\u6570\u4f20\u9012\u503c\u7684\u65f6\u5019(\u94fe\u8868\u5934)\uff0c \u53ef\u80fd\u4f1a\u53d1\u751f race condition.</p>"},{"location":"notes/6.s081/lab6%28scheduling%29/#barrier","title":"barrier","text":"<p>\u5b9e\u73b0\u4e00\u4e2a\u7c7b\u4f3c sleep \u548c wakeup \u7684\u673a\u5236</p> <p>\u6bd4\u8f83\u7b80\u5355, \u5f53\u6709\u7ebf\u7a0b\u8fdb\u5165 <code>barrier</code> \u7684\u65f6\u5019,\u9012\u589e <code>barrier.nthread</code> , \u5982\u679c <code>barrier.nthread</code> \u662f <code>nthread</code> \u7684\u6574\u6570\u500d,\u8bf4\u660e\u5728\u5f53\u524d\u8f6e\u7684\u6240\u6709\u7ebf\u7a0b\u90fd\u5230\u8fbe\u4e86 <code>barrier</code> , \u8fd9\u4e2a\u65f6\u5019\u5c31\u8c03\u7528 <code>broadcast</code> . \u4e0d\u7136\u5c31 <code>wait</code> . \u6ce8\u610f\u5728\u4e24\u4e2a\u51fa\u53e3\u90fd\u9700\u8981\u66f4\u65b0 round</p> <pre><code>static void barrier()\n{\n// YOUR CODE HERE\n//\n// Block until all threads have called barrier() and\n// then increment bstate.round.\n\npthread_mutex_lock(&amp;bstate.barrier_mutex);\nbstate.nthread++;\nif (bstate.nthread != 0 &amp;&amp; bstate.nthread % nthread == 0) {\npthread_mutex_unlock(&amp;bstate.barrier_mutex);\npthread_cond_broadcast(&amp;bstate.barrier_cond);\nbstate.round = bstate.nthread / nthread;\nreturn;\n}\npthread_cond_wait(&amp;bstate.barrier_cond, &amp;bstate.barrier_mutex);\nbstate.round = bstate.nthread / nthread;\npthread_mutex_unlock(&amp;bstate.barrier_mutex);\n}\n</code></pre>"},{"location":"notes/6.s081/lab7/","title":"Lab7","text":""},{"location":"notes/6.s081/lab7/#chapter-5-device-interrupt","title":"Chapter 5 device interrupt","text":"<p>a top half     process kernel stack, system call (\u6a21\u5f0f\u5207\u6362\uff0c\u6570\u636e\u62f7\u8d1d) a bottom half     hander \u5982\u4f55\u63a5\u53d7\u6570\u636e</p> <p><code>consoleinit</code> configures two interrupt . One is receive interrupt, another is (receiving) complete interrupt.</p> <p>How to Read  (software)</p> <p><code>read</code> system call make their way through <code>consoleread</code> , <code>consoleread</code> waits for input to arrive, and store input in cons.buf.</p> <p>How UART handle input (hardware)</p> <p>user type -&gt; hardware asks for a interrupt. -&gt; trap handler( <code>trap.c</code> ) check if it is device interrupt  -&gt; devintr according to <code>scause</code> (and Plic),  calls <code>uartintr</code> . </p> <p><code>uartintr</code> read any chars to <code>consoleintr</code>. if user have typed entire line.<code>consoleintr</code> wakeup <code>consoleread</code>.</p> <p>once <code>consoleread</code> read a whole line from cons.buf, it copy contents to user space and give control back to user.</p> <p>How to write </p> <p>timerintrrupt </p> <p>only in machine mode, in <code>start.c</code> </p>"},{"location":"notes/6.s081/lab7/#_1","title":"\u5b9e\u9a8c","text":"<p>\u4e3aE1000\u7f51\u5361\u52a0\u4e00\u4e2a\u9a71\u52a8 </p> <p>\u6846\u67b6\u4ee3\u7801\u89e3\u6790\u3002\u9996\u5148\u662f <code>kernel/net.c</code> \u5b58\u653e\u662f\u4e00\u4e9b\u6709\u5173 <code>mbuf</code> \u7684 \u5e93\u51fd\u6570\uff0c\u9488\u5bf9 <code>mbufq</code> \u7684\u4e00\u4e9b\u64cd\u4f5c\u3002\u5b9e\u9a8c\u91cc\u7528\u4e0d\u5230\u3002 <code>kernel/net.h</code> \u5b58\u653e\u7684\u662f<code>mbuf</code> \u7ed3\u6784\u4f53\u7684\u5b9a\u4e49\u548c\u4e00\u4e9b\u5b8f\u51fd\u6570\u3002 <code>kernel/def_net.h</code> \u5b58\u653e\u7684\u662f\u4e00\u4e9bE1000\u5bc4\u5b58\u5668\u7684\u5b8f <code>kernel/e1000.c</code> \u5b58\u653e\u662f\u6709\u5173 e1000 \u7f51\u5361 \u521d\u59cb\u5316\uff0c\u5b58\u50a8\uff0c\u8f6c\u53d1\u7684\u51fd\u6570\u3002</p> <ul> <li>\u5b9e\u73b0 <code>e1000_tranmit</code> \u51fd\u6570</li> </ul> <p>free the last mbuf that was transmitted from that descriptor</p> <p>Q:\u4e0d\u592a\u6e05\u695a\u8fd9\u4e2a last mbuf  \u5230\u5e95\u5b58\u653e\u5728\u54ea\u91cc A:\u653e\u5728 tx_buf array</p> <p>stash away a pointer to the mbuf for later freeing.</p> <p>Q: \u8fd9\u4e2a stash away \u662f\u8981\u628a\u8fd9\u4e2abuf\u6307\u9488\u5b58\u653e\u5728\u54ea\u91cc\u5462\uff1f A: \u5b58\u653e\u5728 tx_buf array</p> <p>\u8fd0\u884c\u7a0b\u5e8f\u600e\u4e48\u6ca1\u53cd\u5e94\u3002</p>"},{"location":"notes/6.s081/lab8/","title":"Lab8","text":""},{"location":"notes/6.s081/lab8/#chapter-6-lock","title":"chapter 6 Lock","text":""},{"location":"notes/6.s081/lab8/#61-race-condition","title":"6.1 Race condition","text":"<p>Locks protect Data Item, but kill performance</p> <p><code>race condition</code> : A memory location is accessed concurrently, and at least one access is a write.</p> <p>The Lock make the critial section atomatic. The Lock protects some invariants. For example, In <code>kalloc.c</code>, the invariants are </p> <ol> <li><code>list</code> points to the first element in the linked list.</li> <li><code>next</code> points to the next element in the list.</li> </ol> <p>In function <code>push</code> , first invariant is violated during excution, thus we need lock to save the day.</p> <p>Because the lock kills the performance, we need to know how to prevent using locks and when to insert locks.</p>"},{"location":"notes/6.s081/lab8/#62-code-naive","title":"6.2 Code (naive)","text":"<p>XV6 has two type of locks <code>spinlock</code> and <code>sleeplock</code>.</p> <p>spinlock </p> <p><code>acquire</code></p> <pre><code>void\nacquire(struct spinlock *lk)\n{\n  push_off(); // disable interrupts to avoid deadlock.\n  // \u5728\u540c\u4e00\u4e2acpu\u4e0b\uff0c\u83b7\u53d6\u4e24\u6b21\u9501\uff0c\u76f4\u63a5 panic\n  if(holding(lk))\n    panic(\"acquire\");\n\n  // \u4e0d\u505c\u7684\u67e5\u770b\u662f\u4e0d\u662f\u4e0a\u9501\u4e86\uff0c\u5982\u679c\u6ca1\u6709\u4e0a\u9501\uff0c\u5c31\u83b7\u53d6\u9501\u3002\n  while(__sync_lock_test_and_set(&amp;lk-&gt;locked, 1) != 0) {\n    __sync_fetch_and_add(&amp;(lk-&gt;nts), 1);\n}\n</code></pre> <p><code>release</code> </p> <p>resemble to <code>acquire</code>, <code>release</code> clear the <code>lk-&gt;cpu</code> and then, use atomic operation to clear the lock.</p>"},{"location":"notes/6.s081/lab8/#63-using-lock","title":"6.3 Using Lock","text":"<p>Some principles</p> <ol> <li>Any time a variable can be written by a cpu, and read by another.</li> <li>A invariant involves multiple operation.</li> </ol>"},{"location":"notes/6.s081/lab8/#64-deadlock-and-lock-ordering","title":"6.4 DeadLock and lock ordering","text":"<p>Example:  Suppose there Locks A and B. Process 1 acquire lock A then B Process 2 acquure lock B then A.</p> <p>This setting may leads to deadlock. Considering the following situation. When Process 1 acquire A and waits for lock B to be release, However Process 2 acquure B and waits A to be released</p> <p></p> <p>To avoid deadlock, all code path must acquire locks in the same order.</p> <p>Avoiding deadlock is often a major factor in kernel implementation. It is difficult to get things right.</p> <ol> <li>we might know the lock we need in advance.</li> </ol>"},{"location":"notes/6.s081/lab8/#re-entrant-locks","title":"Re-entrant Locks","text":"<p>In the same cpu, If a process wants to acquire a lock again, that is, acquiring a lock that has been prevously acqured. (recursive acquiring a lock)</p> <p>XV6 didnot take this approach, but both strategy can be made to work.</p>"},{"location":"notes/6.s081/lab8/#locks-and-interrupt-handlers","title":"Locks and interrupt handlers","text":"<p>disaster - never hold the lock during interrupt, disable interrupt when holding the lock</p> <ul> <li>restore the interrupt when not poessing any lock.</li> </ul>"},{"location":"notes/6.s081/lab8/#insturction-and-memory-reorder","title":"Insturction and memory reorder","text":"<p>using sync_synchronize() to create a memory barrier to tell compiler do not reorder instruction between critical section. (between <code>acquire</code> and <code>release</code> )</p>"},{"location":"notes/6.s081/lab8/#sleep-locks","title":"sleep locks","text":"<p>\u5728\u7b49\u5f85 <code>spin_lock</code> \u7684\u65f6\u5019\uff0c\u64cd\u4f5c\u7cfb\u7edf\u4e0d\u80fd\u505a\u522b\u7684\u4e8b\u60c5\uff0c\u6bd4\u8f83\u6d6a\u8d39\u8d44\u6e90\u3002 <code>sleep lock</code> \u53ef\u4ee5\u8ba9\u4f60\u5728\u6301\u6709\u9501\u7684\u65f6\u5019\uff0c\u8c03\u7528 yield, \u5c06cpu\u8d44\u6e90\u8ba9\u7ed9\u5176\u4ed6\u8fdb\u7a0b\u3002</p> <p>sleep_lock \u6709\u4e24\u628a\u9501\uff0c\u4e00\u628a\u81ea\u65cb\u9501\uff0c\u4e00\u628a\u666e\u901a\u7684\u9501\u3002</p> <p>\u5f53\u4e00\u4e2a\u8fdb\u7a0b \u8981 \u83b7\u53d6\u4e00\u4e2a\u7761\u7720\u9501\u7684\u65f6\u5019\u3002 1. \u9996\u5148\u67e5\u770b\u666e\u901a\u7684\u9501\u6709\u6ca1\u6709\u4e0a\u9501\uff0c\u5982\u679c\u6709, \u8c03\u7528sleep.     - sleep \u9996\u5148\u7ed9\u8fdb\u7a0b\u4e0a\u9501     - \u518d\u91ca\u653e\u81ea\u65cb\u9501     - \u6807\u8bb0\u8fdb\u7a0b\u7684\u72b6\u6001\u4e3a SLEEPING \u540e     - \u8c03\u7528 yield \u628a\u8d44\u6e90\u8ba9\u7ed9\u5176\u4ed6\u8fdb\u7a0b     - \u4e4b\u540e\uff0c\u6062\u590d\u6267\u884c\u7684\u65f6\u5019\uff0c\u91cd\u65b0\u83b7\u53d6\u81ea\u65cb\u9501\u3002     - \u8bbe\u7f6e\u666e\u901a\u9501\u4e3a\u4e0a\u9501\u72b6\u6001     - \u91ca\u653e\u81ea\u65cb\u9501</p>"},{"location":"notes/6.s081/lab8/#69-real-world","title":"6.9 Real world","text":"<ul> <li>Pthread</li> <li>Lock-free design</li> </ul>"},{"location":"notes/6.s081/lab8/#_1","title":"\u5b9e\u9a8c","text":""},{"location":"notes/6.s081/lab8/#memory-allocator","title":"memory allocator","text":"<p>\u6309\u7167\u6587\u6863\u91cc\u8bf4\u7684,\u5c1d\u8bd5\u4e3a XV6 \u7684 \u5185\u5b58\u5206\u914d\u5668\u8fdb\u884c\u4f18\u5316.\u4f7f\u5f97\u6bcf\u4e00\u4e2a cpu \u6709\u7740\u81ea\u5df1\u7684\u7a7a\u95f2\u94fe\u8868. \u81ea\u5df1\u7684\u7a7a\u95f2\u94fe\u8868\u4e0d\u591f\u518d\u4ece\u5176\u4ed6cpu\u90a3\u5077\u4e00\u70b9. </p> <p>\u521d\u770b\u8bf4\u660e, \u603b\u7ed3\u4e00\u4e0b\u96be\u70b9</p> <ul> <li>\u5982\u4f55\u5224\u65adcpu\u7684\u4e2a\u6570? NCPU</li> <li> <p>\u5206\u914d\u7ed9\u6bcf\u4e00\u4e2acpu\u7a7a\u95f4\u7684\u5927\u5c0f\u662f\u591a\u5c11? </p> <p>naive thought \u6bcf\u4e00\u4e2acpu\u5206\u5230 MEM / NCPU \u5927\u5c0f\u5185\u5b58 \u4f46\u662f\u6587\u6863\u91cc\u8bf4\u5f53\u4e00\u4e2a\u8fdb\u7a0b\u8c03\u7528 <code>freerange</code> \u65f6,\u628a\u6240\u6709\u7684\u5185\u5b58\u90fd\u7ed9\u5b83, \u5c31\u4e0d\u77e5\u9053\u600e\u4e48\u60f3\u7684. - \u5982\u679c\u53ef\u4ee5\u501f\u5185\u5b58\u7684\u8bdd,\u600e\u6837\u624d\u80fd\u786e\u5b9a\u67d0\u4e00\u5feb\u5185\u5b58\u9875\u7684\u5927\u5c0f\u5462?</p> <p>naive thought: \u589e\u52a0\u4e00\u4e2a <code>owner</code> \u57df,\u8868\u793a\u8fd9\u4e2a\u5185\u5b58\u662f\u501f\u7684 id \u4e3a <code>owner</code> cpu\u7684. \u4f46\u662f, \u5728\u91ca\u653e\u5185\u5b58\u7684\u65f6\u5019, \u7531\u4e8e\u66f4\u6539\u7684\u662f owner \u7684\u5185\u5b58\u94fe\u8868\u7ed3\u6784, \u53ef\u80fd\u4f1a\u51fa\u73b0 <code>race condition</code> \u7684\u60c5\u51b5,\u4e0d\u77e5\u9053\u600e\u4e48\u52a0\u9501\u907f\u514d. \u56e0\u4e3a\u6b63\u5e38\u60c5\u51b5\u4e0b\u662f\u4e0d\u80fd\u7528\u9501\u6765\u8fdb\u884c\u540c\u6b65\u7684.\u9047\u5230\u5185\u5b58\u4e0d\u591f\u7684\u60c5\u51b5,\u518d\u83b7\u53d6\u9501\u4e5f\u6ca1\u6709\u610f\u4e49.</p> </li> </ul>"},{"location":"notes/6.s081/lab9/","title":"Lab9","text":""},{"location":"notes/6.s081/lab9/#file-system","title":"File System","text":""},{"location":"notes/6.s081/lab9/#81","title":"8.1","text":"<p>some challenge for the file system</p> <ul> <li>data structrue to represnt file and directory</li> <li>handle crash </li> <li>concurrency</li> <li> <p>fast I/O</p> \u4e03\u5c42\u6a21\u578b \u63cf\u8ff0 File Descriptor \u62bd\u8c61Unix\u7cfb\u7edf\u8d44\u6e90\uff0c\u6bd4\u5982 pipe, files, devices \u7b49 Pathname \u8def\u5f84\u67e5\u627e Directory \u4e00\u79cd\u7279\u6b8a\u7684\u6587\u4ef6 Inode \u62bd\u8c61\u6587\u4ef6 Logging \u5141\u8bb8\u9ad8\u5c42\u5c06\u591a\u4e2a update \u5408\u5e76\u5230\u4e00\u4e2a commit Buffer cache \u7f13\u5b58 block, \u5e76\u4e14\u5c06\u5bf9\u7f13\u5b58\u7684\u66f4\u6539\u540c\u6b65\u5230 disk Disk \u4ece\u786c\u76d8\u8bfb\u53d6 block </li> </ul> <p>blocks(sectors)</p> <p>The blocks size file system uses is usally a multiple of sector size disk uses. </p> <p>Xv6 \u628a\u4ece\u78c1\u76d8\u8bfb\u53d6\u5230\u7684\u6570\u636e\u5b58\u653e\u5728 struct buf \u91cc\u3002(might be out of sync)</p> <p>\u6587\u4ef6\u7cfb\u7edf\u5fc5\u987b\u89c4\u5212\u597d\u5728\u54ea\u91cc\u5b58\u653e\u6570\u636e\u3002\u4e3a\u6b64\uff0c\u6587\u4ef6\u7cfb\u7edf\u5c06\u786c\u76d8\u5206\u6210\u4e86\u51e0\u90e8\u5206.</p> \u6247\u533a\u53f7 \u63cf\u8ff0 Block 0 \u4e0d\u4f7f\u7528 Block 1 superblock, stores metadata about file system Block 2 - XX Hold Log After log inodes After inodes bitmap blocks tracking which block are in use After data block <p>buffer cache </p> <ol> <li>\u540c\u6b65\u66f4\u6539</li> <li>\u7f13\u5b58\u6700\u5e38\u8bbf\u95ee\u5feb (LRU)</li> </ol> <p><code>bread</code> and <code>bwrite</code> </p> <p>bread(dev, blockno) read data from disk to block. It calls bget search the doubled linkedlist for cached data. If not found, will recycle a not-used block.</p> <p>bwrite write data in block to disk</p> <p><code>brelse</code> put the used buffer to the head of the doubled linkedlist.</p> <p>Logging Layer </p> <p>crash recovery. use Log to make the process atomic </p> <p>\u5728\u628a\u5185\u5bb9\u5199\u5165\u78c1\u76d8\u524d\uff0c\u5148\u5c06\u6240\u6709 \u78c1\u76d8\u5199\u5165\u7684\u63cf\u8ff0\u4fe1\u606f \u5199\u5165\u786c\u76d8\u3002 \u8fd9\u6837\u4e00\u6765\uff0c\u5982\u679c\u662fLog\u8fd8\u6ca1\u6709\u5199\u5165\u5b8c\u6210\u65f6\uff0c\u7cfb\u7edf\u5d29\u6e83\u3002\u91cd\u542f\u540e\uff0c\u7cfb\u7edf\u4f1a\u5ffd\u89c6\u8fd9\u4e2a\u4e0d\u5168\u7684\u65e5\u5fd7\u4fe1\u606f\u3002 \u5982\u679c\u662f\u5199\u5165\u78c1\u76d8\u8fc7\u7a0b\u4e2d\u53d1\u751f\u5d29\u6e83\uff0c\u90a3\u4e48\u7cfb\u7edf\u4f1a\u6839\u636e\u65e5\u5fd7\u6587\u4ef6\u91cd\u65b0\u64cd\u4f5c\u4e00\u904d\u3002</p> <p>Log design </p> <p>Group commit. squash multiple operation into one commits to save disk access time</p> <p>\u7531\u4e8e Log \u7684\u8bbe\u8ba1\u5bfc\u81f4\u6240\u6709\u7684 \u7cfb\u7edf\u8c03\u7528\u4e00\u6b21\u5411\u78c1\u76d8\u5199\u5165\u7684\u5185\u5bb9\u4e0d\u80fd\u8d85\u8fc7 \u5206\u914d\u7ed9 Log \u7684\u7f13\u5b58\u7a7a\u95f4 <code>write</code> \u7cfb\u7edf\u8c03\u7528\u5c31\u5fc5\u987b\u5c06\u5bf9\u5927\u6587\u4ef6\u7684\u5199\u5165\u62c6\u5206\u6210\u591a\u4e2a operation.</p> <p>code: Loging </p> <p><code>begin_op</code> \u7b49\u5f85\u6587\u4ef6\u7cfb\u7edf\u4e0d\u518d\u8fdb\u884c <code>commit</code> \uff0c\u4e14\u6709\u7a7a\u4f59\u7684 Log \u7a7a\u95f4\u3002</p> <p><code>log_write</code> \u5c06\u8981\u66f4\u6539\u7684\u6247\u533a\u53f7\u5199\u5165\u5185\u5b58, \u5e76\u4e14\u5bf9\u8fd9\u4e2a\u6247\u533a\u7684\u8ba1\u6570\u5668\u52a0\u4e00\u3002\u8003\u8651\u5230\u6211\u4eec\u53ef\u80fd\u5bf9\u591a\u6b21\u5bf9\u76f8\u540c\u7684\u6247\u533a\u8fdb\u884c\u5199\u5165\uff0c\u589e\u52a0\u4e86\u4e00\u4e2a <code>absorption</code> \u673a\u5236, \u5c31\u662f\u5faa\u73af\u904d\u5386 log \u6570\u7ec4\uff0c\u770b\u4e00\u4e0b\u4e4b\u524d\u662f\u5426\u5df2\u7ecf\u4fdd\u5b58\u4e86\u76ee\u524d\u60f3\u8981\u66f4\u6539\u7684\u6247\u533a\u53f7\u3002</p> <p><code>end_op</code> \u63d0\u4ea4\u66f4\u6539\u3002</p> <p>block allocator </p> <p>balloc and bfree</p> <p>Inode layer </p> <p>\u4e24\u79cd inode. - \u50a8\u5b58\u78c1\u76d8\u6570\u636e\u7684\u6570\u636e\u7ed3\u6784\uff0c\u6587\u4ef6\u5927\u5c0f\u3001\u7c7b\u578b\u3001\u4ee5\u53ca\u50a8\u5b58\u7684\u4f4d\u7f6e - \u50a8\u5b58\u5185\u5b58\u4e2d\u7684\u6570\u636e\u7ed3\u6784\uff0c\u78c1\u76d8\u4fe1\u606f+\u64cd\u4f5c\u7cfb\u7edf\u9644\u52a0\u4e0a\u7684\u989d\u5916\u4fe1\u606f</p> <p>dinode </p> <pre><code>struct dinode {\n  short type;           // File type\n  short major;          // Major device number (T_DEVICE only)\n  short minor;          // Minor device number (T_DEVICE only)\n  short nlink;          // Number of links to inode in file system\n  uint size;            // Size of file (bytes)\n  uint addrs[NDIRECT+1];   // Data block addresses\n};\n</code></pre> <ul> <li>The type field distin-guishes between files, directories, and special files (devices). A type of zero indicates that an on-disk inode is free. </li> <li>The nlink field counts the number of directory entries that refer to this inode, in order to recognize when the on-disk inode and its data blocks should be freed.</li> <li>The size field records the number of bytes of content in the file. </li> <li>The addrs array records the block numbers of the disk blocks holding the file\u2019s content.</li> </ul> <p><code>itable</code> stores active inodes</p> <p>inode is a in-memory copy of <code>dinode</code> </p> <ul> <li><code>iget</code> <code>iput</code> function modifies the ref count of i <code>inode</code> </li> </ul> <p>Invariants</p> <ul> <li><code>itable.lock</code> protests a inode is present in itable only once and <code>ref</code> is only modified by one process</li> <li><code>sleeplock</code> ensures exclusive access to inode's fields.</li> <li><code>ref</code> maintain inode in itable when ref != 0  (count c pointers)</li> <li><code>nlink</code> won't free a inode when nlink != 0 (count directory reference)</li> </ul> <p>code Inodes  Call <code>ialloc</code> to allocat a new inode. ialloc loops over the inode structures, looking for one that is marked free (type == 0). Once found, it calls <code>iget</code> to get the corresponding entry from <code>itable</code></p> <p><code>ilock</code> :Before reading the metadata from the file, we must call <code>ilock</code> . </p> <p><code>iput</code> : decrement the referecnt pointer. If the <code>ref</code>  and <code>nlink</code> is  both less that 1, it calls <code>itrunk</code> to remove the data.</p> <p>Inode content (data) </p> <p>dinode \u50a8\u5b58\u6570\u636e\u7684\u7ed3\u6784\uff1a</p> <p>\u6570\u636e\u662f\u5206\u6bb5\u5b58\u50a8\u7684\uff0c\u4e00\u4e2a\u6570\u636e\u6bb5\u7684\u5927\u5c0f\u662f 1024 \u5b57\u8282\u3002 dinode \u5c06\u6bcf\u4e00\u6bb5\u7684\u8d77\u59cb\u5730\u5740\u5b58\u653e\u5728\u6570\u7ec4 <code>addr</code> \u4e2d\u3002 \u6570\u636e\u6bb5\u5206\u4e3a\u4e24\u7c7b\uff0c12\u4e2a\u76f4\u63a5\u8bbf\u95ee\u6bb5(NDIRECT)\u548c256\u4e2a\u95f4\u63a5\u8bbf\u95ee\u6bb5(NINDIRECT)\u3002addr[1~12] \u5b58\u653e\u7684\u662f\u76f4\u63a5\u8bbf\u95ee\u6bb5\u7684\u5176\u5b9e\u5730\u5740\uff0caddr[13] \u5b58\u653e\u7684\u662f\u95f4\u63a5\u8bbf\u95ee\u6bb5\u7684\u8d77\u59cb\u5730\u5740\u3002</p> <p><code>bmap</code> \u4e3a inode \u83b7\u53d6\u67d0\u4e00\u4e2a\u6570\u636e\u6bb5\u7684\u4fe1\u606f\u3002(\u5fc5\u8981\u65f6\u8c03\u7528 <code>balloc</code> \u5206\u914d\u7a7a\u95f4)</p> <p>Code: directory layer </p> <p>\u76ee\u5f55\u662f\u7279\u6b8a\u7684inode\uff0c\u5b83\u7531\u8bb8\u591a\u4e2a directory entry \u6784\u6210\uff0c \u6bcf\u4e00\u4e2aentry \u90fd\u662f <code>struct dirent</code> </p> <p><code>dirlookup</code> <code>dirlink</code> </p> <p>Code: Path names </p> <p>involves a succession of calls to <code>dirlookup</code> </p> <p>File Descriptor Layer</p> <p>every open file is <code>struct file</code>, which is wrapper around either <code>PIPE</code> or <code>INODE</code> or <code>DEVICE</code> . </p> <p>All the open files are kept in the global open files <code>ftable</code> </p> <p><code>filealloc</code> \u8ba1\u6570\u5668\u7f6e1</p> <p><code>filedup</code> \u8ba1\u6570\u5668+1</p> <p><code>fileclose</code> \u8ba1\u6570\u5668-1, \u5982\u679c\u8c03\u52300\uff0c\u91ca\u653e\u8d44\u6e90</p> <p><code>filestat</code> \u628ainode\u7684\u4fe1\u606f\u4f20\u5230 \u7528\u6237\u5730\u5740\u7a7a\u95f4</p> <p><code>fileread</code> </p> <p><code>filewrite</code> </p> <p>Code System calls </p> <p><code>sys_link</code> </p> <p>creat new name for existing inodes.</p> <p><code>create</code> </p> <p>create new name for new inodes.</p>"},{"location":"notes/6.s081/lab9/#lab","title":"Lab","text":""},{"location":"notes/6.s081/lab9/#big-file","title":"Big File","text":"<p>\u5b9e\u73b0\u4e00\u4e2a\u4e8c\u7ea7 buffer. \u4e0d\u96be, \u5c31\u662f\u8981\u6ce8\u610f\u5bf9 buffer \u7684\u5185\u5bb9\u8fdb\u884c\u66f4\u6539\u540e\uff0c\u8981\u5c06\u6539\u52a8\u5199\u5165 log. \u7136\u540e bread \u548c brelse \u6210\u5bf9\u51fa\u73b0\u3002bread \u4e00\u4e2a block, \u8981 brelse \u540e\u624d\u80fd bread \u4e0b\u4e00\u4e2a buffer.</p>"},{"location":"notes/6.s081/lab9/#symbolic-links","title":"Symbolic links","text":"<ol> <li>\u600e\u6837\u521b\u9020\u4e00\u4e2a\u5408\u6cd5\u7684 symbolic links. </li> </ol> <p>naive thought: use namei find the inode corresponding to the path, using ialloc to allocate a new inode for symbolic link.</p> <ul> <li>we already have <code>create</code> function to create a new inode.</li> </ul> <p>error cases:     1. src do not exists     2. target is not vaild     3. src is directory or a symblic link</p> <p>Q: inode \u672c\u8eab\u81ea\u5df1\u6ca1\u6709\u529e\u6cd5 \u50a8\u5b58\u504f\u79fb\u91cf\uff0c\u90a3\u6211\u8981\u628a\u5b57\u7b26\u4e32\u653e\u5728\u54ea\u91cc\u5462</p> <p>A: inode \u4e0d\u9700\u8981\u50a8\u5b58\u504f\u79fb\u91cf\uff0c\u5b83\u53ea\u5199\u5165\u4e00\u6b21\u6570\u636e\u5440\u3002</p> <p>Q: \u4ec0\u4e48\u65f6\u5019 iput \u548c iunlock. iput \u662f\u4ec0\u4e48\u610f\u601d\u3002</p> <p>iput: \u5f53\u6709\u4e00\u4e2a\u6307\u9488\uff0c\u6307\u5411\u4e00\u4e2a inode \u65f6\uff0cinode \u7684 ref count \u4f1a\u81ea\u589e\uff1b\u5f53\u8fd9\u4e2a\u6307\u9488\u4e0d\u518d\u88ab\u4f7f\u7528\u7684\u65f6\u5019\uff0c\u5c31\u9700\u8981\u8c03\u7528 iput iunlock: \u662f\u7528\u6765\u7ef4\u62a4 inode \u7684\u4e0d\u53d8\u91cf\u7684\u3002\u518d\u9700\u8981\u66f4\u6539\u7684 inode \u7684\u5185\u5bb9\u65f6\uff0c\u9700\u8981\u52a0\u9501\u3002\u4e0d\u518d\u66f4\u6539\u5c31\u91ca\u653e\u3002</p> <p>\u901a\u5e38 iput \u548c iunlock \u662f\u4e00\u8d77\u4f7f\u7528\u7684\uff0c\u4e8e\u662f\u5c31\u6709\u4e86 iunlockput</p> <p>Q: \u4e3a\u4ec0\u4e48 create \u65f6\uff0c\u4e0d\u9700\u8981\u91ca\u653e\u9501\uff1b</p> <p>A: \u56e0\u4e3a create \u662f\u4e2a static \u51fd\u6570\uff0c\u53ea\u5728 sys_file.c \u5185\u90e8\u4f7f\u7528\uff0c\u8c03\u7528 create \u7684 \u51fd\u6570\u8d1f\u8d23\u91ca\u653e\u9501\u3002</p> <p>Q: \u4e3a\u4ec0\u4e48 brelse \u5728 bmap \u65f6\uff0c\u53ef\u4ee5\u7d27\u63a5\u7740\u653e\u5728\u7b2c\u4e00\u4e2a bread \u4e4b\u540e\uff0c\u800c\u5728 itrunk \u4e2d\uff0c\u5c31\u4f1a\u51fa\u73b0 <code>free free block</code> \u7684\u9519\u8bef\u5462\uff1f</p> <p>A: \u56e0\u4e3a brelse \u4f1a\u9012\u589e bread \u83b7\u53d6 block \u7684 ref\u3002\u800c bfree \u4f1a\u56de\u6536ref count \u4e3a 0 \u7684block\u3002\u5728 bmap \u4e2d\uff0c\u7531\u4e8e\u6ca1\u6709\u8c03\u7528 bfree, \u6240\u4ee5\u4e0d\u4f1a\u51fa\u73b0\u63d0\u524d\u56de\u6536\u7684\u60c5\u51b5\uff0c\u800c\u5728 itrunk \u4e2d\uff0c<code>ip-&gt;addr[NDIRECT + 1]</code>\u6240\u6307\u5411\u7684block\u53ef\u80fd\u5728\u6267\u884c bfree \u4e4b\u524d\uff0c\u5c31\u5df2\u7ecf\u88ab\u56de\u6536\u4e86\u3002\u6700\u540e\u518d\u6b21\u6267\u884c <code>bfree(ip-&gt;addr[NDIRECT + 1])</code> \u5c31\u51fa\u9519\u4e86\u3002</p>"},{"location":"notes/cs106l/operator/","title":"Operator","text":""},{"location":"notes/cs106l/operator/#operator-overloading","title":"operator overloading","text":"<p>There are two types of overloading, one is Member function overloading,  that is,  the overloading funtion belongs to the class(instance),  this overloading funcion overloading can directly access inner private varible</p> <pre><code>//fraction.h\n\nbool operator &lt; (const Fraction&amp; rhs) const;\n</code></pre> <p>The above funtion override the &lt; operator, takes the  variable that is on the right hand side of the operator as  arugmnet, compare to it, and return the result. <pre><code>//fraction.cpp\n// because it is a member function, we need to add `Fraction::`\n// to specity the namespace of the faction (differ funtion from different class)\nbool Fraction::operator &lt; (const Fraction&amp; rhs) const {\nreturn rhs.denom * num &lt; rhs.num * denom;\n}\n</code></pre> The other is <code>non member funtion</code>, You may wonder why we need <code>non memeber function</code>. Well, consider a stiatuon, when  you want to compare two different types   - e.g. we want to compare a double and a Fraction</p> <p>we cannot use member funtion since the LHS is not a fraction at all. OK, we then introduce how to write <code>non member function</code> <pre><code>friend Fraction&amp; operator += (Fraction&amp; lhs, const Fraction&amp; rhs);\nfriend bool operator &lt; (const double&amp; lhs, const Fraction&amp; rhs);\nfriend std::ostream&amp; operator &lt;&lt; (std::ostream&amp; out, const Fraction&amp; target);\n</code></pre> since non-member function does not belongs to the class, it is not possible for it to directly access private varivable  of the arugment passed in. To achieve this goal, we need to add a <code>friend</code> descripnator in function declaration</p> <p>do not add <code>friend</code>   in the function implementation</p> <pre><code>Fraction&amp; operator += (Fraction&amp; lhs, const Fraction&amp; rhs) {\nlhs.num = lhs.num * rhs.denom + lhs.denom * rhs.num;\nlhs.denom = lhs.denom * rhs.denom;\nlhs.reduce();\nreturn lhs;\n}\n// Implementing the * operation in a non-member function\nbool operator &lt; (const double&amp; lhs, const Fraction&amp; rhs) {\nreturn lhs &lt; (double)rhs.num / rhs.denom;\n}\n// Overloading &lt;&lt; to allow for passing Fractions into streams.\n\nstd::ostream&amp; operator &lt;&lt; (std::ostream&amp; out, const Fraction&amp; target) {\nout &lt;&lt; target.num &lt;&lt; \"/\" &lt;&lt; target.denom;\nreturn out;\n}\n</code></pre>"},{"location":"notes/cs106l/operator/#special-member-function","title":"special member function","text":"<p><pre><code>class Widget {\npublic:\nWidget(); // default constructor\nWidget (const Widget&amp; w); // copy constructor\nWidget&amp; operator = (const Widget&amp; w); // copy assignment operator\n~Widget(); // destructor\nWidget (Widget&amp;&amp; rhs); // move constructor\nWidget&amp; operator = (Widget&amp;&amp; rhs); // move assignment operator\n}\n</code></pre> - \u9ed8\u8ba4\u6784\u9020\u5668 - \u62f7\u8d1d\u6784\u9020\u5668  (\u4f20\u53c2\u7684\u65f6\u5019) -</p>"},{"location":"notes/cs106l/operator/#difference-between-assignment-and-initilize-list","title":"difference between assignment and initilize list","text":"<p>When you initialize fields via initializer list the constructors will be called once. If you use the assignment then the fields will be first initialized with default constructors  and then reassigned (via assignment operator) with actual values.</p>"},{"location":"notes/cs106l/operator/#on-delete-and-on-default","title":"on delete and on default","text":"<ul> <li><code>on delete</code> tell compiliers do not generate SMF functions for we want to write our own</li> <li><code>on default</code> tell compiliers keep SMF functions when we want to write our own</li> </ul>"},{"location":"notes/cs106l/template_function/","title":"About template","text":"<ul> <li> <p>How to write template function in a class</p> <p>write implematation  in the header file</p> </li> <li> <p>vscode \u4e0d\u80fd\u8fdb\u884c\u4ee3\u7801\u8865\u5168</p> <ol> <li> <p>\u53ef\u80fd\u662finclude \u7684\u8def\u5f84\u6ca1\u6709\u8bbe\u7f6e\u597d</p> <p>\u4f7f\u7528 find . -name \"cpr*\" \u627e\u5230\u5f53\u524d\u6587\u4ef6\u4e0b\u5305\u542bcpr \u7684\u8def\u5f84</p> <p>\u5728c++ \u8bbe\u7f6e\u4e2d\uff0c\u5728include path \u4e2d\u6dfb\u52a0 </p> <p>\u200b 2. cmake \u62a5\u9519 </p> </li> <li> <p>cpr_Dir not set  </p> </li> </ol> <p>\u5728 cmakelist \u91cc \u52a0\u4e0a <code>set(cpr_DIR \"./vcpkg/installed/x64-linux/share/cpr\")</code>\u200b * Could NOT find CURL (missing: CURL_LIBRARY CURL_INCLUDE_DIR) <code>sudo apt update &amp;&amp; sudo apt upgrade &amp;&amp; sudo apt install curl &amp;&amp; sudo apt-get install libcurl4-openssl-dev</code>\u200b</p> </li> </ul>"},{"location":"notes/cs106l/template_function/#_1","title":"\u914d\u7f6e\u95ee\u9898","text":""},{"location":"notes/cs106l/template_function/#lec-56-stl-lib","title":"Lec 5,6 STL lib","text":""},{"location":"notes/cs106l/template_function/#sequence-data-structure","title":"sequence data structure","text":""},{"location":"notes/cs106l/template_function/#associative-data-structure","title":"associative data structure","text":"<ul> <li>map, set</li> <li> <p>shared method:</p> </li> <li> <p>count(key) : \u7edf\u8ba1 \u542b\u6709key\u7684\u5143\u7d20\u6570\u91cf</p> </li> <li>find(key):   \u8fd4\u56de \u6307\u5411 key\u7684\u8fed\u4ee3\u5668</li> </ul>"},{"location":"notes/cs106l/template_function/#std-lib","title":"std lib","text":"<pre><code>std::find() return iterator\nstd::sort(begin(), end()) return none\nstd::fill(begin(), end(), 10) return none\nstd::copy(begin(), end(), container) return none\nstd::lower_bound()\nstd::upper_bound()\nstd::accmulate(begin, end, 0 / 0.0) // \u6ce8\u610f \u6d6e\u70b9\u6570\u4f7f\u7528 0.0\n</code></pre>"},{"location":"notes/cs106l/template_function/#bug","title":"bug","text":"<p>std::find \u51fd\u6570\u9700\u8981 algorthim \u5934\u6587\u4ef6</p>"},{"location":"notes/cs106l/template_function/#lec-6-classesp","title":"Lec 6 classesp","text":""},{"location":"notes/cs106l/template_function/#a-bug","title":"a bug","text":"<ul> <li>\u51fa\u73b0\u7684\u95ee\u9898</li> </ul> <pre><code>student.cpp:5:18: error: definition of implicitly-declared \u2018Student::Student()\u2019\n5 | Student::Student() {\n|                  ^\n./build.sh: 4: ./main2: not found\n</code></pre> <ul> <li>\u5728 .cpp \u6587\u4ef6\u5b9a\u4e49\u4e86 \u6784\u9020\u5668\uff0c\u4f46\u662f\u6ca1\u6709\u5728\u5934\u6587\u4ef6\u5b9a\u4e49</li> </ul>"},{"location":"notes/cs106l/template_function/#a-tip","title":"a tip","text":"<p>\u6211\u4eec\u4e0d\u9700\u8981\u624b\u52a8\u6267\u884c ~constructor \u5f53\u6ca1\u6709\u4efb\u4f55\u4e00\u4e2a\u5143\u7d20\u6307\u5411\u8fd9\u4e2a\u5bf9\u8c61\u65f6\uff0c\u7cfb\u7edf\u4f1a\u81ea\u52a8\u9500\u6bc1</p>"},{"location":"notes/cs106l/template_function/#lec-7-template","title":"Lec 7 template","text":"<ul> <li>class / typename</li> <li>\u4e3a \u6cdb\u578b\u7c7b \u5199 \u6cdb\u578b\u51fd\u6570\u7684\u65f6\u5019\uff0c\u547d\u540d\u7a7a\u95f4\u8981\u52a0\u4e0a generic typenames</li> <li>\u5199\u6cdb\u578b\u7c7b\u65f6\uff0c\u8981\u5728.h \u6587\u4ef6\u91cc \u5f15\u7528.cpp \u6587\u4ef6\uff0c\u800c\u4e0d\u662f \u5728.cpp\u6587\u4ef6\u91cc\u5f15\u7528 .h \u6587\u4ef6 (multiple definiton)</li> </ul>"},{"location":"notes/cs106l/template_function/#some-tips","title":"some tips","text":"<ul> <li>Add template before class definition in .h 1. <p>\u5728\u5934\u6587\u4ef6\u4e2d\u7c7b\u7684\u5b9a\u4e49\u524d\u52a0\u4e0a template </p> <ul> <li>Add templatebefore all function   signatures in .cpp <p>\u5728\u6a21\u677f\u7c7b\u7684\u6bcf\u4e00\u4e2a\u51fd\u6570\u524d\u52a0\u4e0a \u6cdb\u578b\u58f0\u660e</p> <ul> <li>When returning nested types (like iterator types), put typename   ClassName::member_type as return type, not   just member_type <p>\u5982\u679c\u8fd4\u56de\u7c7b\u578b(we call it return type) \u672c\u8eab\u4e5f\u5305\u542b\u6cdb\u578b\uff0c\u6211\u4eec\u9700\u8981\u5c06\u5176\u6539\u5199\u4e3a (typename className::return_type)</p> <pre><code>//\u6bd4\u5982\ntemplate &lt;typename T&gt;\niterator myVector&lt;T&gt;::cbegin() const {\nreturn elem;  }\n\n||\n||\ntemplate &lt;typename T&gt;\ntypename myVector&lt;T&gt;::iterator myVector&lt;T&gt;::cbegin() const {\nreturn elem;  }\n</code></pre> <ul> <li>Templates don\u2019t emit code until instantiated, so #include the   .cpp file in the .h file, not the other way around!</li> </ul> <p>\u5728\u5934\u6587\u4ef6\u672b\u5c3e\u5305\u542b .cpp \u6587\u4ef6\uff0c\u4e0d\u8981\u5728.cpp \u6587\u4ef6\u4e2d\u5305\u542b\u5934\u6587\u4ef6</p>"},{"location":"notes/cs106l/template_function/#const-problem","title":"const problem","text":"<ul> <li>\u5982\u679c\u6210\u5458\u51fd\u6570\u6ca1\u6709\u6539\u53d8\u7c7b\u5185\u5c5e\u6027\u7684\u503c\uff0c\u5219\u5e94\u8be5\u7ed9\u5176\u52a0\u4e0aconst \u6807\u7b7e</li> <li>const iter: \u53ef\u4ee5\u6539\u53d8 iter \u6240\u6307\u5411\u7684\u503c\uff0c\u4e0d\u80fd\u6539\u53d8\u6307\u5411</li> <li>const cons_iter \u53ef\u4ee5\u6539\u53d8\u6307\u5411\uff0c\u4e0d\u80fd\u6539\u53d8\u503c</li> </ul>"}]}